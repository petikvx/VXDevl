<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
  <meta name="COPYRIGHT" content="Copyright 2002 Ronald B. Standler">
  <meta name="AUTHOR" content="Dr. Ronald B. Standler">
  <meta name="DESCRIPTION" content="details of attacks by computer viruses
   and worms, and the legal consequences">
  <meta name="KEYWORDS" content="address, addresses, arrest, attachment,
   attack, attacks, author, authors, Badtrans,
   code, CodeRed, computer, computers, consequences, conviction,
   crime, criminal, criminals,
   damage, email, e-mail, harm, harms, history,
   ILOVEYOU, infect, infected, injury, injuries, internet, Klez,
   law, laws, legal, letter, love, loveletter,
   mail, malicious, Melissa, Microsoft, Nimda, perpetrator,
   program, programs, propagate, propagates, propagation, punish, punishment,
   red, Ronald, Sircam, software, Standler,
   victim, victims, virus, viruses, worm, worms">
  <meta http-equiv="Content-type" content="text/html; charset=US-ASCII">
<title>Examples of Malicious Computer Programs</title></head>

<body alink="#990000" bgcolor="#dddddd" link="#0000ff" text="#000000" vlink="#990000">

<h1 align="center">Examples of Malicious Computer Programs</h1>
<h2>Copyright 2002 by Ronald B. Standler</h2>

<h2>Table of Contents</h2><tt>
<a href="#anchor000001">Introduction</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor000011">"author did not know" is specious defense</a><br>
<a href="#anchor111111">Early Examples</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor111111">Brain Virus</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor111200">Lehigh Virus</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor111300">Chrisma Worm</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor111400">Morris Worm</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchorMBDF">MBDF Virus</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor111500">Pathogen Virus</a><br>
<a href="#anchor222222">Melissa Virus</a><br>
<a href="#anchor333333">ILOVEYOU Worm</a><br>
<a href="#anchor444444">Anna Worm</a><br>
<a href="#anchor555000">Three Worms:</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor555100">CodeRed</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor555200">Sircam</a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a href="#anchor555300">Nimda</a><br>
<a href="#anchor555555">BadTrans.B Worm</a><br>
<a href="#anchor666666">Klez</a><br>
<a href="#anchor777777">recent malicious programs</a><br>
<br>
<a href="#anchor999900">Economic Damage</a><br>
<a href="#anchor999950">Sources of Information</a><br>
<a href="#anchor999999">Conclusion</a><br>
</tt><br>
<hr align="left"><a name="anchor000001"></a>
<h2 align="center">Introduction</h2>

This essay contains a description of several
famous malicious computer programs (e.g., computer viruses and worms)
that caused extensive harm, and it reviews
the legal consequences of each incident,
including the nonexistent or lenient punishment of the program's author.
<br><br>
It is <i>not</i> my intention to provide information on
threats by current malicious programs: this essay is only
a historical document.  (You can find information on current threats at
<a href="http://www.rbs2.com/cvict.htm#anchor888888">websites</a> operated by vendors of
anti-virus&nbsp;software.)
<br><br>
There are three reasons to understand past malicious programs:<ul>
<li>Learning how past incidents caused damage <i>may</i> help you
    protect your computer from future damage.  I&nbsp;say <i>may,</i> because
    new types of threats are continually emerging.
<br><br>
</li><li>Because the law reacts to past events, learning about past harmful incidents
    shows us how the law should be corrected to respond appropriately to
    the new crimes of writing and distributing malicious computer programs.
<br><br>
<a name="anchorConvictions"></a>
</li><li>In May 2002, the Norton Anti-Virus software for Windows operating systems
    detected about 61000 malicious programs.
    Astoundingly, there have been criminal prosecutions and convictions
    of the author(s) of <i>only five</i> malicious programs, all of
    which are described below:<ol>
    <li>the <a href="#anchor111400">Morris worm</a> released in 1988,
    </li><li>the author and distributors of the <a href="#anchorMBDF">MBDF virus</a>,
    </li><li>the author of the <a href="#anchor111550">Pathogen virus</a>,
    </li><li>the author of the <a href="#anchor222250">Melissa virus</a>, and
    </li><li>the author of the <a href="#anchor444450">Anna worm</a>.
    </li></ol>
    I&nbsp;hope that when people read this essay and become aware of
    both the malicious design and great harm caused by computer viruses
    and worms, readers will urge their legislators:<ol type="A">
    <li>to enact criminal statutes against authors of computer
        viruses and worms, with punishment to reflect the damage done
        by those authors, <i>and</i>
    </li><li>to allocate more money to the police for finding and arresting
        the authors of malicious computer programs.</li></ol>
</li></ul><br>
I have not cited a source for each fact mentioned in this essay,
because most of these facts have been reported at many different sources,
and are well known to computer experts who are familiar with viruses and worms.
(I do cite a source for facts that are either not well known or controversial.)
Further, this essay is not a formal scholarly document, with numerous
citations, but only an informative review intended for
attorneys, legislators, the general&nbsp;public,
students, businessmen, etc.
Some general sources are mentioned <a href="#anchor999950">later</a>.
<br><br>
<a name="anchor000011"></a>
<h3 align="center">Author did not know ....</h3>

The most common excuse made by criminal defense attorneys who
represent authors of computer worms and viruses is that their
client did not know how rapidly the worm or virus would spread.
Because this excuse occurs in several of the cases presented below,
let's discuss it at the beginning.
<br><br>
Such an excuse might be plausible to someone who had no&nbsp;understanding
of the Internet and computer programming.  However, it is ridiculous
to suggest that a computer&nbsp;programmer who creates a worm is
<i>un</i>aware that it will spread rapidly.
Students who major in computer&nbsp;science, mathematics, physics,
or engineering learn in mathematics classes about geometric series.
There is a good reason
why mathematics classes are required for science and engineering students:
mathematics is <i>really</i> useful for predicting results of
experiments that one should <i>not</i> perform.
<br><br>
<a name="anchor000012"></a>
A good example of a geometric series is the propagation of a computer worm.
Consider the following hypothetical example in which
each victim's computer provides the addresses of four new victims,
and the worm requires one&nbsp;hour
to be received by the next wave of victims,
to search the next victim's computer and find four new addresses,
then to be sent to the four new victims:<br>
<br>
<table border="2" cellpadding="5" cellspacing="1">
<tbody><tr><th> time in hours </th> <th> number of new victims </th></tr>
<tr align="center"><td>1</td> <td>4</td></tr>
<tr align="center"><td>2</td> <td>16</td></tr>
<tr align="center"><td>3</td> <td>64</td></tr>
<tr align="center"><td>4</td> <td>256</td></tr>
<tr align="center"><td>5</td> <td>1024</td></tr>
<tr align="center"><td>6</td> <td>4096</td></tr>
<tr align="center"><td>7</td> <td>16384</td></tr>
<tr align="center"><td>8</td> <td>65536</td></tr>
<tr align="center"><td>9</td> <td>262144</td></tr>
<tr align="center"><td>10</td> <td>1048576</td></tr>
</tbody></table><br>
In this hypothetical example, at 24&nbsp;hours
there would be approximately&nbsp;10<sup>14</sup> new&nbsp;victims,
which is a ridiculous extrapolation, because there are only about
10<sup>9</sup>&nbsp;people on the planet earth.
But this example clearly shows the rapid growth of a geometric
series and why authors of worms should not be surprised when
their worm rapidly gets out-of-control.
Seen in this context, the criminal defense attorney's statement that
his/her client "did not know ...." is <i>not</i>&nbsp;plausible.
Actually, the defense attorney's statement is ludicrous.
<br><br>
Even if one ignores the rapid growth of a geometric series,
the historical examples of the rapid propagation of the
<a href="#anchor111300">Chrisma Worm</a> in Dec&nbsp;1987 and the
<a href="#anchor111400">Morris Worm</a> in Nov&nbsp;1988 show
what happens when worms are released into computer networks.
There is absolutely no need for another "experiment" of this kind,
as we already know what will happen.
(I put "experiment" in quotation marks, because the design and release
or a computer virus or worm is a crime,
<i>not</i> a legitimate scientific experiment.)
<br><br>
Other examples of <a href="http://www.rbs2.com/ccrime.htm#anchor222555">specious defenses</a>
for writing or releasing malicious programs are contained in my essay
on <i>Computer&nbsp;Crime.</i>
<br><br>
<hr align="left"><a name="anchor111111"></a>
<h2 align="center">Early Examples</h2>

<h3 align="center">Brain virus</h3>

The first computer virus for Microsoft DOS was apparently written in 1986
and contains unencrypted text with the name, address, and telephone
number of Brain Computer Services, a store in Lahore, Pakistan.
This virus infected the boot sector of 5&#188;&nbsp;inch
floppy diskettes with a 360&nbsp;kbyte capacity.
Robert&nbsp;Slade, an expert on computer viruses, believes the Brain virus
was written as a form of advertising for the store in Pakistan.
<br><br>
A variant of the Brain virus was discovered
at the University of Delaware in the USA during Oct&nbsp;1987 where
the virus destroyed the ability to read the draft
of at least one graduate student's thesis.
<br><br>
<hr align="left"><a name="anchor111200"></a>
<h3 align="center">Lehigh Virus</h3>

In November 1987, a virus was discovered infecting
the <tt>COMMAND.COM</tt> file on DOS diskettes at
Lehigh University.  When an infected <tt>COMMAND.COM</tt>
had infected four other copies of <tt>COMMAND.COM</tt>
(i.e., when copying to a floppy diskette), the virus wrote over
the file&nbsp;allocation&nbsp;table on all disks in the system, destroying
the ability to read files from those disks.
<br><br>
Quick intervention at Lehigh University, including overnight
development and distribution of a disinfection program, stopped this virus
from spreading off&nbsp;campus.
The data on approximately 500 computer disks and diskettes at
Lehigh University were lost because of this one virus.
<br><br>
To the best of my knowledge, the author
of the Lehigh Virus was never identified, so there was no punishment for him.
<br><br>
<hr align="left"><a name="anchor111300"></a>
<h3 align="center">Christma Worm</h3>

A student at a university in Germany created a worm
in the REXX language.  He released his worm in December&nbsp;1987
on a network of IBM mainframe computers in Europe.
<br><br>
The worm displayed an image of a conifer tree on the user's monitor,
while it searched two files on the user's account to collect e-mail
addresses, then automatically sent itself to all of those addresses.
(This trick would be used again, on a different operating system,
in March&nbsp;1999 by the <a href="#anchor222222">Melissa</a> virus.)
The Christma worm deleted itself after it functioned once.
However, the one copy deleted was replaced by multiple copies sent
to everyone with an e-mail address in either the in-box or out-box of the
user's account, so the total number of copies continued to increase.
<br><br>
The worm itself was relatively harmless: it neither deleted
nor altered the user's computer files.
However, the rapid propagation of the worm
created a mailstorm in the network of IBM mainframe computers
from&nbsp;9&nbsp;to&nbsp;14&nbsp;Dec&nbsp;1987.
<br><br>
The author of the Christma worm was identified, by tracing
the mail messages back to the original source.
His computer account was closed, but I can not find any other
punishment for him.
<br><br>
<hr align="left"><a name="anchor111400"></a>
<h3 align="center">Morris Worm</h3>

On 2 November 1988, Robert Tappan Morris, then a first-year graduate student in
computer science at Cornell University, released his worm that effectively
shut down the Internet for several days.
<br><br>
The Morris Worm used four different ways to get <i>un</i>authorized
access to computers connected to the Internet:<ol>
<li>exploit a defect in <i>sendmail</i> when DEBUG was enabled during compile
</li><li>exploit a defect in <i>fingerd</i> buffer overflow
</li><li>trusted hosts feature that allows use without a password <i>(rexec, rsh)</i>
</li><li>an algorithm that tried 432 common passwords, plus variations on the
    user's name, and then <tt>/usr/dict/words/</tt>.</li></ol>
The worm only infected SUN-3 and Digital Equipment Corp. VAX
computers running versions of the Berkeley UNIX operating system.
<br><br>
The Morris Worm succeeded in infecting approximately 3000 computers,
which was about 5% of the Internet at that time.
Among the affected computers were those at the University of California
at Berkeley, MIT, Stanford, Princeton , Purdue, Harvard, Dartmouth,
University of Maryland, University of Utah,
Georgia Institute of Technology, and many other universities,
as well as computers at military and government laboratories.
<br><dl>
<dt>When Morris understood that his worm was propagating faster
than he had expected, he called a friend at Harvard University.
The friend then sent the following anonymous message
with a false source address
to the TCP-IP mailing list via the Internet:
</dt><dd>A possible virus report:<br>
    There may be a virus loose on the internet.<br>
    Here is the gist of a message I got:<br>
    I'm sorry.<br>
    Here are some steps to prevent further transmission:<br>
    [three terse suggestions for how to stop the worm omitted here]<br>
    Hope this helps, but more, I hope it is a hoax.
</dd><dt>However, because the Internet was already clogged
with copies of his worm or because computers were disconnected from
the Internet to avoid infection by the Morris Worm, the message did
not arrive until <i>after</i> system administrators had devised their
own techniques for removing the worm.
Further, the anonymous source, and also the tentative tone
(i.e., "<i>possible</i> virus report", "<i>may</i> be a virus loose",
"I hope it is a <i>hoax.</i>"),
make this message much less helpful than it could have been.
If&nbsp;Morris had really been innocent, he could have faxed the source
code for his worm to system administrators at University of California
at Berkeley, MIT, Purdue, University of Utah, etc.
who were trying to decompile the worm and understand it.
And Morris could have given system administrators
authoritative suggestions for how to stop his worm.</dt></dl>
<br>
Morris apparently never personally explained his intentions
or motives in designing and releasing his worm.  Some of his
defenders have said that Morris did not intend the consequences of
his worm.  A Cornell University Report by Ted Eisenberg, et&nbsp;al.
at pages&nbsp;17,&nbsp;27 and especially at Appendix&nbsp;8,
[bibliographic&nbsp;citation&nbsp;<a href="#anchor111498">below</a>],
mentions comment lines by Morris in his 15&nbsp;Oct&nbsp;1988 source code
that say:<ul>
<li>"the goal is to infect about 3 machines per ethernet."
</li><li>"2) methods of breaking into other systems."
</li><li>"10) source code, shell script, or binary-only?
     latter makes it harder to crack once found, but less portable"
</li><li>"hitting another system:<br>
     1) rsh from local host, maybe after breaking a local password and ....<br>
     2) steal his password file, break a password, and rexec."</li></ul>
Such comments appear as clear indications of criminal intent by Morris.
In a 17&nbsp;Oct&nbsp;1994 UseNet posting, Prof.&nbsp;Spafford
at Purdue, who has also actually seen the worm's source code at Cornell that
was written by Morris (including the comment lines by Morris that
are not present in the decompiled versions), said:<dl>
<dd>The comments in the original code strongly suggested that
    Robert intended it to behave the way it did &#8211; no accidents
    involved.</dd></dl>
<br>
Morris was the first person to be arrested, tried, and convicted
for writing and releasing a malicious computer program.
He was found guilty on 22&nbsp;Jan&nbsp;1990
and appealed, but the U.S. Court of Appeals upheld the trial court's decision.
The U.S. Supreme Court refused to hear an appeal from&nbsp;Morris.<br>
<i>U.S. v. Morris</i>, 928 F.2d 504, 506 (2dCir. 1991),
<i>cert.&nbsp;denied</i>, 502 U.S. 817 (1991).
<br><br>
The Court of Appeals noted that:
"Morris released the worm from a computer at the Massachusetts
Institute of Technology [MIT].  MIT was selected to disguise
the fact that the worm came from Morris at Cornell."
<i>Id.</i>&nbsp;at&nbsp;506.
The Court of Appeals also noted that the cost of removing the worm
from <i>each installation</i> on the Internet was estimated to be
"from $&nbsp;200 to more than $&nbsp;53000." <i>Id.</i>
<br><br>
There are no precise figures on the amount of damage that Morris did,
but a widely quoted estimate by Clifford Stoll at Harvard is that
the total cost of dealing with the Morris Worm is somewhere between
US$&nbsp;10<sup>5</sup> and US$&nbsp;10<sup>7</sup>.
<br><br>
Despite the severity of this damage,
Morris was sentenced in May&nbsp;1990 to a mere:<ul>
<li>three&nbsp;years of probation,
</li><li>400&nbsp;hours of community service,
</li><li>a fine of US$&nbsp;10050,
</li><li>the US$&nbsp;3276 cost of his supervision during probation, but
</li><li><i>no</i> incarceration in prison.
</li></ul><br>
In addition to this legal punishment, Cornell University
suspended him from the University for at&nbsp;least one&nbsp;year.
When Morris applied for re-admission a few years later,
Cornell refused to accept him.  Morris earned his Ph.D.
at Harvard University in 1999.
<br><br>
<a name="anchor111498"></a>
<h4 align="center">Bibliography on the Morris Worm</h4>

There are a number of technical publications that discuss
the Morris worm and its effect on computers that constituted the Internet:<ul>
<li>Peter J. Denning, editor, <i>Computers Under Attack,</i>
    Addison-Wesley, 1990.  A collection of reprinted articles
    from computer science journals, which has about 90&nbsp;pages
    on the Morris Worm.
<br><br>
</li><li>Mark Eichin and Jon Rochlis, <i>With Microscope and Tweezers:
    An Analysis of the Internet Virus of November 1988,</i> &nbsp; Feb&nbsp;1989.
    Available from the
    <a href="http://web.mit.edu/jon/www/virus.html">MIT&nbsp;website</a>
    and published in various places.
<br><br>
</li><li>Ted Eisenberg, David Gries, Juris Hartmanis, Don Holcomb,
    M. Stuart Lynn, and Thomas Santoro,
    <i>The Computer Worm,</i>
    A Report to the Provost of Cornell University on an Investigation
    Conducted by The Commission of Preliminary Enquiry,
    45&nbsp;pp., 6&nbsp;Feb&nbsp;1989.
    Available from the Office of Information Technologies at Cornell
    University.
<br><br>
</li><li>Bob Page, <i>A Report on the Internet Worm,</i>
    University of Lowell, 5&nbsp;pp.,  7&nbsp;Nov&nbsp;1988.
    Available from a
    <a href="http://www.ee.ryerson.ca:8080/%7Eelf/hack/iworm.html">website</a>
    in Canada and also from
    <a href="ftp://coast.cs.purdue.edu/pub/doc/morris_worm/worm.paper">Purdue</a>.
<br><br>
</li><li>Donn Seeley, <i>A Tour of the Worm,</i> Computer Science Department,
    University of Utah, 18&nbsp;pp., 1988.
    Available from Francis&nbsp;Litterio's
    <a href="http://world.std.com/%7Efranl/worm.html">website</a>.
<br><br>
</li><li>Eugene H. Spafford, <i>The Internet Worm Program: An Analysis</i>
    Technical Report CSD-TR-823, Purdue University, 41&nbsp;pp.,
    8&nbsp;Dec&nbsp;1988.  Available from
    <a href="http://www.cerias.purdue.edu/homes/spaf/tech-reps/823.pdf">Purdue</a> University.
<br><br>
</li><li>Eugene H. Spafford, <i>The Internet Worm Incident,</i>
    Technical Report CSD-TR-933, Purdue University, 18&nbsp;pp.,
    19&nbsp;Sep&nbsp;1991.  Available from
    <a href="http://www.cerias.purdue.edu/homes/spaf/tech-reps/933.pdf">Purdue</a> University.
    (I&nbsp;recommend this report as the best place to start reading
    about the effect of the worm on the Internet and ethical issues.)
<br><br>
</li><li>The June 1989 issue (Vol. 32, Nr. 6) of <i>Communications of the ACM,</i>
    a major journal for professional computer programmers,
    contains several articles concerning the Morris Worm.
</li></ul>
<a name="anchor111499"></a>
I have posted the <i>un</i>published Judgment of the
<a href="http://www.rbs2.com/morris.htm">trial&nbsp;court</a> in
<i>U.S. v. Robert Tappan Morris,</i> as well as the opinion of the
<a href="http://www.rbs2.com/morris2.htm">appellate&nbsp;court</a> that was published at
928&nbsp;F.2d.&nbsp;504.
<br><br>
<hr align="left"><a name="anchorMBDF"></a>
<h3 align="center">MBDF Virus</h3>

In 1992, four undergraduate students at Cornell University
created and released the MBDF virus, which attacks Apple Macintosh computers.
This virus was released in three shareware programs:<ol>
<li><i>Obnoxious Tetris,</i> a computer game,
</li><li><i>Ten Tile Puzzle,</i> a computer game, and
</li><li><i>Tetriscycle,</i> a Trojan Horse program
    that contained an encrypted copy of the MBDF virus.</li></ol>
<br>
David S. Blumenthal wrote the virus and inserted it in the three programs.
Blumenthal also created an anonymous account on a Cornell computer,
so that apparently untraceable file transfers could be made.
Mark A. Pilgrim used this anonymous account on 14&nbsp;Feb&nbsp;1992
to upload the three programs to an Internet archive at Stanford University.
<br><br>
The initial victims downloaded the programs from Stanford
and infected their computers.  As these victims shared their infected
files with other users, they unwittingly spread the virus to additional
victims.
<br><br>
The MBDF virus was a relatively benign program that did not directly
harm the victim's data files.  However, this virus could cause harm in
three different ways:<ol>
<li>The virus caused some programs to crash when the user selected
    an item from the menu bar.
<br><br>
</li><li>The <a href="http://ciac.llnl.gov/ciac/bulletins/c-17.shtml">CIAC</a>
    reported on 25&nbsp;February&nbsp;1992:
    "When MBDF&nbsp;A infects the system file, it must re-write the
    entire system file back to disk; this process may take two or three
    minutes.  If the user assumes the system has hung, and reboots
    the Macintosh while this is occurring, the entire system file will
    be corrupted and an entire reload of system software must then
    be performed."
<br><br>
</li><li>The virus took several seconds to infect each program file
    on the victim's computer, and, during those several seconds,
    the display would freeze.  If the victim rebooted the computer
    during those several seconds, application files on the computer
    could become corrupted.</li></ol>
To recover from such problems, the victim first needed to run anti-virus
software to delete the MBDF virus, then any corrupted files (e.g.,
either applications software or the operating system itself)
would need to be re-installed.  Depending on the skill of the victim
in identifying which files were damaged, the recovery process could
take hours or days.
<br><br>
Compared with other malicious programs, the damage from the MBDF virus
was relatively small.  The only reason that I mention the MBDF virus in
this essay is that it is one of a very few cases in which the author
and distributors of a malicious program were arrested
and punished for their crime.
<br><br>
The MBDF virus was first discovered in the wild by a professor of mathematics
in Wales, who sent it to John&nbsp;Norstad, the author of a now-discontinued
anti-virus program for the Macintosh.
Experts in computer security at several universities promptly
traced the origin of the MBDF virus to Cornell University.
<br><br>
Blumenthal and Pilgrim were arrested and put in jail on 24&nbsp;February,
just ten&nbsp;days after the MBDF virus was first released.
They were arraigned in a New York state court on charges of
second-degree computer&nbsp;tampering, a misdemeanor.
They each posted $2000 cash bail and were released from jail.
Pilgrim cooperated with the police, told them the details
of what had happened, and incriminated Blumenthal.
<br><br>
As reports of infected computers were received
from all over the USA, Japan, Europe, Australia, and Canada,
the district attorney contemplated increasing the charges to
a felony, because he could prove a larger harm than what had
initially been apparent.
<br><br>
During grand jury proceedings in June&nbsp;1992, two other
Cornell students were revealed to have played a role in the distribution
of the MBDF virus to various computer bulletin boards.
One of them was granted immunity from criminal prosecution
in exchange for his testimony.
The other, who will be identified here by the fictitious name Doe,
was indicted along with Blumenthal and Pilgrim,
but Doe later had his record expunged.
<br><br>
On&nbsp;16&nbsp;June&nbsp;1992, a 17-count indictment was issued
against Blumenthal, Pilgrim, and Doe.  The indictment
included four counts of first-degree computer tampering (a felony),
and also seven counts of attempted computer tampering (a misdemeanor),
plus one count of second-degree attempted computer tampering.
In addition, Blumenthal alone was charged with
felony counts of forgery and falsifying business records,
for his creation of the anonymous computer account
at Cornell University.
<a name="anchorMBDFreturn"></a>
I&nbsp;obtained a photocopy of the indictment from the
Tompkins County Court and posted it <a href="http://www.rbs2.com/dsb.htm">here</a>.
<br><br>
On 4 September 1992, Blumenthal and Pilgrim each pled guilty to
one count of second-degree computer tampering, a misdemeanor,
in exchange for the dismissal of all other charges and
neither prison nor fines.
On&nbsp;5&nbsp;October&nbsp;1992, Blumenthal and Pilgrim were each sentenced to:<ul>
<li>pay restitution (a total of $&nbsp;6000 to Cornell University,
    $&nbsp;1300 to a victim in New York City, and $&nbsp;65 to a victim
    in California);
</li><li>each would provide 520 hours of community service, which they
    fulfilled by writing software for a handicapped person in Tennessee;
</li><li>forfeit their personal computers; and
</li><li>be on probation.</li></ul>
The court clerk has informed me that there is no written Judgment
filed for either Blumenthal or Pilgrim.
Doe pled guilty to disorderly conduct and later had his record
expunged, so there is no record of Doe's sentence.
<br><br>
Additionally, each of the four students was either expelled or suspended from
Cornell University for at least one&nbsp;year.
<br><br>
Cornell University, whose reputation had been besmirched
by the Morris Worm in November&nbsp;1988, found itself in 1992 portrayed
by journalists as a breeding ground for malicious computer programs.
University administrators must be ready to deal
with both the legal and public relations aspects of arrests of students
for creating malicious computer programs.
<br><br>
The best source of information that I have found on the obscure MBDF virus
case is the archives of
<a href="http://www.syracuse.com/">The&nbsp;Post-Standard</a>
newspaper in Syracuse, NY.
<br><br>
<hr align="left"><a name="anchor111500"></a>
<h3 align="center">Pathogen Virus</h3>

In April 1994, the Pathogen computer virus was released in the
United&nbsp;Kingdom, by uploading an infected file to a computer
bulletin&nbsp;board, where victims could download a copy of the file.
<br><br>
The Pathogen virus counted the number of executable
(e.g., <tt>*.EXE</tt> and <tt>*.COM</tt>)
files that it infected.  When the virus had infected 32&nbsp;files,
and an infected file was executed between 17:00 and 18:00 on a Monday:<ul>
<li>the keyboard is disabled
</li><li>data in the first 256 cylinders of the hard disk drive are corrupted
</li><li>displays a message on the CRT that includes:
    "I'll be back for breakfast.....
    Unfortunately some of your data won't!!!!!"</li></ul>
<br><br>
The Pathogen virus contained a second virus, Smeg, which hid
Pathogen from anti-virus software.
<br><br>
What makes the Pathogen virus worth including here is that its author
is one of the very few authors of malicious computer programs who
were arrested and convicted.
<br><br>
<a name="anchor111550"></a>
<h3 align="center">Pathogen Perpetrator</h3>

The author of Pathogen was Christopher Pile (aka "Black&nbsp;Baron")
a 26-year-old unemployed computer programmer who lived in Devon, United&nbsp;Kingdom.
At his trial on 26&nbsp;May&nbsp;1995, Pile pled guilty to:<ul>
<li>five counts of unauthorized access to computers to facilitate crime
</li><li>five counts of unauthorized modifications of computer software
</li><li>one count of inciting others to spread computer viruses that he wrote.</li></ul>
These charges were the result of his development and release of the
Pathogen and Queeg viruses (both also containing the Smeg virus)
in 1993 and continuing up to April&nbsp;1994.
<br><br>
The prosecutor claimed that one unnamed victim had suffered damage
in the amount of a half a million pounds (approximately US$&nbsp;800,000)
from Pile's viruses.
<br><br>
On 15 November 1995, a judge sentenced Pile to 18&nbsp;months in prison.
The judge declared: "Those who seek to wreak mindless havoc on one of
the vital tools of our age cannot expect lenient treatment."
<br><br>
Pile's punishment was more severe than other criminals
who have written and released malicious programs.
Other viruses and worms have been much more widespread, and caused much more
damage, but their authors have generally been able to avoid prison
(e.g., <a href="#anchor111400">Morris</a> and
<a href="#anchor444450">de&nbsp;Wit</a>)
or received a sentence not much longer than Pile's
(e.g., the author of the <a href="#anchor222250">Melissa</a>
virus spent 20&nbsp;months in prison, despite having done at least
a hundred times more damage than Pile).
<br><br>
<hr align="left"><a name="anchor222222"></a>
<h2 align="center">Melissa Virus</h2>

The Melissa virus was released on 26&nbsp;March&nbsp;1999
and was designed to infect macros in wordprocessing
documents used by the Microsoft Word&nbsp;97 and Word&nbsp;2000 programs.
Macro viruses were not new, they had been known since 1995.
<br><br>
The innovative feature of the Melissa virus was that it propagated
by e-mailing itself to the first fifty addresses in the
Microsoft Outlook e-mail program's address&nbsp;book.
This feature allowed the Melissa virus to propagate faster than
any previous virus.
The virus arrived at each new victim's computer disguised as
e-mail from someone who they knew, and presumedly trusted.
(About 11&nbsp;years earlier,
the <a href="#anchor111300">Christma&nbsp;Worm</a>
automatically sent itself to everyone in a victim's e-mail
address book on an IBM mainframe computer.)
<br><br>
The Melissa virus propagated in two different ways:<ol>
<li>On PCs running the Microsoft Outlook 97 or 98 e-mail program,
    the Melissa virus used the Outlook program to send an e-mail
    containing an attachment, with a filename like <tt>list.doc</tt>.
    This file contained a Microsoft Word document with a macro,
    and a copy of the Melissa virus was inside the macro.
    <br><br>
    When this e-mail was received by someone who had Microsoft Word
    on his/her computer (even if their computer was an Apple Macintosh),
    and the recipient clicked on the attachment,
    the document would open and the Melissa virus would
    automatically infect Word's <tt>normal.dot</tt> template file,
    thus infecting the recipient's computer.
    <br><br>
    While Microsoft Outlook was necessary for the automatic sending
    of infected documents, the recipient of such e-mail could be infected
    even if the recipient used a non-Microsoft e-mail program.
<br><br>
</li><li>Infected Microsoft Word documents could be transmitted
    by floppy disks, usual&nbsp;e-mail sent by victim, etc.
    When such infected documents were opened in Microsoft Word,
    the Melissa virus would automatically infect Word's
    <tt>normal.dot</tt> template file,
    thus infecting the recipient's computer.
</li></ol><br>
Many documents about the Melissa virus claim this virus was
"relatively harmless" or "benign".  That claim is <i>not</i> true.
There were a number of distinctly different harms caused by Melissa:<ul>
<li>Documents in Microsoft Word format were automatically sent,
    using Microsoft Outlook, to fifty people by the Melissa virus.
    Such automatic transmission could release confidential information
    from the victim's computer.
<br><br>
</li><li>When the day number equals the number of minutes in the current time
    (e.g., at 11:06 on the 6<sup>th</sup> day of the month),
    the Melissa virus inserted the following text in whatever document
    was then being edited in Word on the victim's computer:<dl>
    <dd><tt>Twenty-two points, plus triple-word-score, plus fifty
        points for using all my letters.  Game's over.  I'm outta here.</tt></dd></dl>
    Such an insertion was a deliberate modification of data files
    on the victim's hard&nbsp;drive, an unauthorized tampering
    with the victim's document files.
<br><br>
</li><li>Future victims were most commonly infected by opening an attachment
    in an e-mail from someone who they knew, and presumedly trusted.
    Until the workings of the Melissa virus were understood by all the
    victims, trusted relationships between people could be harmed
    by this unauthorized sending of e-mail.
<br><br>
</li><li>As with any rapidly propagating virus or worm, e-mail can be
    delayed, which sometimes has economic consequences
    (e.g., lost&nbsp;productivity).
<br><br>
</li><li>And, as with all viruses and worms, there was the cost of
    removing the infection and restoring the computer to normal.
</li></ul><br>
The fact that the Melissa virus could have been more destructive
(e.g., by deleting data files from the victim's computer)
is hardly praise for the author of the Melissa virus.
<br><br>
For more technical details on Melissa, see the
<a href="http://www.cert.org/advisories/CA-1999-04.html">CERT&nbsp;advisory</a>
and the <a href="http://www.europe.f-secure.com/v-descs/melissa.shtml">F-Secure&nbsp;description</a>.
<br><br>
Finally, using an Apple Macintosh gives one immunity from most computer
viruses and worms.  However, Apple computer users who also use
Microsoft Word&nbsp;97 or later are vulnerable to the same macro
viruses that plague Word users on Microsoft Windows&nbsp;95 or later.
However, the Melissa virus can not automatically transmit itself
by e-mail from a computer that uses the Macintosh operating system.
<br><br>
<a name="anchor222250"></a>
<h3 align="center">Melissa Perpetrator</h3>

The Melissa virus was written by David Lee Smith
and first released on 26&nbsp;March&nbsp;1999 as an attachment to his posting
to an <tt>alt.sex</tt> newsgroup.  That posting said the attachment
contained a list of passwords for pornographic websites,
but the attachment actually contained his virus.
Smith named his virus "Melissa" after a topless dancer
in Florida, who Smith knew.
<br><br>
It is obvious that Smith knew what he was doing was wrong,
because he used a stolen AOL account and password
to make the initial release to the <tt>alt.sex</tt> newsgroup.
Before his arrest, Smith discarded the hard drives that were used
to create his virus at his home in New&nbsp;Jersey, then he
hid at his brother's house, where David Lee Smith was arrested.
<br><br>
Smith was arrested on 1 April 1999. The
<a href="http://www.cnn.com/TECH/computing/9904/02/melissa.arrest.03/index.html">CNN</a>
news report shows the police mugshot of Smith, with a smirking expression.
He was charged in federal court with violations of
18&nbsp;USC&nbsp;&#167;&nbsp;1030(a)(5)(A)
and in New&nbsp;Jersey state court with violations of
NJSA&nbsp;2C:20-25(a) and 2C:20-26(a).
<br><br>
Smith was fired from his job doing computer programming from AT&amp;T.
He subsequently worked as a computer technician at Rutgers University
after his arrest.  (Rutgers did not know that Smith had been arrested
for this crime.)
Smith voluntarily quit his job at Rutgers six days before he pled guilty.
<br><br>
On 9 Dec 1999, Smith pled guilty in federal court.
The plea agreement between prosecutors and Smith had the following features:<ul>
<li>Smith would cooperate with authorities in thwarting
    other creators of malicious computer programs.
</li><li>It would be stipulated that the Melissa virus did
    "more than eighty million dollars of damage".
    (The&nbsp;actual amount was much, much higher &#8211;
    one <a href="#anchor999900">estimate</a> was US$&nbsp;1100&nbsp;million.
    However, the stipulation became a "fact" accepted in court
    for the purposes of determining Smith's sentence.)
</li><li>Any state and federal prison sentences would run concurrently,
    and end at the same time.
</li></ul><br>
On 1 May 2002, a judge in federal court imposed the following sentence
on Smith:<ul>
<li>20 months in federal prison,
</li><li>36 months of "supervised release" (i.e., probation) after his prison term
    ends, during which time he can access the Internet only with the permission
    of his probation officer,
</li><li>fined US$ 5100, and
</li><li>ordered to serve 100 hours of "community service" work in the
    "technological field", perhaps giving lectures in schools about the
    harmfulness of computer viruses.
</li></ul>
Apparently, the 29-month interval between Smith's guilty plea
and his sentencing (an unusually long interval) was the result
of his cooperation with authorities in investigating other
malicious computer programs.  The authorities did not reveal any
details of the cooperation, so it is not possible to know
what the government got in exchange for more than halving Smith's
prison sentence.
<br><br>
On 3 May 2002, a judge in New Jersey state court imposed
the following sentence on Smith:<ul>
<li>the maximum allowable sentence of ten years in state prison.
    However, because of his plea agreement, Smith would serve
    only the 20&nbsp;months in federal prison and then be a free&nbsp;man.
</li><li>fined US$ 2500.
</li></ul><br>
<a name="anchor222260"></a>
Some documents in Smith's case have been posted on the Internet:<ul>
<li><a href="http://www.usdoj.gov/criminal/cybercrime/meliinfo.htm">Information</a>
    filed by the U.S. Attorney for the District of New&nbsp;Jersey,
    charging David Lee Smith with violation of 18&nbsp;USC&nbsp;&#167;&nbsp;1030(a)(5)(A).
<br><br>
</li><li><a href="http://www.usdoj.gov/criminal/cybercrime/meliplea.htm">Letter</a>
    of 8 Dec 1999 from the U.S. Attorney for New&nbsp;Jersey to the attorney
    representing David&nbsp;Smith, offering a plea agreement.
<br><br>
</li><li><a href="http://www.usdoj.gov/criminal/cybercrime/melissa.htm">DoJ</a>
    press release about Smith's guilty plea.
<br><br>
</li><li><a href="http://www.rbs2.com/dls.htm">Judgment</a> issued by Judge Greenaway
    on 1&nbsp;May&nbsp;2002.
<br><br>
</li><li><a href="http://www.njusao.org/files/me0501_r.htm">U.S. Attorney's</a>
    1 May 2002 press release about Smith's sentence.  Another copy is at the
    <a href="http://www.usdoj.gov/criminal/cybercrime/melissaSent.htm">DoJ</a>
    website.
</li></ul><br>
<h3 align="center">weak punishment</h3>

If one accepts the legal stipulation that the Melissa virus
did US$&nbsp;8&nbsp;&#215;&nbsp;10<sup>7</sup> in damage,
and one considers Smith in prison to lose 16&nbsp;hours/day
of freedom (who cares where he sleeps for 8&nbsp;hours/day?)
for 20&nbsp;months, then the effective value of Smith's
time in prison is US$&nbsp;8330/hour.
That is a ridiculously high value for Smith's time.
<br><br>
The prosecutors ignored that Smith's virus fraudulently
sent e-mails from each victim's computer to
new&nbsp;victims who were in previous victim's e-mail address book.
The new&nbsp;victims opened the attachment in e-mail
apparently from someone who they knew, and presumedly trusted,
and were infected with a copy of Smith's virus.
I&nbsp;believe society should express outrage at this kind of fraud.
<br><br>

<hr align="left"><a name="anchor333333"></a>
<h2 align="center">ILOVEYOU Worm</h2>

The ILOVEYOU worm was first reported in Hong Kong on 4&nbsp;May&nbsp;2000
and spread westward on that day.
The ILOVEYOU worm affected computers at more than half of the
companies in the USA and more than 10<sup>5</sup> mail servers in Europe.
Internal e-mail systems at both the U.S.&nbsp;Senate and
Britain's House of Commons were shut down.
It was <a href="#anchor999900">estimated</a> that the ILOVEYOU worm
did more damage than any other malicious program in the history of computing:
approximately US$&nbsp;9&nbsp;&#215;&nbsp;10<sup>9</sup>.
On&nbsp;4&nbsp;May&nbsp;2000, MessageLabs filtered ILOVEYOU from
one in every 28 e-mails, the all-time highest daily infection rate
seen by MessageLabs.
<br><br>
The ILOVEYOU incident was commonly reported as a <i>virus</i> in the
news media, but it was actually a <i>worm</i>, because this malicious program
did not infect other programs.
I call this worm by the subject line of e-mail that propagated this worm.
Norton Anti-Virus calls it <i>VBS.Loveletter.A.</i>
<br><br>
The ILOVEYOU worm arrived at the victim's computer in the form
of e-mail with the ILOVEYOU subject line and an attachment.
The e-mail itself was innocuous, but when the user clicked on the attachment
to read the alleged love letter,
<tt>LOVE-LETTER-FOR-YOU.TXT.VBS</tt>, the attachment
was a Visual Basic program that performed a horrible sequence of bad things:<ol>
<li><b>deletion of files from victim's hard disk</b><br>
     The worm overwrote files from the victims' hard disk drive,
     specifically targeting files with extensions:<ul>
     <li><tt>*.JPG</tt>, <tt>*.GIF</tt>, and <tt>*.WAV</tt>, amongst many others (i.e., files containing audio/visual data),
     </li><li><tt>*.CSS</tt> (i.e., cascading style sheets called by HTML&nbsp;4.0 documents).
     </li><li>some later versions deleted <tt>*.COM</tt> or <tt>*.EXE</tt> files,
         which prevented the computer from starting when rebooted.
     </li><li>some later versions deleted <tt>*.INI</tt> files.
     </li></ul>
     The worm overwrote a copy of itself to a
     file with the name of the original file, appending the extension <tt>*.VBS</tt>,
     so the total number of files on the victim's hard disk would be
     <i>un</i>changed and the damage more difficult to immediately detect.
     Further, if a victim clicked on one of these files, the ILOVEYOU worm
     would be activated again on that one victim.
     <br><br>
     By overwriting files, instead of merely deleting files, the worm
     made it much more difficult (perhaps impossible) to recover the original
     file on the victim's hard drive.  For&nbsp;example, if the worm had merely
     deleted files, then the victim could restore the files from the
     Recycle&nbsp;Bin or Trash&nbsp;Can.
     <br><br>
     In addition, the worm marked files of type <tt>*.MP3</tt> as hidden, so
     they would no longer appear in directory listings, then copied the worm
     to new files <tt>*.MP3.VBS</tt>.
<br><br>
</li><li><b>password theft</b><br>
    The attachment <tt>LOVE-LETTER-FOR-YOU.TXT.VBS</tt>
    automatically set the Microsoft Internet Explorer start page to a URL
    at a web server in the Philippines, which would download
    <tt>WIN-BUGSFIX.EXE</tt> to the victim's machine.
    <br><br>
    The worm then set the victim's machine to run <tt>WIN-BUGSFIX.EXE</tt>
    the next time the victim's machine was booted.
    <br><br>
    <tt>WIN-BUGSFIX.EXE</tt> was a Trojan Horse program that collected
    usernames and passwords from the victim's hard drive and e-mailed
    them to an address in the Philippines, <tt>mailme@super.net.ph</tt>.
    (<small>That was a really stupid feature, since law enforcement agents,
    within 12&nbsp;hours of the initial release of the worm,
    identified the person who owned that e-mail address.</small>)
    Furthermore, there was a copyright notice in the Trojan Horse's code!
    <br><br>
    An Internet Service Provider in Europe alerted the web server in
    the Philippines at 08:30&nbsp;GMT on Thursday, 4&nbsp;May&nbsp;2000,
    and <tt>WIN-BUGSFIX.EXE</tt> was removed from the website,
    which prevented most of the harm in Europe and the USA from this
    password-collecting program.
    Later, the web server in the Philippines was overwhelmed
    (i.e., a kind of a denial of service attack) with requests from the
    worm for <tt>WIN-BUGSFIX.EXE</tt>.
    <br><br>
    This Trojan Horse program had been previously submitted as a thesis proposal
    at a computer college in the Philippines.  The proposal was rejected
    with handwritten comments "This is illegal." and "We don't produce
    burglars."  The student then dropped out of the college without
    earning a degree.  A copy of the student's rejected thesis
    <a href="http://computerbytesman.com/lovebug/thesis.htm">proposal</a>
    is posted at Richard&nbsp;M.&nbsp;Smith's website.
<br><br>
</li><li><b>worm propagates</b><br>

    The worm transmitted itself using features of the earlier
    Melissa program: scanning the address book in Microsoft Outlook,
    and then transmitted a copy of the ILOVEYOU e-mail to all of those
    e-mail addresses.  This method of transmission rapidly disseminated
    the worm to millions of victims.
    In&nbsp;comparison, Melissa sent copies to only the first
    50&nbsp;entries in the Microsoft Outlook address book, while ILOVEYOU sent
    copies to <i>every</i> address in the that victims' book.
    <br><br>
    The worm also sent copies to other people on the same Internet Relay
    Chat channel that the victim was using.
</li></ol><br>
<h3 align="center">copycat versions of the ILOVEYOU worm</h3>

The first copycat version appeared on Thursday afternoon with a
subject line <tt>fwd:joke</tt> and an attachment <tt>veryfunny.vbs</tt>.
<br><br>
Another copycat version appeared on Sunday with a
subject line <tt>Dangerous&nbsp;Virus&nbsp;Warning</tt>
and an attachment <tt>virus_warning.jpg.vbs</tt>.
Anyone who clicked on the attachment to read the warning
would activate the worm on their machine and become a victim.
The deception in this subject and e-mail message may be particularly
horrifying to a naive person, but one must <i>not</i> expect computer criminals
to be honest and sincere.  It's a sad fact of life that people without
a healthy amount of skepticism and cynicism will become victims
of crimes.
<br><br>
Just five days after the initial release of the ILOVEYOU worm,
Norton AntiVirus had identified 29&nbsp;different versions
of the worm.  It&nbsp;takes minimal skill to slightly modify a version
of a worm and release the new version, which is one reason there
are so many copycat versions.  Some of the copycat versions were more
destructive than the original, as these copycat versions overwrote
files of types <tt>*.COM</tt>, <tt>*.EXE</tt>, and <tt>*.INI</tt>,
which destroyed the user's operating system.
<br><br>
<h3 align="center">ILOVEYOU Perpetrator</h3>

Police in the Philippines knew the name and location
of the suspect within 12&nbsp;hours of the initial release of the worm,
but the police were hampered by
the lack of laws there for computer crimes.  The closest relevant
Philippine law was designed to cover credit card or bank account fraud,
but was broad enough to cover unauthorized taking of goods and services.
However, the police were not able to find sufficient evidence
for prosecutors to apply this fraud statute.
On&nbsp;7&nbsp;June&nbsp;2000, police and prosecutors in the
Philippines closed their investigation of the ILOVEYOU worm,
because the creation and release of this worm was <i>not</i>
a crime in the Philippines.
On 21&nbsp;August&nbsp;2000, prosecutors dropped all charges
against the people who apparently designed and released the ILOVEYOU worm.
<br><br>
Partly as a result of <i>in</i>adequate law in the Philippines,
just five&nbsp;days after the initial release of the virus there
was active discussion of extraditing the suspect to a developed country
where harm occurred and where the laws were adequate to punish
the perpetrator.  However, extradition laws only allow extradition
in cases where the offense was a crime in <i>both</i>
the suspect's home country <i>and</i> in the country to which extradition
is sought, so extradition from the Philippines was not possible.
<br><br>
This example shows the international nature of computer crime:
a criminal in one country can rapidly cause havoc all over the world,
using the international reach of the Internet.  In&nbsp;contrast,
a criminal who physically moves from one country to the next would
need to pass though immigration and customs controls at each border,
as well as become subject to personal jurisdiction in each country.
<br><br>
On 11&nbsp;May&nbsp;2000, one week after the initial release of the worm,
the author's attorney said that
his client did not realize how rapidly the worm would propagate.
Sorry, that's <i>not</i> plausible;
see my&nbsp;remarks <a href="#anchor000011">above</a>.
<br><br>
One week after the initial release of the worm,
the author's attorney said that the worm had been "accidentally" released.
This excuse is too easy.
There is no acceptable reason to create such malicious software: remember that
the program overwrote files on the victim's disk drive, the overwriting
had <i>absolutely&nbsp;no&nbsp;benefit</i> to the author of the program,
except for glee at hurting other people.
There is no rational reason to write a program that one intends <i>never</i> to use.
And, if one writes such a destructive program, then one must
use extraordinary care (i.e., the same care that one takes with
toxic&nbsp;chemicals, explosives, highly radioactive materials, etc.)
to make certain that the program is <i>never</i> released.
Society ought to demand that those who release malicious programs,
even if the release is an "accident", be held legally responsible for the
damage caused by the malicious programs.
<br><br>
The author of the password-stealing Trojan Horse
had attempted to justify his program because Internet access in the
Philippines was expensive (e.g., US$&nbsp;2.50/hour with no "unlimited&nbsp;use"
plans available), therefore he sought to use victim's accounts for free.
This is simply theft of services.
<br><br>
<hr align="left"><a name="anchor444444"></a>
<h2 align="center">Anna Worm</h2>

On 11 Feb 2001, a malicious program was released that
was contained in an attachment to e-mail.
The attachment purported to be a picture of a 19-year-old Russian tennis
player, Anna Kournikova, but the attachment was actually a computer worm.
The attachment had the file name
<tt>AnnaKournikova.jpg.vbs</tt>
<br><br>
The file type <tt>.jpg</tt> is commonly used for graphic images,
such as photographs.  However, the real file type was
<tt>.vbs</tt>, which is an executable file, a computer program written
in Microsoft Visual Basic Script.
<br><br>
This malicious program is often known by the last name of the innocent
tennis player.  I have chosen to refer to this malicious program
by her first&nbsp;name, Anna, to avoid associating the tennis player
with this malicious program.  Norton&nbsp;Anti-Virus calls this worm
<i>VBS.SST@mm</i>.
F-Secure calls this worm <i>OnTheFly</i> after the pseudonym of its author.
<br><br>
The Anna worm did the following two things on a victim's computer:<ul>
<li>sends one copy of the worm to each e-mail address in the
    victim's Microsoft Outlook address book.
</li><li>on 26 Jan of each year, it displays the homepage of
    an innocent computer store on the victim's web&nbsp;browser.
</li></ul>
The Anna worm does not have any novel technical features.
I mention the Anna worm here only because
it is one of the very few cases in which the author was
arrested and punished.
<br><br>
The Anna worm rapidly spread amongst computers,
particularly in North&nbsp;America,
on 12-13&nbsp;Feb&nbsp;2001.
While the Anna worm was relatively benign (e.g., it did <i>not</i> damage
any files on the victim's computer), it still caused harm by
clogging the Internet with many copies of itself and by requiring
each victim to remove it from his/her computer.
<br><br>
<a name="anchor444450"></a>
<h3 align="center">Perpetrator of Anna Worm</h3>

The author, Jan de Wit, was a 20-year-old man who lived in
Friesland in the Netherlands.
He downloaded a tool from the Internet for creating malicious programs
and wrote this worm in just a few hours.
<br><br>
An Internet website purporting to be by the author of the
Anna worm said "It's their own fault they got infected."
(See,&nbsp;for&nbsp;example
<a href="http://www.wired.com/news/print/0,1294,41782,00.html">wired.com</a>
and <a href="http://news.com.com/2100-1001-252579.html">cnet.com</a>.)
I&nbsp;have&nbsp;two&nbsp;comments:<ol>
<li>It is true that the victim was infected when he/she clicked on
    the attachment in e-mail that purported to be a photograph,
    but was actually a worm.  But the author of the Anna worm
    ignores the fact that the worm was deceptively, or fraudulently,
    presented as a photograph.  I would be more willing to accept
    the author's blame-the-victim statement about the worm had it
    arrived in an e-mail that said "Click here to receive a computer virus."
    But, of course, no criminal would be so honest.
<br><br>
</li><li>Blaming the victim for the harm caused by a crime is repugnant.
    Can you imagine someone accused of homicide saying that he
    only perpetrated an assault/battery, because the victim would
    not have died if the victim had worn a bullet-proof&nbsp;vest.
    Thus the homicide is the victim's fault, for recklessly not
    wearing body armor!
</li></ol><br>
The anti-virus software company F-Secure in Finland identified
the author of the Anna worm to police in the Netherlands.
<br><br>
On 14 Feb 2001, after his worm spread worldwide
and caused considerable inconvenience,
Jan&nbsp;de&nbsp;Wit surrendered to police in the Netherlands.
<br><br>
On 27 Sep 2001, a Dutch court sentenced de&nbsp;Wit to a mere
150&nbsp;hours of community service.
This sentence was light, because prosecutors had difficulty
in finding admissible evidence about the cost of removing the Anna worm
from computers.  Businesses were reluctant to admit that their
computers were infected with a worm.
<br><br>
On 16 Oct 2001, de&nbsp;Wit appealed this sentence as too harsh.
<br><br>
<hr align="left"><a name="anchor555000"></a>
<h2 align="center">three worms: CodeRed, Sircam, Nimda</h2>

The year 2001 saw the introduction of many serious malicious programs:
CodeRed, Sircam, Nimda, BadTrans.B, and Klez.
I treat the first three tersely in the following sections.

<a name="anchor555100"></a>
<h3 align="center">CodeRed</h3>

The initial CodeRed worm was discovered on 16 July 2001.
CodeRed targeted webservers, not computers of users.
This worm was propagated as an <tt>http&nbsp;get</tt> request, i.e. a request
to get a webpage from a server.  If the server was running Microsoft
Windows&nbsp;NT&nbsp;4.0 or Windows&nbsp;2000 operating systems,
a defect in those operating systems allowed the worm to infect that server.
<br><br>
An interesting feature of CodeRed is that it does <i>not</i> reside
in any file on the hard&nbsp;disk, but only exists in semiconductor&nbsp;memory&nbsp;(RAM):
this feature allows CodeRed to escape detection by a scan of the hard&nbsp;disk
with anti-virus software.
Switching the infected computer off, then&nbsp;on, will remove the infection,
but webservers normally run continually
(i.e., 24&nbsp;hours/day, 7&nbsp;days/week),
unlike computers in homes and offices that may be rebooted daily.
<br><br>
The CodeRed worm did different things depending on the day of the month.
Most versions of CodeRed used the following schedule:<ol>
<li>During the first 19&nbsp;days of each month,
    the CodeRed worm sent out many
    <tt>http&nbsp;get</tt> requests to random IP&nbsp;addresses
    (i.e., websites and Internet users), seeking webservers to infect.
    This feature of CodeRed is essentially a port&nbsp;probe,
    looking for webservers running Windows&nbsp;NT&nbsp;4.0 or
    Windows&nbsp;2000 operating systems.
    The large number of bogus requests from CodeRed
    could mimic a denial-of-service attack on a webserver.
<br><br>
</li><li>During days 20 to 28 of each month,
    another feature of CodeRed makes a denial-of-service attack on
    the IP&nbsp;address that then corresponded to <tt>www.whitehouse.gov</tt>.
    The IP&nbsp;address of the U.S.&nbsp;President's website was
    changed to defeat CodeRed.
<br><br>
</li><li>After the 28<sup>th</sup> day of the month, CodeRed goes into
    a sleep state until the next month, although the server is still infected.
<br><br>
</li><li>Under certain circumstances, one early version of CodeRed
    running on a webserver that uses the English language
    will intercept requests for a webpage and return its own HTML code:<dl>
    <dd><tt>Welcome to http:// www.worm.com !<br>
        Hacked by Chinese!</tt></dd></dl>
    After 10 hours, CodeRed again returns the proper requested webpage.
    The temporary unavailability of some webpages will cause concern
    to webmasters, then the problem will "magically" disappear,
    frustrating operators of webservers who are trying to find the problem.
</li></ol><br>
A <a href="http://www.cert.org/advisories/CA-2001-23.html">CERT&nbsp;advisory</a>
showed that CodeRed infected 2.0&nbsp;&#215;&nbsp;10<sup>5</sup>
computers in just five&nbsp;hours on 19&nbsp;July&nbsp;2001, which was a rapid
rate of infection and a good example of geometric series mentioned
<a href="#anchor000012">earlier</a> in this essay.
CERT said that "at least 280000 hosts were compromised in the first wave"
of attacks on 19&nbsp;July&nbsp;2001.
<br><br>
<h4 align="center">CodeRed II</h4>

A new version of CodeRed appeared on 4 August 2001, called CodeRed&nbsp;II.
The important new feature of CodeRed&nbsp;II is the installation of
a Trojan&nbsp;Horse program,
which creates a backdoor into the infected webserver.
After this backdoor is installed,
any web&nbsp;surfer can send commands by using any web&nbsp;browser.
Such commands could, for example, delete files from the webserver,
or upload new files to the webserver.
The&nbsp;Trojan&nbsp;Horse also disables the system file checker function
in Windows, so that the modified operating system files can not be
detected.
<br><br>
Whoever wrote CodeRed&nbsp;II did not like the Chinese, as that variant
is designed to propagate faster, and for a longer time, in webservers
that use the Chinese language.
<br><br>
<h4 align="center">Perpetrator of CodeRed</h4>

To the best of my knowledge, the author of the CodeRed worm was never identified,
so there can be no legal consequences for him.
<br><br>
<hr><a name="anchor555200"></a>
<h3 align="center">Sircam</h3>

The initial Sircam worm was discovered on 17 July 2001, about the same
time as CodeRed first appeared.
<br><br>
The worm arrived at a victim's computer in e-mail with the following text:<dl>
<dd><tt>Hi! How are you?</tt><br>
    [second line: one of four choices below]<br>
    <tt>See you later.  Thanks</tt></dd></dl>
There are four different versions of the second line of the e-mail text:<ol>
<li><tt>I send you this file in order to have your advice</tt>
</li><li><tt>I hope you can help me with this file that I send</tt>
</li><li><tt>I hope you like the file that I sendo you</tt>
</li><li><tt>This is the file with the information that you ask for</tt>
</li></ol>
Clicking on the attached file infects the victim with the Sircam worm.<br>
<a name="anchor555220"></a>
<b>Note: </b> the text of e-mail containing malicious programs
often contains ungrammatical&nbsp;text,
punctuation&nbsp;errors (e.g., the missing periods in Sircam's text),
or misspelled&nbsp;words, because the author is a non-native speaker of English.
Such mistakes in English text in an e-mail apparently from an English-speaking
country should alert the reader to the possibility of e-mail from a forged address.
<br><br>
The Sircam worm inflicts several harms on the victim:<ul>
<li>a 2% chance that the file <tt>c:\recycled\sircam.sys</tt>
    will be created, then text is repeatedly added to this file until there
    is no more free space on the <tt>C:</tt> hard&nbsp;disk drive.
<br><br>
</li><li>on computers using the day/month/year date format and when the
    date is 16&nbsp;October, there is a 5% chance that Sircam will
    delete all files and delete all directories on the <tt>C:</tt>
    hard&nbsp;disk drive.
<br><br>
</li><li>Sircam automatically sends copies of itself with the victim's
    e-mail address as the <tt>From:</tt> address.
    If&nbsp;Sircam can not find the victim's e-mail address, then
    Sircam will forge a <tt>From:</tt> address from the current
    username and one of four mail&nbsp;servers
    (e.g.,&nbsp;<tt>@prodigy.net.mx</tt>).
    <br><br>
    The <tt>To:</tt> addresses are harvested from the Windows Address
    Book and also from e-mail addresses found in the web&nbsp;browser cache files.
    <br><br>
    The text of the e-mail was mentioned above.
    <br><br>
    The e-mail has one attachment which contains a copy of the
    Sircam worm followed by the contents of a file
    with file type <tt>.doc</tt> or <tt>.zip</tt>
    from the <i>My&nbsp;Documents</i> folder on the victim's computer.
    This document could contain the victim's confidential information,
    which is then sent to numerous addresses.
    <br><br>
    The name of the attachment had a double file extension,
    which like <a href="#anchor222222">Melissa</a> and
    <a href="#anchor444444">Anna</a> above, is symptomatic of
    a malicious attachment.  The filename and left extension of the attachment
    was identical to the copied file from the victim's machine,
    Sircam then added a second file extension:
    either <tt>.com</tt>, <tt>.bat</tt>, <tt>.exe</tt>,
    <tt>.pif</tt>, or <tt>.lnk</tt>, which made the attachment
    an executable file type.
<br><br>
</li><li>Sircam uses its own internal mail program, so that copies of outgoing
    e-mail do not appear in the user's e-mail program's out-box.
    Thus the user does not know his/her computer is mailing copies
    of the Sircam worm to other people.
<br><br>
</li><li>The Sircam worm has a length of 137216 bytes.
     The additional space required by the document from the victim's computer
     makes the attachment even larger, perhaps more than 200000&nbsp;bytes,
     which is larger than most webpages and most e-mail messages.
     This large file size helps Sircam clog the Internet.
</li></ul><br>
Several anti-virus websites note that there is a bug in the Sircam worm
that makes it "highly unlikely" that the disk-space-filling and
file-deleting will occur.  However, the author of Sircam apparently
intended those harms to occur.
<br><br>
<h4 align="center">Perpetrator of SirCam</h4>

To the best of my knowledge, the author of the SirCam worm was never identified,
so there can be no legal consequences for him.
A copyright notice in the Sircam code says that this worm was made in Mexico,
but I have seen no confirmation that this statement is correct.
<br><br>
The anti-virus software vendor Trend&nbsp;Micro
reported on 10&nbsp;May&nbsp;2002 that a total of 1.0&nbsp;&#215;&nbsp;10<sup>6</sup>
computers worldwide had been infected with Sircam.
The anti-virus software vendors Sophos and Computer&nbsp;Associates both
reported SirCam as the second most prevalent malicious program
infecting computers in the year&nbsp;2001:
SirCam accounted for 20% of the reports to Sophos in 2001.
On&nbsp;17&nbsp;May&nbsp;2002, MessageLabs reported SirCam as the
all-time most prevalent malicious program in e-mail.
<br><br>

<hr><a name="anchor555300"></a>
<h3 align="center">Nimda</h3>

The Nimda worm was discovered on 18 September 2001 and it spread rapidly
on the Internet.
<br><br>
Nimda had two novel features:<ol>
<li>Nimda could infect a computer when the user <i>read</i> or <i>previewed</i>
    an e-mail that contained a copy of Nimda.
    With all previous viruses or worms transmitted by e-mail,
    the user would need to click on an attachment to infect the user's computer.
</li><li>Nimda could modify webpages on a webserver, so that accessing
    those webpages could download a copy of Nimda to the browser's computer.</li></ol>
These two novel features represented a significant "advance"
in ability to harm victims.
<br><br>
The first novel feature of Nimda exploited a defect in Microsoft Internet Explorer&nbsp;5.01 and 5.5.
A patch that repairs this defect had been available from the Microsoft
website since 29&nbsp;March&nbsp;2001, but most computer users do not
bother to install the latest updates.
Why did a defect in a web&nbsp;browser cause a vulnerability to
worms sent by e-mail?  Most modern e-mail is sent in HTML format,
the same format used by webpages, and e-mail software (e.g., Microsoft
Outlook) uses Internet&nbsp;Explorer web&nbsp;browser to display such e-mail.
This vulnerability could be avoided by
(1) selecting either Netscape&nbsp;Navigator or Opera
as the default browser and (2) using a non-Microsoft e-mail program,
such as Eudora.
<br><br>
The Nimda worm propagates in several different ways:<ol>
<li>Like the <a href="#anchor555100">CodeRed</a> worm, every copy of Nimda
    generates many random IP addresses to target <tt>http&nbsp;get</tt> requests,
    i.e. a request to get a webpage from a server.
    If the server was running Microsoft
    Windows&nbsp;NT&nbsp;4.0 or Windows&nbsp;2000 operating systems,
    a defect in those operating systems allowed the worm to infect that server.
    <br><br>
    The name of the Nimda worm is a reversal of the computer&nbsp;term
    <i>admin</i>&nbsp;(administrator), which designates a user with the privilege of
    modifying system files.  By exploiting a defect in Windows,
    the Nimda worm is able to act as an administrator.
<br><br>
</li><li>Once a webserver was infected by Nimda, the worm adds
    a small amount of Javascript code to
    webpages on that server with filenames:<br>
    <tt>index</tt>, <tt>default</tt>, or <tt>readme</tt><br>
    and extensions:<br>
    <tt>.html</tt>, <tt>.htm</tt>, or <tt>.asp</tt>.<br>
    <br>
    Nimda also creates a copy of itself in a file, <tt>readme.eml</tt>,
    on an infected webserver.
    <br><br>
    Depending on the settings on the user's computer regarding Javascript,
    when the user accessed one of these altered webpages,
    the user's web&nbsp;browser might:<ul>
    <li>automatically download <tt>readme.eml</tt> and execute the Nimda worm,
        thus infecting the user's computer,
    </li><li>display a prompt to ask whether the user wanted to download the file <tt>readme.eml</tt>, or
    </li><li>automatically refuse to download the file.</li></ul>
<br>
</li><li>Once every ten days, Nimda searches the hard drive of an infected computer
    to harvest e-mail addresses from the following sources:<ul>
    <li>in-boxes for the user's e-mail program (e.g., Microsoft&nbsp;Outlook)
    </li><li><tt>*.HTML</tt> and <tt>*.HTM</tt> files in the user's web&nbsp;browser cache
        (also called the Temporary Internet Files folder).</li></ul>
    After harvesting e-mail addresses, Nimda selects one of these
    addresses as the <tt>From:</tt> address and the remainder as
    <tt>To:</tt> addresses, and sends copies of Nimda in an apparently blank e-mail.
    <br><br>
    Note that the infected computer is <i>not</i> used as the <tt>From:</tt>
    address, so there is no easy way for the recipient of e-mail to
    determine whose computer sent the copy of Nimda.
    <br><br>
    Nimda (like Sircam) uses its own internal mail program,
    so that copies of outgoing e-mail do not appear
    in the user's e-mail program's out-box.
    Thus the user does not know his/her computer is mailing copies
    of the Nimda worm to other people.
    <br><br>
    As mentioned <a href="#anchor555300">above</a>, Nimda can infect
    the recipient's machine when the recipient either reads or previews
    the e-mail, without needing to click on an attachment.
<br><br>
</li><li>Nimda adds a copy of itself to the beginning of <tt>*.EXE</tt> files.
    Such executable files are sometimes transferred to other computers,
    which will spread the Nimda infection.
</li></ol><br>
<a name="anchor553600"></a>
On 11 Oct 2001, hundreds of e-mails containing Nimda were sent with
forged <tt>From:</tt> addresses that appeared to originate from the
manager of anti-virus research at
<a href="http://www.europe.f-secure.com/v-descs/nimda.shtml">F-Secure</a>
in Finland.  Such forged source addresses, whether a deliberate act
or whether a random occurrence caused by execution of a malicious program,
damages the reputation of innocent people.
(I elaborate on this point later in this essay, in discussing the
<a href="#anchor666600">Klez</a> program.)
<br><br>
For more technical details on Nimda, see the
<a href="http://www.cert.org/advisories/CA-2001-26.html">CERT&nbsp;advisory</a>
and the <a href="http://www.europe.f-secure.com/v-descs/nimda.shtml">F-Secure&nbsp;description</a>.
<br><br>
The Nimda worm has a length of 57344 bytes, which makes it a relatively
large file compared to many webpages and e-mail messages.
This large file size helps Nimda clog the Internet.
<br><br>
I noticed CodeRed and Nimda at my professional website, where,
up&nbsp;to&nbsp;10&nbsp;May&nbsp;2002,
there were 11238&nbsp;requests for Windows&nbsp;NT operating
system files, particularly <tt>cmd.exe</tt>.  (These files do not exist
on the server that hosts my website, as that server runs the Unix
operating&nbsp;system.)
The webhosting service that I use reported on
18&nbsp;Sep&nbsp;2001 that they were receiving approximately
8000&nbsp;hits/second requesting <tt>cmd.exe</tt>.
Such a high rate of requests approximates a denial-of-service attack
on a webserver.
<br><br>
<h4 align="center">Perpetrator of Nimda</h4>

To the best of my knowledge, the author of the Nimda worm was never identified,
so there can be no legal consequences for him.
The code for the Nimda contains a copyright notice stating that
it originated in communist China, but I have seen no confirmation
that this statement is correct.
<br><br>
The anti-virus software vendor Trend&nbsp;Micro
reported on 14&nbsp;May&nbsp;2002 that a total of 1.2&nbsp;&#215;&nbsp;10<sup>6</sup>
computers worldwide had been infected with Nimda.
The anti-virus software vendor Sophos reported Nimda as the most
prevalent malicious program in the year&nbsp;2001: Nimda accounted for
27% of the reports to Sophos.
<br><br>

<hr align="left"><a name="anchor555555"></a>
<h2 align="center">BadTrans.B worm</h2>

The BadTrans.B worm was discovered on 24&nbsp;Nov&nbsp;2001.
There was an epidemic from late November&nbsp;2001 through early January&nbsp;2002.
<br><br>
This worm did the following things to a victim's computer:<ul>
<li>installs a Trojan Horse program to record the victim's keystrokes
    that are typed into any window with a title that begins
    <tt>PAS</tt>[sword], <tt>LOG</tt>[on], or four similar words
    that indicate an attempt to logon to some service.
    This program later e-mailed the collected keystrokes (e.g.,
    including username and password) to an e-mail address
    specified in the Trojan Horse.
<br><br>
</li><li>finds yet unread e-mail in Microsoft Outlook on the victim's machine
    and replies to those unread e-mails with a copy of the BadTrans worm
    in an attachment to the reply.  This novel feature of the BadTrans
    worm increased the chances of propagation, since the recipient was
    expecting a reply from the victim.
    <br><br>
    The <tt>From:</tt> address will be the victim's e-mail address
    if the worm can find that information in the victim's computer,
    otherwise <a name="anchor555600"></a>
    the <tt>From:</tt> address will be chosen from a list of
    15&nbsp;addresses, mostly with female names, contained in the worm.
    These 15&nbsp;addresses connected to real people,
    who were selected by the author of the BadTrans worm.
    One of them, Joanna&nbsp;<a href="http://www.pe.utexas.edu/%7Ecastillo/attack.html">Castillo</a>,
    posted a webpage about her experience.
    Also, the now-defunct Newsbytes website had an
    <a href="http://www.newsbytes.com/news/01/172673.html">article</a>
    about the "e-mail&nbsp;hell" experienced by Castillo and one&nbsp;other
    victim of the forged <tt>From:</tt> addresses.
    <br><br>
    Before sending copies with the victim's <tt>From:</tt> address,
    the worm adds the underline character (i.e.,&nbsp;_)
    to the beginning of that <tt>From:</tt> e-mail address.
    Such an additional character will prevent warnings from the recipient
    from reaching the victim.
    Also, any returned copies of the worm (e.g., because the worm
    replied to spam that had an invalid, forged address) will not
    reach the victim and inform him/her of the unauthorized sending
    from his/her computer.
    <br><br>
    Some variants of the BadTrans worm <i>also</i> sent copies of the worm to
    e-mail addresses found in previously read e-mail in the victim's inbox
    or to addresses contained in files of types <tt>*.htm</tt>,
    <tt>*.html</tt>, and <tt>*.asp</tt> in documents
    downloaded from the Internet.
<br><br>
</li><li>exploits a defect in Microsoft Internet Explorer
    that allows the worm to be launched without the victim opening
    an attachment.  The same defect was exploited earlier
    by the <a href="#anchor555300">Nimda</a> worm.
</li></ul><br>

<h3 align="center">BadTrans.B Perpetrator</h3>

To the best of my knowledge, the author of the BadTrans worm was never identified,
so there can be no legal consequences for him.
<br><br>
The anti-virus software vendor Trend&nbsp;Micro
reported on 16&nbsp;May&nbsp;2002 that a total of 2.1&nbsp;&#215;&nbsp;10<sup>5</sup>
computers worldwide had been infected with BadTrans.B, which was
only about 1/5 the number of computers that TrendMicro reported
as infected with Sircam or Nimda, which also appeared in the year&nbsp;2001.
However, the anti-virus software vendor Computer&nbsp;Associates reported
BadTrans.B as the most prevalent malicious program in the year&nbsp;2001.
On&nbsp;2&nbsp;Dec&nbsp;2001, MessageLabs filtered BadTrans.B from
one in every 57 e-mails, the second-highest daily infection rate seen by MessageLabs.
On 17&nbsp;May&nbsp;2002, MessageLabs reported the BadTrans.B worm was
the all-time third-most-common malicious program in e-mail.
<br><br>

<hr align="left"><a name="anchor666666"></a>
<h2 align="center">Klez</h2>

The original Klez program appeared on 26&nbsp;October&nbsp;2001.
A number of variants appeared later, of which the most significant were the
E&nbsp;variant that first appeared on 17&nbsp;January&nbsp;2002
and the H&nbsp;variant that first appeared on 17&nbsp;April&nbsp;2002.
The H&nbsp;variant caused an epidemic from about 20&nbsp;April&nbsp;2002
through June&nbsp;2002, and became the most widespread
malicious program in the history of the Internet.
<br><br>
Klez has properties of both a computer virus and worm,
what the Norton Anti-Virus website calls a "blended&nbsp;threat".
<br><br>
There are a number of varieties of the Klez program and they
each do slightly different harms to the victim's computer.
Among these harms are:<ul>
<li>deposit a copy of an ElKern computer virus in the victim's computer.
    The early versions of this virus destroy information in all files
    on the victim's computer
    on 13&nbsp;March and 13&nbsp;September of each year.
</li><li>the Klez program is released when the victim <i>reads</i> or
    <i>previews</i> e-mail with Microsoft Outlook.
    The same defect in Microsoft Internet Explorer was exploited earlier
    by both the <a href="#anchor555300">Nimda</a> and
    <a href="#anchor555555">BadTrans</a> worms.
</li><li>send copies of the Klez program via e-mail from the victim's computer,
    as discussed in more detail below.
</li><li>attempts to disable many common anti-virus programs by
    modifying the Windows registry file.
</li><li>on the 6<sup>th</sup> day of each odd-numbered month, attempts to
    overwrite many different files on the victim's hard drive
    with a pattern of all&nbsp;zeroes, thus destroying data in those
    files.
</li><li>randomly selects a file of type <tt>.doc</tt>, <tt>.rtf</tt>,
    <tt>.pdf</tt>, <tt>.jpg</tt>, among other possibilities,
    to append to the attachment containing the Klez program,
    thus possibly sending confidential information from the victim
    to future victims.
</li></ul>
This long list of harms shows that the author of Klez had a
truly malicious intent.
<br><br>
<h4 align="center">sending copies</h4>

The Klez program propagated by sending e-mail that contains Klez in an attachment.
The subject line, body of the e-mail, and name of the attachment were
randomly selected from a long list of possibilities contained in the
Klez program.
(This is unlike the Anna worm discussed <a href="#anchor444444">above</a>,
where the attachment always had the same name and could be easily
recognized by someone who had been warned by the news&nbsp;media.)
<br><br>
Some of the variants of Klez not only searched the Microsoft Outlook
e-mail address book (like the Melissa and ILOVEYOU programs),
but also searched the entire hard drive on the victim's computer
for e-mail addresses contained in files of types <tt>.txt</tt>,
<tt>.htm</tt>, and <tt>.html</tt>, amongst others.  These file types include
webpages downloaded from the Internet and stored on the victim's computer,
and they may also include e-mail inboxes.
This searching the entire hard drive for e-mail addresses
was a significant progression in the thoroughness of malicious programs
in obtaining a list of e-mail addresses to receive a copy of
the malicious program.
<br><br>
Klez (like SirCam and Nimda) used its own internal e-mail program.
<br><br>
Some of the variants of Klez randomly selected one e-mail address in the list
to be the designated false source of e-mails containing
copies of the Klez program.
Copies were then sent to all of the remaining addresses on the list.
<a name="anchor666600"></a>
A&nbsp;<a href="http://www.wired.com/news/technology/0,1282,52055,00.html">wired.com</a>&nbsp;news&nbsp;article&nbsp;says:<dl>
<dd>The [Klez] virus arrives attached to an e-mail that typically
    appears to have been sent by someone the recipient knew.
    <br><br>
    Many computer users say that friends, co-workers, and business
    associates are angrily &#8211; or patronizingly &#8211;
    accusing them of sending out viruses.  Some victims say they
    fear their professional reputations have been harmed.
</dd></dl>
This article quotes a public&nbsp;relations consultant
who was falsely accused by eight of her clients,
as well as potential clients,
for sending the Klez program to them: "I can't imagine
they will trust me with a campaign for a tech firm after this."
<br><br>
<h4 align="center">e-mail with false text</h4>

At least one version of the Klez program produced e-mail that
said that the attachment (which really contained the malicious Klez program)
was an "immunity tool" and that the attachment originated from
a specific, well-known anti-virus software vendor. According to the
<a href="http://securityresponse.symantec.com/avcenter/venc/data/w32.klez.h@mm.html">Norton&nbsp;Anti-Virus</a>
website, one version of these e-mails included the following text:<dl>
<dd><tt>Klez.E is the most common world-wide spreading worm. It's very
        dangerous by corrupting your files. Because of its very smart
        stealth and anti-anti-virus technic,most common AV software can't
        detect or clean it.We developed this free immunity tool to defeat
        the malicious virus. You only need to run this tool once,and then
        Klez will never come into your PC.
        <br><br>
        NOTE: Because this tool acts as a fake Klez to fool the real
        worm,some AV monitor maybe cry when you run it. If&nbsp;so,Ignore the
        warning,and select 'continue'. If you have any question,please mail to me.</tt></dd></dl>
This fraudulent text instructed victims to disable their anti-virus (AV)
software that would have prevented their infection with Klez!
As&nbsp;with&nbsp;earlier malicious programs, you can <i>not</i> trust what
you read in e-mail written by criminals.
In connection with the <a href="#anchor555220">SirCam</a> text above,
I observed that grammar errors, punctuation errors (e.g., no space after commas
and periods in the Klez immunity tool message), and spelling errors
in a message apparently from a native speaker of English is suggestive
that the message has a forged <tt>From:</tt> address and the
attachment may contain a malicious program.
<br><br>
<h3 align="center">Klez Perpetrator</h3>

To the best of my knowledge, the author of the Klez program was never identified,
so there can be no legal consequences for him.
<br><br>
The original Klez program in late October 2001 contained
a comment inside HTML code that said:<dl>
<dd>I am sorry to do so,but it's helpless to say sorry
    I want a good job,I must support my parents.
    Now you have seen my technical capabilities.
    How much my year-salary now?
    NO more than $5,500.  What do you think of this fact?
    Don't call my names,I have no hostility.  Can you help me?</dd></dl>
Articles at some anti-virus websites mentioned the suspicion that the author
lives in the Guangdong province of communist China.
<br><br>
A later version of the Klez program claims to be "made in Asia"
and the author boasts that he wrote the entire program in only
three&nbsp;weeks, so the program might not be free of defects.
<br><br>
These kinds of comments inside the Klez program make it appear
that the author regards his program as part of his professional
portfolio, in order to be hired as a computer programmer.
Shame on any software vendor that hires the author of a malicious program!
Ethical people are <i>not</i> favorably impressed by someone
whose portfolio harms other people.
<br><br>
The anti-virus software vendor Trend&nbsp;Micro
reported on 17&nbsp;May&nbsp;2002 that a total of 9.5&nbsp;&#215;&nbsp;10<sup>5</sup>
computers worldwide had been infected with either KlezE or KlezH.
On&nbsp;17&nbsp;May&nbsp;2002, MessageLabs reported the KlezH program was
the all-time second-most-common malicious program in e-mail.
At that time, the epidemic was continuing
and the total number of infected computers was certain to increase substantially.
<br><br>

<hr align="left"><a name="anchor777777"></a>
<h2 align="center">my second essay</h2>

A description of some malicious computer programs since mid-2002,
with emphasis on the nonexistent or lenient punishment for their authors,
and with links to legal documents, is contained in my
<a href="http://www.rbs2.com/cvirus2.pdf">second&nbsp;essay</a>.<br>
<br>

<hr align="left"><a name="anchor999900"></a>
<h2 align="center">Economic Damage</h2>

There are many different harms resulting from malicious programs:<ul>
<li>Many malicious programs delete or alter data in files
    on the victim's hard drive.  Recovering from such an attack
    requires either the use of a backup copy or tediously regenerating
    the data.
    <br><br>
    There will always be lost data after the last backup.
    The amount of lost data will be less than one day's work,
    <i>if</i> one makes daily backups.  However, daily backups are rare
    amongst computer users at home and in small offices.
    That means most victims will lose day<u>s</u>, or even week<u>s</u>,
    of wordprocessing and financial data.  The value of that lost
    data far exceeds the cost of the computer hardware.
<br><br>
</li><li>Many malicious programs alter the Microsoft Windows registry file.
    All of those alterations must be undone, in order to recover from
    the malicious program.
    <br><br>
    Many malicious programs attach themselves to parts of the operating
    system or applications programs.
    <br><br>
    In some cases (e.g., CodeRed), the best recovery is to reformat the hard disk drive,
    make a clean installation of the operating system,
    then install all of the applications software,
    and finally copy all of the user's data&nbsp;files from backup media.
    Such a process can take <i>many hours</i> if the user is familiar with the
    process and has a recent backup copy of the data&nbsp;files.
    Alternatively, if one has used special backup software that
    copies the entire operating system (including hidden files),
    all applications software, and all data files
    onto recordable media (e.g., compact disk<u>s</u> or a tape cartridge),
    then one can use that media to recover more quickly.
<br><br>
</li><li>Malicious program that propagate by e-mail
    clog e-mail servers with millions of copies of a virus or worm,
    thus delaying receipt of useful e-mail, or causing valid messages
    to be lost in a flood of useless e-mail.
    Some companies switch&nbsp;off their e-mail servers during epidemics
    of malicious programs transmitted by e-mail, to prevent crashing
    their server, but that makes valid e-mail <i>un</i>deliverable.
    Many businesses rely on prompt delivery of e-mail for their routine
    operation, and slow e-mail will cause financial losses,
    such as the cost of lost productivity.
</li></ul><br>
There is no definite information on the exact cost of recovering
from an epidemic of a malicious program.
<br><br>
A quick calculation shows that the damage inflicted by a malicious
program will be immense.
Some of these malicious programs infected more than 10<sup>5</sup>
computers worldwide.  If the cost of removing the program from each
computer is only US$&nbsp;200 (a very low estimate), then the total
harm exceeds ten&nbsp;million&nbsp;dollars.
This quick calculation shows that the cost of each widespread
malicious program will be <i>more&nbsp;than</i> US$&nbsp;10<sup>7</sup>,
but we do not know how much more.
<br><br>
The estimated costs in the following table are from
<a href="http://www.computereconomics.com/">Computer&nbsp;Economics</a>
in January&nbsp;2002.
Journalists who write news reports about malicious programs commonly use
damage estimates provided by Computer&nbsp;Economics.
<br><br>
<table border="2" cellpadding="5" cellspacing="1">
<tbody><tr><th> name of program </th> <th> estimated US$ cost </th></tr>
<tr><td>Melissa</td>  <td>1.10 &#215; 10<sup>9</sup></td></tr>
<tr><td>ILOVEYOU</td> <td>8.75 &#215; 10<sup>9</sup></td></tr>
<tr><td>CodeRed</td>  <td>2.62 &#215; 10<sup>9</sup></td></tr>
<tr><td>SirCam</td>   <td>1.15 &#215; 10<sup>9</sup></td></tr>
<tr><td>Nimda</td>    <td>0.635 &#215; 10<sup>9</sup></td></tr>
</tbody></table>
<br><br>
The cost of recovery from malicious programs after ILOVEYOU was
reduced by the availability of software tools from anti-virus
software companies that automate much of the process of removing
a worm.
<br><br>
<hr align="left"><a name="anchor999950"></a>
<h2 align="center">Sources of Information</h2>

<h4 align="center">Early History of Malicious Programs</h4>

The following online resources describe the early history of malicious programs:<ul>
<li>Robert M. Slade, <i>History of Computer Viruses,</i> 1992.
    Posted&nbsp;at
    <a href="http://www.bocklabs.wisc.edu/%7Ejanda/sladehis.html">Univ.&nbsp;Wisconsin</a>
    and
    <a href="http://www.cknow.com/vtutor/vtsladecontents.htm">cknow.com</a>.
<br><br>
</li><li>Alan Solomon, <i>A Brief History of PC Viruses,</i> 1993&nbsp;(?).
    Posted&nbsp;at
    <a href="http://www.bocklabs.wisc.edu/%7Ejanda/solomhis.html">Univ.&nbsp;Wisconsin</a>
    and
    <a href="http://www.cknow.com/vtutor/vtsolomancontents.htm">cknow.com</a>.
<br><br>
</li><li>Joe Wells,
    <a href="http://www.research.ibm.com/antivirus/timeline.htm"><i>Virus Timeline</i></a>,
    30&nbsp;Aug&nbsp;1996.
<br><br>
</li><li>Eugene Kaspersky,
    <a href="http://www.viruslist.com/eng/viruslistbooks.html?id=16"><i>Computer Viruses</i></a>,
    Nov&nbsp;1998.
</li></ul><br>
There are also various books on this subject:<ol>
<li>Peter J. Denning, editor, <i>Computers Under Attack,</i>
    Addison-Wesley, 1990.  A collection of reprinted articles.
<br><br>
</li><li>Alan Solomon and Tim Kay, <i>Dr Solomon's PC Anti-Virus Book,</i>
    Butterworth, 1994.
<br><br>
</li><li><i>Robert Slade's Guide to Computer Viruses,</i>
    Springer-Verlag, second&nbsp;edition, 1996.
</li></ol><br>
<h4 align="center">Later Malicious Programs</h4>

Except for the early examples (i.e., before Melissa),
I have compiled the information in this essay from sources at:<ul>
<li>Various anti-virus software websites (particularly:
    Computer&nbsp;Associates, F-Secure, McAfee, Norton/Symantec).
    Links to these websites are found in my
    <tt><a href="http://www.rbs2.com/cvict.htm#anchor888888">essay</a></tt>,
    <i>Tips for Avoiding Computer Crime.</i>
<br><br>
</li><li><a href="http://www.cnn.com/">CNN</a>
    because retrieval of old news from this website is free,
    unlike most newspaper websites in the USA.
    News&nbsp;reports are <i>not</i> always technically accurate,
    for&nbsp;example, journalists don't know the difference between a
    computer virus and a worm.
<br><br>
</li><li>The Computer Emergency Response Team (<a href="http://www.cert.org/">CERT</a>)
    at Carnegie Mellon University.
</li></ul>
In order to make this essay easier to read, I have omitted some file
types and other technical details in my description of the workings
of each malicious program.  For more complete information, consult
the primary sources at anti-virus software websites.
<br><br>
Finally, there are differences amongst descriptions of nominally identical
worms at different anti-virus software websites.  These differences
may be the result of different teams of experts examining different
variants of each worm.
<br><br>
<h4 align="center">Prevalence of Malicious Programs</h4>

Quantitive information on the number of computers (or number of files)
infected with a malicious program is difficult to find, because there
is no central place for all computer users to report their infections.
There are several sources frequently mentioned in this essay:<ol>
<li><a href="http://www.antivirus.com/vinfo/virusencyclo/"><tt>Trend Micro</tt></a>
    in Japan has statistical information and a
    <a href="http://wtc.trendmicro.com/wtc/">summary</a>
    of the number of computers infected worldwide by each virus or worm.
    They get their statistics from their free online virus&nbsp;scanner
    and their computer network management services.
    Trend&nbsp;Micro's statistical database began 30&nbsp;July&nbsp;2000,
    so it is only useful for recent infections, not for old incidents
    like the Melissa virus or the ILOVEYOU worm.
<br><br>
</li><li><a href="http://www.messagelabs.com/viruseye/"><tt>MessageLabs</tt></a>
    is a commercial service that, since&nbsp;1999, filters malicious&nbsp;programs
    from large amounts of e-mail passing through its subscribers' systems.
    MessageLabs posts current information on the percent of e-mail
    that contains a computer virus or worm.
</li></ol><br>
I notice appreciable differences amongst the reported prevalence of a given
virus or worm at different websites.  The following are possible
explanations for such different data:<ul>
<li>Data at both TrendMicro and
    <a href="http://www.mcafee.com/anti-virus/">McAfee</a> Regional Virus Info
    show that the distribution of viruses and worms is <i>not</i> homogeneous
    throughout the world: there are real geographical differences
    in the prevalence of each malicious program.
    Each service that reports prevalence of viruses and worms
    (e.g., TrendMicro, MessageLabs, etc.)
    has a different global distribution of its customers, which
    can account for some of the differences in their prevalence data.
<br><br>
</li><li>Other difference may be attributable to differences
    in the relative number of malicious programs in
    e-mail received by people at businesses,
    compared to people in homes.  People at businesses probably have
    their e-mail addresses listed in e-mail address books on many
    different computers, and also on several webpages;
    while many people may have their home e-mail addresses
    in only a few address&nbsp;books of their friends and on no&nbsp;webpage.
    Thus, business e-mail addresses are more likely to be harvested as
    the automatic targets of e-mail containing malicious programs,
    such as Melissa, ILOVEYOU, SirCam, Nimda, BadTrans.B, Klez, etc.
<br><br>
</li><li>Still other differences may be attributable to variations in the type of
    customers: some worms (e.g., CodeRed) target webservers,
    other worms target individual users' computers.
</li></ul><br>
<hr align="left"><a name="anchor999999"></a>
<h2 align="center">Conclusion</h2>

<h3 align="center">Harms</h3>

It is at least <i>reckless</i> to release such computer programs
that are <i>designed</i> to be harmful to victims.
For&nbsp;example:<ul>
<li>E-mail delivering these malicious programs is deceptively or fraudulently
    labeled, so to encourage victims to open an e-mail attachment containing
    the malicious program.
<br><br>
</li><li>Many malicious programs delete or alter data in files
    on the victim's hard drive, a result that has no benefit
    to the author of the malicious program,
    except glee in harming other people.  This is clearly a criminal act
    by the author of the malicious program.
<br><br>
</li><li>There is an <a href="#anchor999900">enormous total cost</a>
    of removing the virus or worm from many computers.
    Some of these malicious programs infected more than 10<sup>5</sup>
    computers worldwide.  If the cost of removing the program from each
    computer is only US$&nbsp;200 (a low estimate), then the total
    harm exceeds ten&nbsp;million&nbsp;dollars.
    Releasing a rapidly spreading virus or worm should be a <i>major</i> crime,
    worse than a bank robbery.
<br><br>
</li><li>Beginning with the Melissa virus in March&nbsp;1999, many of these
    malicious programs sent copies of the program in e-mail bearing
    the victim's <tt>From:</tt> address, when the victim had neither
    composed the e-mail message nor authorized the transmission.
    I&nbsp;believe that such sending of e-mail is, or ought to be,
    a criminal act.
    <br><br>
    Malicious programs like Melissa and Anna automatically sent
    e-mail using the name of a previous victim.
    While such e-mail really originated from the victim's machine,
    the transmission was made without either the knowledge or permission of that victim.
    This feature increased the chances that the recipient of the e-mail
    would open the attachment and release the new copy of the malicious program,
    because the recipient knew, and presumedly trusted, the person
    who apparently sent the e-mail.
    <br><br>
    Later malicious programs sent copies of themselves in e-mail with
    false <tt>From:</tt> addresses, which is one step worse than
    Melissa and Anna.  For&nbsp;example,
    if the BadTrans.B worm could not find the victim's e-mail address book,
    that worm selected a false <tt>From:</tt> address from a list of 15&nbsp;addresses
    contained inside the worm.  Some variants of the Klez program
    did a total forgery of e-mail <tt>From:</tt> addresses,
    so copies of Klez were apparently sent from
    people whose machines did <i>not</i> contain Klez.
    Such false designations of origin cause innocent people to be accused of
    spreading a malicious program, and also damages their reputation
    by falsely presenting them as someone who recklessly does not
    have current anti-virus software running on their computer.
    Specific examples of such harm were given above for the
    <a href="#anchor553600">Nimda</a>,
    <a href="#anchor555600">BadTrans.B</a>, and the
    <a href="#anchor666600">Klez</a> programs.
<br><br>
</li><li>Malicious programs that propagate by e-mail will
    clog e-mail servers with millions of copies of a virus or worm,
    thus delaying receipt of useful e-mail, or causing valid messages
    to be lost in a flood of useless e-mail.  Many businesses rely on
    prompt delivery of e-mail for their routine operation,
    and slow e-mail could cause financial losses.
</li></ul><br>
As evidence of <i>mens rea</i> (i.e., criminal intent) one should consider
not only the design of the malicious program to do the above harms,
but also the design of the malicious program to evade or to defeat
anti-virus software.  Many modern computer viruses or worms are
<i>polymorphic,</i> which means that every copy is different
and that they can <i>not</i> be detected by searching a computer file
for occurrence of specific text.  Some modern malicious code
modifies the Windows registry file to disable anti-virus software,
which is an <i>un</i>authorized modification of the victim's computer.
Criminals who write such malicious software are <i>not</i> doing a
prank: they are designing a crime.
<br><br>
<h3 align="center">Punishment</h3>

Despite the immense value of the harm caused by each of these
malicious computer programs, the author of the program
received either light&nbsp;punishment (e.g.,
<a href="#anchor111400">Morris</a>,
<a href="#anchor222250">Smith</a>, and
<a href="#anchor444450">de&nbsp;Wit</a>)
or no&nbsp;punishment (e.g., the authors of ILOVEYOU, CodeRed,
Sircam, Nimda, BadTrans, Klez, etc.).
Alone amongst authors of malicious programs,
<a href="#anchor111550">Pile</a> received what I consider
a reasonable punishment.<br>
<br>
In May 2002, the Norton Anti-Virus software for Windows operating systems
detected about 61000 malicious programs.
Astoundingly, there have been criminal prosecutions and convictions
of the author(s) of <i>only five</i> malicious programs.
(See&nbsp;<a href="#anchorConvictions">above</a>.)<br>
<br>
There are several reasons for the rare arrest and prosecution:<ol>
<li>Legislators had not yet passed criminal statutes that
    effectively proscribe writing and distributing malicious programs.
<br><br>
</li><li>Police departments have a budget that is too small
    to permit an investigation of all crimes, so the focus
    is on major violent crimes (e.g., homicides, rapes) and larceny.
    Police departments are generally not hiring detectives with an education
    in computer&nbsp;science.
    In the few arrests of authors of malicious programs, clues
    to the authors' identities were supplied by programmers employed
    by anti-virus software vendors.
<br><br>
</li><li>Finally, there is the international nature of distribution of
    software by the Internet and sending malicious programs as attachments
    to e-mail.  Traditional criminal law is inherently local:
    a burglary in state X requires the criminal to be physically
    present in that state.  With malicious programs, the author could be
    in a foreign country (e.g., Philippines in the ILOVEYOU incident,
    Netherlands in the Anna worm, possibly China in the Klez program),
    but the harm can occur in all fifty states of the USA.
    The legal system has so-far been unable to respond effectively
    to this international challenge.
    <br><br>
    Apparently, a substantial fraction of malicious programs are
    created by people in developing countries that have weak or ineffective
    legal systems (e.g., writing malicious programs may not be a crime,
    the police and judges may be corrupt, etc.).
    Even if the legal system in the USA were to respond effectively to
    computer crime, authors of malicious programs in foreign countries
    are still out-of-reach of the legal system in the USA,
    despite causing harm in the USA.
</li></ol><br>
The lenient punishment of authors of malicious programs is caused by:<ol>
<li>Lack of resources (e.g., prosecutors, judges, and courtrooms)
    for the prosecution of all criminals.  Hence, most criminal cases
    must be disposed of by plea bargains.
<br><br>
</li><li>Prosecutors and judges lack an education in science and technology
    (Most of them went through high-school and college taking the
    minimum amount of science and mathematics classes.), so they
    are eager to dispose of cases involving "complicated technology"
    with plea bargains.
    The criminals exploit this eagerness by negotiating for a very
    lenient sentence in return for their guilty plea.
<br><br>
</li><li>As I noted in my essay on
    <a href="http://www.rbs2.com/ccrime.htm#anchor444444">computer&nbsp;crime</a>, nonviolent
    white-collar criminals have been traditionally treated more
    leniently than lower-class criminals, who are often violent.
<br><br>
</li><li>It is difficult to know the amount of damage from a widespread
    computer virus or worm, with the precision required for admission
    of evidence in a court.  If&nbsp;only a small amount of damage
    can be <i>proved</i> in court, then the author of the malicious
    program will receive a lighter sentence than he deserves.
    <br><br>
    Corporate victims of computer crimes are often reluctant to
    disclose the amount of damage done, perhaps because such
    admissions might erode public confidence in the company's
    technical competence, which might cause customers/clients to flee
    to competitors.
    <br><br>
    It is even more difficult to quantify the amount of damage
    done to individual computers in people's homes.
    If N computers are infected and the average cost of removing
    the virus or worm from one computer is $&nbsp;M, then the total
    damage is $&nbsp;N&nbsp;&#215;&nbsp;M.  In&nbsp;practice,
    neither N nor M are known with the precision required for admission
    of legal evidence in court.  In&nbsp;April&nbsp;2002, I could not
    find any website for reporting infection by a malicious program,
    so N is unknown.  Neither could I find any website for reporting
    the cost of removing an infection.  Since the FBI and other
    law&nbsp;enforcement agencies are not collecting this information,
    damage to individual computers is being ignored.
    I&nbsp;expect damage to home computers to be large, because
    people in homes tend not to update their anti-virus software frequently,
    unlike corporate networks where anti-virus software is updated
    regularly by trained computer specialists.
</li></ol><br>

An additional issue, which receives little attention, is the
presence on the Internet of resources for creating malicious programs,
such as was used to create the Anna worm in a few hours.
Should authors and distributors of such resources be held
criminally liable for aiding and abetting the creation of malicious programs?
The obvious answer would appear to be <i>Yes!</i>
However, the issue is complicated by the fact that some resources
might also have legitimate uses (e.g., studying malicious code,
so better anti-virus software can be designed).
Legislators are not yet ready to restrict some programming tools
and software only to licensed programmers, the way
we make [potentially dangerous] drugs legally available
only on prescription from a licensed physician.
In&nbsp;fact, computer programmers in the USA are not currently licensed
by the government, the way that other professionals
(e.g., physicians, engineers, attorneys, accountants, etc.)
who affect the public health and safety are licensed.
<br><br>
A practical solution to malicious computer code distributed by e-mail
would be for Internet Service Providers (ISPs) to use current anti-virus
software to scan all e-mail, both e-mails sent by their customers
and e-mails received by their customers.  As a practical matter, it
makes more sense for the few ISPs to run anti-virus software
(including daily updates of the virus definitions)
than for millions of customers, many of whom have a low level of
competence with computer software and hardware.  I&nbsp;stress that
this is a practical matter, <i>not</i> a legal obligation for ISPs.
<br><br>
In conclusion, the international criminal justice system has
failed to arrest, punish, and deter people
from writing and releasing malicious software.
<br><br>
I&nbsp;hope that readers will urge their legislators:<ol type="A">
<li>to enact criminal statutes against authors of computer
    viruses and worms, with punishment to reflect the damage done
    by those authors, <i>and</i>
</li><li>to allocate more money to the police for finding and arresting
    the authors of malicious computer programs.</li></ol>
<br>
<hr align="left" noshade="noshade" size="6"><br>
this document is at &nbsp; <tt>http://www.rbs2.com/cvirus.htm</tt><br>
revised 5 Oct 2002, added link to second essay in 30&nbsp;March&nbsp;2005<br>
<br>
<tt><a href="http://www.rbs2.com/index.htm">return to my homepage</a></tt>
<br><br>
<tt><a href="http://www.rbs2.com/ccrime.htm">go to my essay on Computer Crime</a></tt>
<br><br><br>
</body></html>