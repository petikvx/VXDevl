
<HTML>
<HEAD>
   <TITLE>Virus-L FAQ 2.00</TITLE>
   
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#C0C0C0" LINK="#800000" VLINK="#800000" ALINK="#800000" BACKGROUND="epback01.gif">

<H1 ALIGN=CENTER><FONT COLOR="#004080">Frequently Asked Questions on Virus-L/comp.virus</FONT></H1>

<H2 ALIGN=CENTER><FONT COLOR="#004080">by Nick FitzGerald, Virus-L/comp.virus
FAQ sheet maintainer</FONT></H2>

<H3 ALIGN=CENTER><FONT COLOR="#004080">Release 2.00 - Last Updated: 9 October
1995, 11:00 AM NZD</FONT></H3>

<P>
<HR></P>

<H2>Questions answered in this document</H2>

<H3>Introduction</H3>

<UL>
<P><A HREF="#01">Using this FAQ sheet<BR>
</A><A HREF="#02">Preface Section<BR>
</A><A HREF="#03">Primary contributors (in alphabetical order)</A><BR>
</P>
</UL>

<H3>Section A: Sources of Information and Antivirus Software (Where can
I find HELP?!!)</H3>

<UL>
<P>A1) <A HREF="#A01">What is Virus-L/comp.virus?<BR>
</A>A2) <A HREF="#A02">What is the difference between Virus-L and comp.virus?<BR>
</A>A3) <A HREF="#A03">How do I get onto or off Virus-L/comp.virus?<BR>
</A>A4) <A HREF="#A04">What are the guidelines for Virus-L?<BR>
</A>A5) <A HREF="#A05">How can I get back-issues of Virus-L?<BR>
</A>A6) <A HREF="#A06">What are the known viruses, their names, major symptoms
and possible cures?<BR>
</A>A7) <A HREF="#A07">Where can I get free or shareware antivirus programs?<BR>
</A>A8) <A HREF="#A08">Where can I get more information on viruses, etc?<BR>
</A>A9) <A HREF="#A09">Why is so much of the discussion in Virus-L/comp.virus
about PCs and DOS? Is this forum only for the PC world?</A><BR>
</P>
</UL>

<H3>Section B: Definitions (What is ...?)</H3>

<UL>
<P>B1) <A HREF="#B01">What are computer viruses (and why should I worry
about them)?<BR>
</A>B2) <A HREF="#B02">What is a Worm?<BR>
</A>B3) <A HREF="#B03">What is a Trojan Horse?<BR>
</A>B4) <A HREF="#B04">What are the main types of PC viruses?<BR>
</A>B5) <A HREF="#B05">What is a stealth virus?<BR>
</A>B6) <A HREF="#B06">What is a polymorphic virus?<BR>
</A>B7) <A HREF="#B07">What are &quot;fast&quot; and &quot;slow&quot; infectors?<BR>
</A>B8) <A HREF="#B08">What is a sparse infector?<BR>
</A>B9) <A HREF="#B09">What is a companion virus?<BR>
</A>B10) <A HREF="#B10">What is an armored virus?<BR>
</A>B11) <A HREF="#B11">What is a cavity virus?<BR>
</A>B12) <A HREF="#B12">What is a tunnelling virus?<BR>
</A>B13) <A HREF="#B13">What is a dropper?<BR>
</A>B14) <A HREF="#B14">What is an ANSI bomb?<BR>
</A>B15) <A HREF="#B15">Miscellaneous Jargon and Abbreviations</A><BR>
</P>
</UL>

<H3>Section C: Virus Detection (Is my computer infected? What do I do?)</H3>

<UL>
<P>C1) <A HREF="#C01">What are the symptoms and indications of a virus
infection?<BR>
</A>C2) <A HREF="#C02">What steps should be taken in diagnosing and identifying
viruses?<BR>
</A>C3) <A HREF="#C03">What is the best way to remove a virus?<BR>
</A>C4) <A HREF="#C04">What does the &lt;insert name here&gt; virus do?<BR>
</A>C5) <A HREF="#C05">What are &quot;false positives&quot; and &quot;false
negatives&quot;?<BR>
</A>C6) <A HREF="#C06">Can an antivirus program itself be infected?<BR>
</A>C7) <A HREF="#C07">Where can I get a virus scanner for my Unix system?<BR>
</A>C8) <A HREF="#C08">Why does my scanner report an infection only sometimes?<BR>
</A>C9) <A HREF="#C09">I think I have detected a new virus; what do I do?<BR>
</A>C10) <A HREF="#C10">CHKDSK reports 639K (or less) total memory on my
system; am I infected?<BR>
</A>C11) <A HREF="#C11">I have an infinite loop of sub-directories on my
hard drive; am I infected?<BR>
</A>C12) <A HREF="#C12">Can a PC not running DOS be infected with a common
DOS virus?<BR>
</A>C13) <A HREF="#C13">My hard-disk's file system has been garbled: Do
I have a virus?</A><BR>
</P>
</UL>

<H3>Section D: Protection Plans (What should I do to prepare against viruses?)</H3>

<UL>
<P>D1) <A HREF="#D01">What is the best antivirus program?<BR>
</A>D2) <A HREF="#D02">Is it possible to protect a computer system with
only software?<BR>
</A>D3) <A HREF="#D03">Is it possible to write-protect the hard disk with
software only?<BR>
</A>D4) <A HREF="#D04">What can be done with hardware protection?<BR>
</A>D5) <A HREF="#D05">Does setting a file's attributes to READ ONLY protect
it from viruses?<BR>
</A>D6) <A HREF="#D06">Do password/access control systems protect my files
from viruses?<BR>
</A>D7) <A HREF="#D07">Do the protection systems in DR DOS work against
viruses?<BR>
</A>D8) <A HREF="#D08">Does a write-protect tab on a floppy disk stop viruses?<BR>
</A>D9) <A HREF="#D09">Do local area networks (LANs) help to stop viruses
or do they facilitate their spread?<BR>
</A>D10) <A HREF="#D10">What is the proper way to make backups?</A><BR>
</P>
</UL>

<H3>Section E: Facts and Fibs About Computer Viruses (Can a virus...?)</H3>

<UL>
<P>E1) <A HREF="#E01">Can boot sector viruses infect non-bootable DOS floppy
disks?<BR>
</A>E2) <A HREF="#E02">Can a virus hide in a PC's CMOS memory?<BR>
</A>E3) <A HREF="#E03">Can a PC virus hide in Extended or in Expanded RAM
in a PC?<BR>
</A>E4) <A HREF="#E04">Can a virus hide in a PC's Upper Memory or its High
Memory Area?<BR>
</A>E5) <A HREF="#E05">Can a virus infect data files?<BR>
</A>E6) <A HREF="#E06">Can viruses spread from one type of computer to
another?<BR>
</A>E7) <A HREF="#E07">Are mainframe computers susceptible to computer
viruses?<BR>
</A>E8) <A HREF="#E08">Some people say that disinfecting files is a bad
idea. Is that true?<BR>
</A>E9) <A HREF="#E09">Can I avoid viruses by avoiding shareware, free
software or games?<BR>
</A>E10) <A HREF="#E10">Can I contract a virus on my PC by performing a
&quot;DIR&quot; of an infected floppy disk?<BR>
</A>E11) <A HREF="#E11">Is there any risk in copying data files from an
infected floppy disk to a clean PC's hard disk?<BR>
</A>E12) <A HREF="#E12">Can a DOS virus survive and spread on an OS/2 system
using the HPFS file system?<BR>
</A>E13) <A HREF="#E13">Under OS/2 2.0+, could a virus infected DOS session
infect another DOS session?<BR>
</A>E14) <A HREF="#E14">Can normal DOS viruses work under MS Windows?<BR>
</A>E15) <A HREF="#E15">Can I get a virus from reading e-mail, BBS message
forums or USENET News?<BR>
</A>E16) <A HREF="#E16">Can a virus &quot;hide&quot; in a GIF or JPEG file?</A><BR>
</P>
</UL>

<H3>Section F: Miscellaneous Questions (I have heard... I was just wondering...)</H3>

<UL>
<P>F1) <A HREF="#F01">How many viruses are there?<BR>
</A>F2) <A HREF="#F02">How do viruses spread so quickly?<BR>
</A>F3) <A HREF="#F03">What is the correct plural of &quot;virus&quot;?
&quot;Viruses&quot; or &quot;viri&quot; or &quot;virii&quot; or &quot;vira&quot;
or...<BR>
</A>F4) <A HREF="#F04">When reporting a virus infection (and looking for
assistance), what information should be included?<BR>
</A>F5) <A HREF="#F05">How often should we upgrade our antivirus tools
to minimize software and labor costs and maximize our protection?<BR>
</A>F6) <A HREF="#F06">What are &quot;virus simulators&quot; and what use
are they?<BR>
</A>F7) <A HREF="#F07">I've heard talk of &quot;good viruses&quot;. Is
it really possible to use a computer virus for something useful?<BR>
</A>F8) <A HREF="#F08">Wouldn't adding self-checking code to your programs
be a good idea?</A><BR>
</P>
</UL>

<H3>Section G: Specific Virus and Antivirus Software Questions...</H3>

<UL>
<P>G1) <A HREF="#G01">I was infected by the Jerusalem virus and disinfected
the infected files with my favorite antivirus program. However, WordPerfect
and some other programs still refuse to work. Why?<BR>
</A>G2) <A HREF="#G02">Is my disk infected with the Stoned virus?<BR>
</A>G3) <A HREF="#G03">I was told that the Stoned virus displays the text
&quot;Your PC is now Stoned&quot; at boot time. I have been infected by
this virus several times, but have never seen the message. Why?<BR>
</A>G4) <A HREF="#G04">I was infected by both Stoned and Michelangelo.
Why has my computer become unbootable? And why, each time I run my favorite
scanner, does it find one of the viruses and say that it is removed, but
when I run it again, it says that the virus is still there?<BR>
</A>G5) <A HREF="#G05">My scanner finds the Filler and/or Israeli Boot
virus in memory, but after I boot from a clean floppy it reports no viruses.
Am I infected?<BR>
</A>G6) <A HREF="#G06">I was infected with Flip and now a large part of
my hard disk seems to have disappeared. What has happened?<BR>
</A>G7) <A HREF="#G07">What does the GenB and/or the GenP virus do?<BR>
</A>G8) <A HREF="#G08">How do I &quot;boot from a clean floppy&quot;?<BR>
</A>G9) <A HREF="#G09">My PC diagnostic utility lists &quot;Cascade&quot;
amongst the hardware interrupts (IRQs). Does this mean I have the Cascade
virus?<BR>
</A>G10) <A HREF="#G10">Occasionally the text &quot;welcome datacomp&quot;
appears in my Mac documents without me typing it. Is this a virus?<BR>
</A>G11) <A HREF="#G11">How good are the antivirus tools included with
MS-DOS 6?<BR>
</A>G12) <A HREF="#G12">When I do a &quot;DIR | MORE&quot;, I see two files
with random names that are not there when I just use &quot;DIR&quot;. On
my friends's system they cannot be seen. Do I have a virus?<BR>
</A>G13) <A HREF="#G13">What is the ChipAway virus? (Or ChipAwayVirus?)</A><BR>
</P>
</UL>

<P>
<HR></P>

<H2>Introduction</H2>

<H3><A NAME="01"></A>Using this FAQ sheet</H3>

<P>This document is intended to answer some Frequently Asked Questions
(FAQs) about computer viruses. This FAQ sheet has been compiled by some
of the main contributors to the Virus-L mailing list and its USENET news
fan-out, comp.virus. The Preface Section (below) explains the multi-part
nature of the FAQ sheet and how to ensure you have &quot;the genuine article&quot;,
and gives details on version numbers and contacting the authors with questions
and suggestions. If you are seeking help after discovering what you suspect
is a virus on your computer, read the Preface Section, skim through Sections
A and B for the essential jargon, then concentrate on Section C. </P>

<P>If you feel that you may have found a new virus, or are not quite sure
if some file or boot sector is infected, please refer to Section F Question
#4 (<A HREF="#F04">F4</A>) before posting a request for assistance. The
answer to this question has been developed to ensure new readers of Virus-L/comp.virus
understand the protocol for raising such questions and to help them avoid
asking questions that can be answered in this document. If you are looking
for help in designing and implementing an antivirus policy or system, read
all of Sections B through F inclusive, paying particular attention to Section
D. </P>

<P>Please read the full list of questions carefully--as with most complex
topics, dozens of different virus-related questions turn out to be about
similar phenomena. If you don't find your exact question here, look closely
at the ones that seem vaguely similar. </P>

<P>Above all, remember that the time to really worry about viruses is <B>before</B>
your computer gets one! </P>

<H3><A NAME="02"></A>Preface Section</H3>

<P>The Virus-L/comp.virus FAQ sheet is normally posted to on-line services
and sent via e-mail in one of two forms: As a single, large (&gt;160KB)
file, or in four separate pieces. Either or both of these forms may be
available for download from FTP sites and BBSes. </P>

<P>The one-piece FAQ sheet should be available in a file called vlfaqxyy.txt,
where &quot;xyy&quot; is the current version number (starting from 200
in mid-1995 for version 2.00). The multi-part version is created by splitting
the main FAQ sheet into four pieces as follows: </P>

<P>vlfxyy-1.txt contains FAQ sections A &amp; B<BR>
vlfxyy-2.txt contains FAQ sections C &amp; D<BR>
vlfxyy-3.txt contains FAQ sections E &amp; F<BR>
vlfxyy-4.txt contains FAQ sections G </P>

<P>(with &quot;xyy&quot; again representing the current version number).
Please do not make your own multi-part FAQ, as each of the parts in the
&quot;official&quot; multi-part version include additional preface information.
</P>

<P>Either or both versions may also be available in some form of compressed
archive--in this case the &quot;name part&quot; of the filename should
be the same as the original file with the extension being replaced (or
appended) as appropriate for the archiving method used. Please <B>do not</B>
repackage the multi-part FAQ into one large archive file, as this defeats
the sole purpose for creating it--to ensure that the FAQ sheet is &quot;officially&quot;
available in a readable form that will pass unmolested through most e-mail
gateways. </P>

<P>All the files in either version of the FAQ sheet are signed with Nick
FitzGerald's PGP key. Nick's public key can be retrieved from the main
PGP key servers. If you do not know what PGP is, but wish to validate your
copy of the FAQ sheet, you should read the USENET newsgroup alt.security.pgp
[please do <B>not</B> e-mail me, as I am not a PGP expert--FAQ maintainer].
</P>

<P>The FAQ sheet is a dynamic document, changing as people's questions
change. The version number also changes as <B>any</B> changes are made.
Version numbers containing a &quot;d&quot; are drafts and should <B>not</B>
be made publicly available, nor distributed. We ask for your cooperation
in deleting and not further distributing &quot;d&quot; versions of the
FAQ sheet. If you have any questions or contributions, please e-mail them
to the FAQ sheet maintainer, Nick FitzGerald, at: <A HREF="mailto:n.fitzgerald@csc.canterbury.ac.nz">n.fitzgerald@csc.canterbury.ac.nz</A>
</P>

<P>The most recent copy of the FAQ sheet will always be available on the
Virus-L/comp.virus archives, including by anonymous FTP on <A HREF="ftp://corsa.ucr.edu/pub/virus-l">corsa.ucr.edu</A>
(IP = 138.23.166.133) in the directory pub/virus-l. </P>

<P>A WWW version of the FAQ sheet, with cross-references and file links
is currently under development, as is a WinHelp version with cross-references
(if you would like to assist with these efforts, or to port one of these
formats to another popular hypertext help format, please contact the FAQ
sheet maintainer so we can better coordinate this work). </P>

<P>In various places the FAQ sheet mentions products by name. This is usually
only for illustrative purposes. Such references should <B>not</B> be taken
to imply that all, some, or any of the contributors to this FAQ sheet endorse
any such product for any purpose or that such products are the <B>best</B>
examples of what is being discussed. Such refernces are usually because
the products named were the first to implement a particular feature or
function. Further, that a given product is <B>not</B> mentioned in the
FAQ should not be taken as an indication of its quality or suitability
for any task. </P>

<P>Various brand and product names are used throughout the FAQ sheet--these
remain trademarks or registered trademarks of their respective holders.
</P>

<P>Unless indicated otherwise, prices are given in US dollars and should
be taken as guides only. Telephone numbers include an indication of the
time-zone relative to GMT--some of these are very approximate, but should
be close enough to save you ringing in the middle of the receiver's night!
</P>

<H3><A NAME="03"></A>Primary contributors (in alphabetical order)</H3>

<P>The following people have provided significant content and/or editorial
input to this FAQ sheet: </P>

<UL>
<P>Mark Aitchison (<A HREF="mailto:m.aitchison@phys.canterbury.ac.nz">m.aitchison@phys.canterbury.ac.nz</A>)<BR>
Vaughan Bell (<A HREF="mailto:vaughan@computing-department.poly-south-west.ac.uk">vaughan@computing-department.poly-south-west.ac.uk</A>)<BR>
Claude Bersano-Hayes (<A HREF="mailto:hayes@urvax.urich.edu">hayes@urvax.urich.edu</A>)<BR>
Matt Bishop (<A HREF="mailto:matt.bishop@dartmouth.edu">matt.bishop@dartmouth.edu</A>)<BR>
Vesselin Bontchev (<A HREF="mailto:bontchev@complex.is">bontchev@complex.is</A>)<BR>
Bruce Burrell (<A HREF="mailto:bpb@us.itd.umich.edu">bpb@us.itd.umich.edu</A>)<BR>
David Chess (<A HREF="mailto:chess@watson.ibm.com">chess@watson.ibm.com</A>)<BR>
John-David Childs (<A HREF="mailto:con_jdc@lewis.umt.edu">con_jdc@lewis.umt.edu</A>)<BR>
Olivier M. J. Crepin-Leblond (<A HREF="mailto:o.crepin-leblond@ic.ac.uk">o.crepin-leblond@ic.ac.uk</A>)<BR>
Nick FitzGerald (<A HREF="mailto:n.fitzgerald@csc.canterbury.ac.nz">n.fitzgerald@csc.canterbury.ac.nz</A>)<BR>
Richard Ford (<A HREF="mailto:virusbtn@vax.ox.ac.uk">virusbtn@vax.ox.ac.uk</A>)<BR>
Alan Glover (<A HREF="mailto:aglover@acorn.co.uk">aglover@acorn.co.uk</A>)<BR>
Sarah Gordon (<A HREF="mailto:sgordon@dockmaster.ncsc.mil">sgordon@dockmaster.ncsc.mil</A>)<BR>
Yaron Y. Goland (<A HREF="mailto:ygoland@seas.ucla.edu">ygoland@seas.ucla.edu</A>)<BR>
Mikko Hypponen (<A HREF="mailto:mikko.hypponen@datafellows.fi">mikko.hypponen@datafellows.fi</A>)<BR>
John Kida (<A HREF="mailto:john_kida@ins.com">john_kida@ins.com</A>)<BR>
Kevin Marcus (<A HREF="mailto:datadec@cs.ucr.edu">datadec@cs.ucr.edu</A>)<BR>
Anthony Naggs (<A HREF="mailto:tony@vps.cis.co.za">tony@vps.cis.co.za</A>)<BR>
Donald G. Peters (<A HREF="mailto:Peters@Dockmaster.NCSC.Mil">Peters@Dockmaster.NCSC.Mil</A>)<BR>
A. Padgett Peterson (<A HREF="mailto:padgett%tccslr.dnet@mmc.com">padgett%tccslr.dnet@mmc.com</A>)<BR>
Y. Radai (<A HREF="mailto:radai@hujivms.huji.ac.il">radai@hujivms.huji.ac.il</A>)<BR>
Brian Seborg (<A HREF="mailto:bseborg@fdic.gov">bseborg@fdic.gov</A>)<BR>
Fridrik Skulason (<A HREF="mailto:frisk@complex.is">frisk@complex.is</A>)<BR>
Rob Slade (<A HREF="mailto:roberts@decus.ca">roberts@decus.ca</A> or <A HREF="mailto:rslade@sfu.ca">rslade@sfu.ca</A>)<BR>
Gene Spafford (<A HREF="mailto:spaf@cs.purdue.edu">spaf@cs.purdue.edu</A>)<BR>
Otto Stolz (<A HREF="mailto:rzotto@nyx.uni-konstanz.de">rzotto@nyx.uni-konstanz.de</A>)<BR>
Ken van Wyk (<A HREF="mailto:krvw@assist.mil">krvw@assist.mil</A>)<BR>
</P>
</UL>

<P>
<HR></P>

<H2>Section A. Sources of Information and Antivirus Software</H2>

<H3><A NAME="A01"></A>A1) What is Virus-L/comp.virus?</H3>

<P>Virus-L and comp.virus are discussion forums which focus on computer
virus issues. More specifically, Virus-L is an electronic mailing list
and comp.virus is a USENET newsgroup. Both groups are moderated; all submissions
are sent to the moderator who decides if a submission should be distributed
to the groups. For more information, including a copy of the posting guidelines,
see the file virus-l.README, available by anonymous FTP on <A HREF="ftp://corsa.ucr.edu/pub/virus-l/virus-l.README">corsa.ucr.edu</A>
in the pub/virus-l directory. </P>

<H3><A NAME="A02"></A>A2) What is the difference between Virus-L and comp.virus?</H3>

<P>Virus-L is a mailing list while comp.virus is a newsgroup. Virus-L is
distributed in &quot;digest&quot; format (with multiple e-mail postings
in one large digest) and comp.virus is distributed as individual news postings.
However, the content of the two groups is identical. </P>

<H3><A NAME="A03"></A>A3) How do I get onto or off Virus-L/comp.virus?</H3>

<P>To subscribe to Virus-L, send e-mail to LISTSERV@LEHIGH.EDU saying &quot;SUB
VIRUS-L your-name&quot;. For example: </P>

<PRE>    SUB VIRUS-L Jane Doe
</PRE>

<P>To be removed from the Virus-L mailing list, send a message to LISTSERV@LEHIGH.EDU
saying &quot;SIGNOFF VIRUS-L&quot;. </P>

<P>To &quot;subscribe&quot; to comp.virus, simply use your favorite USENET
news reader to read the group. </P>

<H3><A NAME="A04"></A>A4) What are the guidelines for Virus-L?</H3>

<P>The posting guidelines are available by anonymous FTP on <A HREF="ftp://corsa.ucr.edu/pub/virus-l/virus-l.README">corsa.ucr.edu</A>.
Retrieve the file pub/virus-l/virus-l.README for the most recent copy.
In general, however, the moderator requires discussions to be polite and
non-commercial. Objective postings of product availability, product reviews,
etc, are fine, but commercial advertisements are not. Requests for virus
samples (binary or disassembly) are forbidden. Technical discussions are
strongly encouraged, however, within reason. </P>

<H3><A NAME="A05"></A>A5) How can I get back-issues of Virus-L?</H3>

<P>Back-issues of Virus-L/comp.virus date back to the group's inception,
on 21 April, 1988. The anonymous FTP archive at <A HREF="ftp://cs.ucr.edu/pub/virus-l">cs.ucr.edu</A>
carries all of the Virus-L back issues. Retrieve the file <A HREF="ftp://corsa.ucr.edu/pub/virus-l/README">pub/virus-l/README</A>
for more information on the Virus-L/comp.virus archives. </P>

<H3><A NAME="A06"></A>A6) What are the known viruses, their names, major
symptoms and possible cures?</H3>

<P>The reader should be aware that there is no universally accepted naming
convention for viruses, nor is there any standard means of testing. As
a consequence nearly <B>all</B> virus information is highly subjective
and open to interpretation and dispute. </P>

<P>There are several major sources of information on specific viruses.
Probably the largest one is Patricia Hoffman's hypertext VSUM. While VSUM
is quite complete it only covers PC viruses and it is regarded by many
in the antivirus field as being inaccurate, so we advise you not to rely
solely on it. It can be downloaded from most major archive sites. </P>

<P>A more precise source of information is the Computer Virus Catalog,
published by the Virus Test Center in Hamburg. It contains highly technical
descriptions of computer viruses for several platforms: DOS, Mac, Amiga,
Atari ST and Unix. Unfortunately, the DOS section is quite incomplete.
The CVC is available by anonymous FTP from <A HREF="ftp://ftp.informatik.uni-hamburg.de/pub/virus/texts/catalog">ftp.informatik.uni-hamburg.de</A>
(IP = 134.100.4.42), directory pub/virus/texts/catalog. (A copy of the
CVC is also available by anonymous FTP on <A HREF="ftp://corsa.ucr.edu/pub/virus-l/docs/vtc">corsa.ucr.edu</A>
in the directory pub/virus-l/docs/vtc.) </P>

<P>Another small collection of good technical descriptions of PC viruses,
called CARObase is also available from <A HREF="ftp://ftp.informatik.uni-hamburg.de/pub/virus/texts/carobase">ftp.informatik.uni-hamburg.de</A>,
in the directory /pub/virus/texts/carobase. </P>

<P>A fourth source of information is the monthly <I>Virus Bulletin</I>,
published in the UK. Among other things, it gives detailed technical information
on viruses (see <A HREF="#A08">A8</A>); a one year subscription, however,
costs $395. US subscriptions can be ordered by calling (203) 431 8720 (GMT-5/-4)
or writing to 590 Danbury Road, Ridgefield, CT 06877; for European subscriptions,
the number is +44 1235 555139 (GMT+0/-1) and the address is: 21 The Quadrant,
Abingdon, OXON, OX14 3YS, ENGLAND. General enquiries can be sent to <A HREF="mailto:virusbtn@vax.ox.ac.uk">virusbtn@vax.ox.ac.uk</A>.
</P>

<P>Another source of information is the book &quot;Virus Encyclopedia&quot;
which is part of the printed documentation of Dr. Solomon's AntiVirus ToolKit
(a commercial DOS antivirus program). It is more complete than the CVC
list and just as accurate; however it lists only DOS viruses. This book
may be available separately </P>

<P>The on-line help system of the shareware antivirus product Anti-Virus
Pro contains a large and relatively exact collection of virus descriptions
and even includes demonstrations of several of the audio and visual effects
produced by some viruses. However the text can be difficult to read because
English is not the author's native tongue. </P>

<P>The WWW site <A HREF="http://www.datafellows.fi">www.datafellows.fi</A>
has an on-line, cross-referenced database containing descriptions of about
1500 PC viruses, with an emphasis on viruses &quot;in the wild&quot;. Another
network-accessible source of information pertaining to viruses is provided
by IBM AntiVirus, at A HREF=&quot;http://www.brs.ibm.com/ibmav.html&quot;&gt;http://www.brs.ibm.com/ibmav.html
or via gopher at the site <A HREF="gopher://index.almaden.ibm.com">index.almaden.ibm.com</A>
(choose &quot;IBM Computer Virus Information Center&quot; from the main
menu). </P>

<P>An excellent source of information regarding Apple Macintosh viruses
is the on-line documentation in the freeware Disinfectant program by John
Norstad of Northwestern University. This is available at most Mac archive
sites. </P>

<H3><A NAME="A07"></A>A7) Where can I get free or shareware antivirus programs?</H3>

<P>The Virus-L/comp.virus archive sites carry publicly distributable antivirus
software products. Up-to-date listings of these antivirus archive sites
are posted monthly to Virus-L/comp.virus (see <A HREF="#A05">A5</A> for
details). </P>

<P>Many freeware/shareware DOS antivirus programs are available from the
SimTel Software Repository. This collection of software is available via
anonymous FTP from <A HREF="ftp://ftp.coast.net/SimTel/msdos/virus">ftp.coast.net</A>
(IP = 141.210.10.117), with antivirus software in the directory /SimTel/msdos/virus.
Note that the SimTel archive is &quot;mirrored&quot; at many anonymous
FTP sites, including <A HREF="ftp://wuarchive.wustl.edu/systems/ibmpc/simtel/virus">wuarchive.wustl.edu</A>
(IP = 128.252.135.4, /systems/ibmpc/simtel/virus), and <A HREF="ftp://nic.funet.fi/pub/msdos/SimTel/virus">nic.funet.fi</A>
(IP = 128.214.248.6, /pub/msdos/SimTel/virus). Most of this software can
also be obtained via e-mail in uuencoded form from various TRICKLE sites,
especially in Europe. </P>

<P>Likewise, Macintosh antivirus programs can be found in /pub/tools/mac
at <A HREF="ftp://coast.cs.purdue.edu/pub/tools/mac">coast.cs.purdue.edu</A>.
</P>

<P>A list of many antivirus programs, including commercial products and
one person's rating of them, can be obtained by anonymous ftp from <A HREF="ftp://corsa.ucr.edu/pub/virus-l/docs/reviews">corsa.ucr.edu</A>
(IP = 138.23.166.33) in pub/virus-l/docs/reviews in the file slade.quickref.rvw.
This directory also contains detailed product reviews of many products.
</P>

<H3><A NAME="A08"></A>A8) Where can I get more information on viruses,
etc?</H3>

<P>Five very good books on computer viruses that cover most of the introductory
and technical questions you might have are: </P>

<P><I>Computers Under Attack: Intruders, Worms and Viruses</I> edited by
Peter J. Denning, ACM Press/Addison-Wesley, 1990. This is a book of collected
readings that discuss computer viruses, computer worms, break-ins, and
social aspects, and many other items related to computer security and malicious
software. A very solid, readable collection that doesn't require a highly-technical
background. Price: $20.50. </P>

<P><I>Rogue Programs: Viruses, Worms and Trojan Horses</I> edited by Lance
J. Hoffman, Van Nostrand Reinhold, 1990. This is a book of collected readings
describing in detail how viruses work, where they come from, what they
do, etc. It also has material on worms, Trojan Horse programs, and other
malicious software programs. This book focuses more on mechanism and relatively
less on social aspects than does the Denning book; however, there is an
excellent piece by Anne Branscomb that covers legal aspects. Price: $32.95.
</P>

<P><I>A Pathology of Computer Viruses</I> by David Ferbrache, Springer-Verlag,
1992. This is an in-depth book on the history, operation, and effects of
computer viruses. It is one of the most complete books on the subject,
with an extensive history section, a section on Macintosh viruses, network
worms, and Unix viruses. Price $49.00. </P>

<P><I>A Short Course on Computer Viruses, 2nd edition</I>, by Dr. Fred
B. Cohen, Wiley, 1994. This book is by a well-known pioneer in virus research,
who has also written dozens of technical papers on the subject. Price:
$35.00 ($45.00 with accompanying diskette). </P>

<P><I>Robert Slade's Guide to Computer Viruses</I>, by Robert Slade, Springer-Verlag,
1994. This book is a comprehensive introduction to computer viruses, written
in a clear and easy style for non-experts. Price $29.00. </P>

<P>A somewhat dated, but still useful, high-level description of viruses,
suitable for a complete novice with little computer background is <I>Computer
Viruses: Dealing with Electronic Vandalism and Programmed Threats</I> by
Eugene H. Spafford, Kathleen A. Heaphy, and David J. Ferbrache, ITAA (Arlington,
VA), 1989. ITAA (Information Technology Association of America) is a computer
industry service organization and not a publisher. While many people have
indicated they find this a very understandable reference it is now out
of print, but portions of it have been reprinted in many other places,
including Denning and Hoffman's books (above). </P>

<P>It is also worth consulting various publications such as <I>Computers
&amp; Security</I> and <I>SECURE Computing</I> (both of which, while not
limited to viruses, contain many relevant papers) and the <I>Virus Bulletin</I>
(published in the UK, it contains many technical articles). </P>

<H3><A NAME="A09"></A>A9) Why is so much of the discussion in Virus-L/comp.virus
about PCs and DOS? Is this forum only for the PC world?</H3>

<P>No--neither the problem nor this discussion relate only to PCs. Viral
programs are a property of general-purpose computers, and therefore are,
and will be, a problem for any computer system. We <B>are</B> aware of
the lopsided coverage and welcome the submission of material relevant to
other systems. </P>

<P>There are several reasons for the apparent imbalance. One very general
reason is that users of DOS heavily outnumber the users of other operating
systems. The discussion in Virus-L/comp.virus therefore tends to have a
preponderance of questions and chat about DOS specific infections and problems.
We welcome questions, comments and reports from users of other operating
systems and platforms. If you use a computer of another type, please do
contribute to the discussion. Just because the majority are talking about
DOS does <B>not</B> mean that your contribution is not welcome. It may
be important precisely because you have a different perspective. </P>

<P>Therefore, let us assure you there is no deliberate attempt being made
to exclude Amiga, Atari, Macintosh, OS/2, UNIX, VMS, Windows (NT, '95 or
any other flavor) or any other platform or operating system from the discussion
or the FAQ sheet. If you feel that there <B>is</B> too much PC bias, please
don't complain about it--tell us something about the virus situation on
<B>your</B> system. </P>

<P>
<HR></P>

<H2>Section B. Definitions and General Information</H2>

<H3><A NAME="B01"></A>B1) What are computer viruses (and why should I worry
about them)?</H3>

<P>Fred Cohen &quot;wrote the book&quot; on computer viruses, through his
Ph.D. research, dissertation and various related scholarly publications.
He developed a theoretical, mathematical model of computer virus behaviour,
and used this to test various hypotheses about virus spread. Cohen's formal
definition (model) of a virus does not easily translate into &quot;human
language&quot;, but his own, well-known, informal definition is <B>&quot;a
computer virus is a computer program that can infect other computer programs
by modifying them in such a way as to include a (possibly evolved) copy
of itself&quot;</B>. Note that a program does not have to perform outright
damage (such as deleting or corrupting files) in order to be classified
as a &quot;virus&quot; by this definition. </P>

<P>The problem with Cohen's human language definition is that it doesn't
capture many of the subtleties of his mathematical model--as indeed, few
informal definitions do--and questions arise that can only be answered
by checking his formal model. Using his formal definitions, Cohen classifies
some things as viruses that most readers of Virus-L/comp.virus (and many
experts) would not consider viruses. For example, given certain circumstances
on an IBM PC running DOS, the DISKCOPY program is classified as a virus
by Cohen's formalisms. </P>

<P>This has led to some tension between what Cohen considers a &quot;virus&quot;
and what is usually discussed on Virus-L. Several other definitions of
&quot;virus&quot; have been proposed, but it is probably fair to say that
most of us are concerned about things that are viruses by the following
definition: </P>

<BLOCKQUOTE>
<P>A computer virus is a self-replicating program containing code that
explicitly copies itself and that can &quot;infect&quot; other programs
by modifying them or their environment such that a call to an infected
program implies a call to a possibly evolved copy of the virus. </P>
</BLOCKQUOTE>

<P>Probably the major distinction between Cohen's definition and &quot;viruses&quot;
as we tend to use the word is that we see them as deliberately designed
to replicate (although there is some debate over this too). Cohen's definition
does <B>not</B> require this (and this would be difficult to build into
his formal model). </P>

<P>Note that many people use the term &quot;virus&quot; loosely to cover
any sort of program that tries to hide its possibly malicious function
and\or tries to spread onto as many computers as possible, though some
of these programs may more correctly be called &quot;worms&quot; (see <A HREF="#B02">B2</A>)
or &quot;Trojan Horses&quot; (see <A HREF="#B03">B3</A>). Also be aware
that what constitutes a &quot;program&quot; for a virus to infect may include
a lot more than is at first obvious--don't assume too much about what a
virus can or can't do! </P>

<P>These software &quot;pranks&quot; are very serious; they are spreading
faster than they are being stopped, and even the least harmful of viruses
could be life-threatening. For example, in the context of a hospital life-support
system, a virus that &quot;simply&quot; stops a computer and displays a
message until a key is pressed, could be fatal. Further, those who create
viruses can not halt their spread, even if they wanted to. It requires
a concerted effort from computer users to be &quot;virus-aware&quot;, rather
than continuing the ambivalence that has allowed computer viruses to become
such a problem. </P>

<P>Computer viruses are actually a special case of something known as &quot;malicious
logic&quot; or &quot;malware&quot;, and other forms of malicious logic
are also discussed in Virus-L/comp.virus. It can be important to understand
the distinctions between viruses and these other forms of malware. </P>

<H3><A NAME="B02"></A>B2) What is a Worm?</H3>

<P>A computer <B>WORM</B> is a self-contained program (or set of programs),
that is able to spread functional copies of itself or its segments to other
computer systems (usually via network connections). </P>

<P>Note that unlike viruses, worms do not need to attach themselves to
a host program. There are two types of worms--host computer worms and network
worms. </P>

<P>Host computer worms are entirely contained in the computer they run
on and use network connections only to copy themselves to other computers.
Host computer worms where the original terminates itself after launching
a copy on another host (so there is only one copy of the worm running somewhere
on the network at any given moment), are sometimes called &quot;rabbits.&quot;
</P>

<P>Network worms consist of multiple parts (called &quot;segments&quot;),
each running on different machines (and possibly performing different actions)
and using the network for several communication purposes. Propagating a
segment from one machine to another is only one of those purposes. Network
worms that have one main segment which coordinates the work of the other
segments are sometimes called &quot;octopuses.&quot; </P>

<P>The infamous Internet Worm (perhaps covered best in &quot;The Internet
Worm Program: An Analysis,&quot; Eugene H. Spafford, <I>Purdue Technical
Report CSD-TR-823</I>) was a host computer worm, while the Xerox PARC worms
were network worms (a good starting point for these is &quot;The Worm Programs--Early
Experience with a Distributed Computation,&quot; <I>Communications of the
ACM</I>, 25, no.3, March 1982, pp. 172-180). </P>

<H3><A NAME="B03"></A>B3) What is a Trojan Horse?</H3>

<P>A <B>TROJAN HORSE</B> is a program that does something undocumented
that the programmer intended, but that some users would not approve of
if they knew about it. According to some people, a virus is a particular
case of a Trojan Horse, namely one which is able to spread to other programs
(i.e., it turns them into Trojans too). According to others, a virus that
does not do any deliberate damage (other than merely replicating) is not
a Trojan. Finally, despite the definitions, many people use the term &quot;Trojan&quot;
to refer only to <B>non-replicating</B> malware, so that the set of Trojans
and the set of viruses are disjoint. </P>

<H3><A NAME="B04"></A>B4) What are the main types of PC viruses?</H3>

<P>Generally, there are two main classes of viruses. The first class consists
of the <B>FILE INFECTORS</B> which attach themselves to ordinary program
files. These usually infect arbitrary COM and/or EXE programs, though some
can infect any program for which execution or interpretation is requested,
such as SYS, OVL, OBJ, PRG, MNU and BAT files. There is also at least one
PC virus that &quot;infects&quot; source code files by inserting code into
C language source files that replicates the virus's function in any executable
that is produced from the infected source code files (see <A HREF="#E05">E5</A>
for a more detailed discussion of the issue of &quot;executable&quot; code).
</P>

<P>File infectors can be either <B>DIRECT-ACTION</B> or <B>RESIDENT</B>.
A direct-action virus selects one or more programs to infect each time
a program infected by it is executed. A resident virus installs itself
somewhere in memory (RAM) the first time an infected program is executed,
and thereafter infects other programs when <B>they</B> are executed (as
in the case of the Jerusalem virus) or when other conditions are fulfilled.
Direct-action viruses are also sometimes referred to as <B>NON-RESIDENT</B>.
The Vienna virus is an example of a direct-action virus. Most viruses are
resident. </P>

<P>The second main category of viruses is <B>SYSTEM</B> or <B>BOOT-RECORD
INFECTORS</B>: these viruses infect executable code found in certain system
areas on a disk. On PCs there are ordinary boot-sector viruses, which infect
only the DOS boot sector, and MBR viruses which infect the Master Boot
Record on fixed disks and the DOS boot sector on diskettes. Examples include
Brain, Stoned, Empire, Azusa and Michelangelo. All common boot sector and
MBR viruses are memory resident. </P>

<P>To confuse this classification somewhat, a few viruses are able to infect
both files and boot sectors (the Tequila virus is one example). These are
often called <B>&quot;MULTI-PARTITE&quot;</B> viruses, though there has
been criticism of this name; another name is <B>&quot;BOOT-AND-FILE&quot;</B>
virus. </P>

<P>Aside from the two main classes described above, many antivirus researchers
distinguish either or both of the following as distinct classes of virus:
</P>

<P><B>FILE SYSTEM</B> or <B>CLUSTER</B> viruses (e.g. Dir-II) are those
that modify directory table entries so that the virus is loaded and executed
before the desired program is. The program itself is not physically altered,
only the directory entry of the program file is. Some consider these to
be a third category of viruses, while others consider them to be a sub-category
of the file infectors. <B>LINK</B> virus is another term occasionally used
for these viruses, though it should be avoided, as &quot;link virus&quot;
is commonly used in the Amiga world to mean &quot;file infecting virus.&quot;
</P>

<P><B>KERNEL</B> viruses target specific features of the programs that
contain the &quot;core&quot; (or &quot;kernel&quot;) of an operating system
(3APA3A is a DOS kernel virus and is also multipartite). A file infecting
virus that <B>can</B> infect kernel program files is <B>not</B> a kernel
virus--this term is reserved for describing viruses that utilize some special
feature of kernel files (such as their physical location on disk or a special
loading or calling convention). </P>

<H3><A NAME="B05"></A>B5) What is a stealth virus?</H3>

<P>A <B>STEALTH</B> virus is one that, while &quot;active&quot;, hides
the modifications it has made to files or boot records. This is usually
achieved by monitoring the system functions used to read files or sectors
from storage media and forging the results of calls to such functions.
This means programs that try to read infected files or sectors see the
original, uninfected form instead of the actual, infected form. Thus the
virus's modifications may go undetected by antivirus programs. However,
in order to do this, the virus must be resident in memory when the antivirus
program is executed and <B>this</B> may be detected by an antivirus program.
</P>

<P>Example: The very first DOS virus, Brain, a boot-sector infector, monitors
physical disk I/O and re-directs any attempt to read a Brain-infected boot
sector to the disk area where the original boot sector is stored. The next
viruses to use this technique were the file infectors Number of the Beast
and Frodo (aka 4096, 4K). </P>

<P>Countermeasures: A &quot;clean&quot; system is needed so that no virus
is present to distort the results of system status checks. Thus the system
should be started from a trusted, clean, bootable diskette before any virus-checking
is attempted; this is &quot;The Golden Rule of the Trade&quot; (see <A HREF="#G08">G8</A>
for help with making a clean boot disk and booting clean). </P>

<H3><A NAME="B06"></A>B6) What is a polymorphic virus?</H3>

<P>A <B>POLYMORPHIC</B> virus is one that produces varied but operational
copies of itself. These strategies have been employed in the hope that
virus scanners (see <A HREF="#D01">D1</A>) will not be able to detect all
instances of the virus. </P>

<P>One method of evading scan string-driven virus detectors is self-encryption
with a variable key. These viruses (e.g. Cascade) are not termed &quot;polymorphic&quot;,
as their decryption code is always the same. Therefore the decryptor can
be used as a scan string by the simplest scan string-driven virus scanners
(unless another virus uses the identical decryption routine <B>and</B>
exact identification (see <A HREF="#B15">B15</A>) is required). </P>

<P>A technique for making a polymorphic virus is to choose among a variety
of different encryption schemes requiring different decryption routines:
only one of these routines would be plainly visible in any instance of
the virus (e.g. the Whale virus). A scan string-driven virus scanner would
have to exploit several scan strings (one for each possible decryption
method) to reliably identify a virus of this kind. </P>

<P>More sophisticated polymorphic viruses (e.g. V2P6) vary the sequences
of instructions in their variants by interspersing the decryption instructions
with &quot;noise&quot; instructions (e.g. a No Operation instruction or
an instruction to load a currently unused register with an arbitrary value),
by interchanging mutually independent instructions, or even by using various
instruction sequences with identical net effects (e.g. Subtract A from
A, and Move 0 to A). A simple-minded, scan string-based virus scanner would
not be able to reliably identify all variants of this sort of virus; rather,
a sophisticated &quot;scanning engine&quot; has to be constructed after
thorough research into the particular virus. </P>

<P>One of the most sophisticated forms of polymorphism used so far is the
&quot;Mutation Engine&quot; (MtE) which comes in the form of an object
module. With the Mutation Engine any virus can be made polymorphic by adding
certain calls to its assembler source code and linking to the mutation-engine
and random-number generator modules. </P>

<P>The advent of polymorphic viruses has rendered virus-scanning an ever
more difficult and expensive endeavor; adding more and more scan strings
to simple scanners will not adequately deal with these viruses. </P>

<H3><A NAME="B07"></A>B7) What are &quot;fast&quot; and &quot;slow&quot;
infectors?</H3>

<P>A typical file infector (such as the Jerusalem) copies itself to memory
when a program infected by it is executed, and then infects other programs
when they are executed. </P>

<P>A <B>FAST infector</B> is a virus that, when it is active in memory,
infects not only programs which are executed, but even those that are merely
opened. The result is that if such a virus is in memory, running a scanner
or integrity checker can result in all (or at least many) programs becoming
infected. Examples are the Dark Avenger and the Frodo viruses. </P>

<P>The term <B>&quot;SLOW infector&quot;</B> is sometimes used to refer
to a virus that only infect files as they are modified or as they are created.
The purpose is to fool people who use integrity checkers into thinking
that modifications reported by their integrity checker are due solely to
legitimate reasons. An example is the Darth Vader virus. </P>

<H3><A NAME="B08"></A>B8) What is a sparse infector?</H3>

<P>The term <B>&quot;sparse infector&quot;</B> is sometimes used to describe
a virus that infects only occasionally (e.g. every tenth program executed),
or only files whose lengths fall within a narrow range, etc. By infecting
less often, such viruses try to minimize the probability of being discovered.
</P>

<H3><A NAME="B09"></A>B9) What is a companion virus?</H3>

<P>A <B>COMPANION</B> virus is one that, instead of modifying an existing
file, creates a new program which (unknown to the user) is executed instead
of the intended program. On exit, the new program executes the original
program so that things appear normal. On PCs this has usually been accomplished
by creating an infected .COM file with the same name as an existing .EXE
file. Integrity checking antivirus software that only looks for modifications
in existing files will fail to detect such viruses. </P>

<H3><A NAME="B10"></A>B10) What is an armored virus?</H3>

<P>An <B>ARMORED virus</B> is one that uses special tricks to make tracing,
disassembling and understanding of its code more difficult. A good example
is the Whale virus. </P>

<H3><A NAME="B11"></A>B11) What is a cavity virus?</H3>

<P>A <B>CAVITY VIRUS</B> is one which overwrites a part of the host file
that is filled with a constant (usually nulls), without increasing the
length of the file, but preserving its functionality. The Lehigh virus
was an early example of a cavity virus. </P>

<H3><A NAME="B12"></A>B12) What is a tunnelling virus?</H3>

<P>A <B>TUNNELLING VIRUS</B> is one that finds the original interrupt handlers
in DOS and the BIOS and calls them directly, thus bypassing any activity
monitoring program (see <A HREF="#D01">D1</A>) which may be loaded and
have intercepted the respective interrupt vectors in its attempt to detect
viral activity. Some antivirus software also uses tunnelling techniques
in an attempt to bypass any unknown or undetected virus that may be active
when it runs. </P>

<H3><A NAME="B13"></A>B13) What is a dropper?</H3>

<P>A <B>DROPPER</B> is a program that has been designed or modified to
&quot;install&quot; a virus onto the target system. The virus code is usually
contained in a dropper in such a way that it won't be detected by virus
scanners that normally detect that virus (i.e., the dropper program is
not <B>infected</B> with the virus). While quite uncommon, a few droppers
have been discovered. A dropper is effectively a Trojan Horse (see <A HREF="#B03">B3</A>)
whose payload is installing a virus infection. A dropper which installs
a virus only in memory (without infecting anything on the disk) is sometimes
called an &quot;injector&quot;. </P>

<H3><A NAME="B14"></A>B14) What is an ANSI bomb?</H3>

<P>An <B>&quot;ANSI bomb&quot;</B> is a sequence of characters, usually
embedded in a text file, that reprograms various keyboard functions of
computers with ANSI console (screen and keyboard) drivers. In theory a
special sequence of characters could have been included in this FAQ sheet
to reprogram your Enter key to issue the command &quot;format c:&quot;
with a return character tacked on the end. </P>

<P>Such a possibility however, need not translate into much of a threat.
It is rare for modern software to require the computer it runs on to have
an ANSI console, so few PCs or other machines should load ANSI drivers.
Also, few people use software that simply &quot;types&quot; output to the
terminal device, so such an ANSI bomb in an e-mail or News posting would
most likely not reprogram your keyboard anyway. Further, although FORMAT
C: may be catastrophic under certain versions of DOS, it won't hurt Macintoshes
and would probably have very unexpected, or no, effects on other systems.
</P>

<P>If you are at all worried about the possibility of having something
untoward happen on your PC due to an ANSI bomb <B>and</B> you have to load
an ANSI driver (some communications software still requires it), look for
one of the third-party ANSI drivers which abound on BBSes and FTP sites.
Most of these have improved performance over DOS's ANSI.SYS <B>and</B>
either do not support, or let you disable, keyboard re-mapping. </P>

<H3><A NAME="B15"></A>B15) Miscellaneous Jargon and Abbreviations</H3>

<P><B>AV</B> = antivirus. A commonly used shorthand on Virus-L/comp.virus,
as in &quot;av software&quot;. </P>

<P><B>BSI</B> = Boot Sector Infector: a virus that takes control when the
computer attempts to boot. These are found in the boot sectors of floppy
disks, and the MBRs or boot sectors of hard disks (see <A HREF="#B04">B4</A>
for more details). BSIs are also known as BSVs (Boot Sector Viruses). </P>

<P><B>CMOS</B> = Complementary Metal Oxide Semiconductor: A memory area
that is used in AT class, and higher, PCs for storage of system information.
CMOS is battery backed RAM (see below), originally used to maintain date
and time information while the PC was turned off. CMOS memory is not in
the normal CPU address space and cannot be executed (see <A HREF="#E02">E2</A>
for further discussion of issues concerning CMOS memory and viruses). </P>

<P><B>DBS</B> = DOS Boot Sector: The first sector of a logical DOS partition
on a hard disk or the first absolute sector of a diskette. This sector
contains the startup code that actually loads DOS. This is often confused
with the MBR. Some boot sector viruses infect the DBS rather than the MBR
when infecting hard disks. </P>

<P><B>DETECTION</B> = The ability of an antivirus program to detect that
a virus is present, without necessarily reporting which particular virus
it is (also see IDENTIFICATION and RECOGNITION, in this section). </P>

<P><B>DOS</B> = Disk Operating System. We use the term &quot;DOS&quot;
to mean any of the MS-DOS, PC-DOS, DR DOS or Novell DOS systems for PCs
and compatibles, even though there are operating systems called &quot;DOS&quot;
on other, unrelated machines. </P>

<P><B>GERM</B> = The first generation of a virus. It normally cannot be
produced again during the replication process and is usually created by
compiling the source of the virus. </P>

<P><B>GOAT FILES</B> = Programs which usually do nothing special (e.g.,
just exit, or simply display a message), that are used by antivirus researchers
to capture samples of viruses. This is done to make it easier to disassemble
and understand the virus, because the infected &quot;goat&quot; program
is (usually) simple and does not clutter the disassembly. Alternative terms
are BAIT FILES, DECOY FILES and VICTIM FILES. In any of these terms, the
word &quot;programs&quot; often replaces the word &quot;files&quot;. </P>

<P><B>IDENTIFICATION</B> = The ability of an antivirus program (usually
a scanner) to not only detect the virus and recognize it by name, but also
to recognize it to a high degree of uniqueness. This allows third parties
to understand which particular virus it is without seeing a sample of the
virus. EXACT IDENTIFICATION occurs when every section of the non-modifiable
parts of the virus body are uniquely identified. ALMOST EXACT IDENTIFICATION
occurs if the identification is only good enough to ensure that an attempt
to remove the virus will not result in damage to the host object by the
use of an inappropriate disinfection method (also see DETECTION and RECOGNITION,
in this section). </P>

<P><B>MBR</B> = Master Boot Record: the first absolute sector (track 0,
head 0, sector 1) on a PC hard disk, that usually contains the partition
table but on some PCs may only contain a boot sector. The MBR is also known
as the MBS (Master Boot Sector). This is <B>not</B> the same as the DOS
Boot Sector, logical sector 0 (see above). </P>

<P><B>PARTITION TABLE</B> = A 64-byte data structure that defines the way
a PC's hard disk is divided into logical sections known as partitions.
While there is often more than one partition table on a PC's hard disk,
the most important is the one stored <B>in</B> the MBR. This one contains
important extra information such as which partition (if any) should be
booted from. The partition table is purely data, so is not executed. Some
people erroneously use the term &quot;partition table virus&quot; as a
synonym for &quot;MBR virus&quot;. </P>

<P><B>RAM</B> = Random Access Memory: the place programs are loaded into
in order to execute; the significance for viruses is that, to be active,
they must load themselves into part of the RAM. However, some virus scanners
may declare that a virus is active when it is found in RAM, even though
it may only be left in a buffer area following a disk read operation, rather
than truly being active (see <A HREF="#C08">C8</A> for further discussion
of this issue). </P>

<P><B>RECOGNITION</B> = The ability of an antivirus program (usually a
scanner) to detect a virus and to recognize it by name (also see DETECTION
and IDENTIFICATION, in this section). </P>

<P><B>TARGETING VIRUS</B> = A virus that tries to bypass or hinder the
operation of one or more <B>specific</B> antivirus programs. Also known
as RETALIATOR, RETRO and ANTI-ANTIVIRUS viruses. </P>

<P><B>SCAN STRING</B> = A sequence of bytes (characters) that occur in
a known virus but not, one hopes, in legitimate programs. Some scanners
allow &quot;wildcards&quot;--positions that are matched by any character--in
their scan strings. Authors of virus scanners reduce the likelihood of
false positives (see <A HREF="#C05">C5</A>) by carefully selecting their
scan strings and often by only searching &quot;likely&quot; parts of target
files. </P>

<P><B>SEARCH STRING</B> = A synonym for scan string. </P>

<P><B>SIGNATURE</B> = A poor synonym for scan string. We recommend that
you avoid using this term and use &quot;scan string&quot; or &quot;search
string&quot; instead. </P>

<P><B>TOM</B> = Top Of Memory: the end of conventional memory--an architectural
design limit--at the 640KB mark on most PCs. Some early PCs may not have
a full 640KB, but the amount of memory is always a multiple of 64KB. A
boot-record virus on a PC typically resides just below this mark and changes
the value which will be reported for the TOM to the location of the beginning
of the virus so that it won't be overwritten. Checking this value for changes
can help detect a virus, but there are also legitimate reasons why it may
change (see <A HREF="#C10">C10</A>). A very few PCs with unusual configurations
or memory managers may report in excess of 640KB. </P>

<P><B>TSR</B> = Terminate but Stay Resident: these are PC programs that
stay in memory while you continue to use the computer for other purposes;
they include pop-up utilities, network software, and the great majority
of common viruses. These can often be seen using utilities such as MEM
and MSD. </P>

<P><B>VX</B> = Virus eXchange. A shorthand usually reserved for those BBSes
and FTP sites, and their community of users, that make their virus collections
&quot;openly&quot; available for downloading. Exchange of virus samples
between bona fide members of the antivirus community is not tagged with
the VX label. </P>

<P>
<HR></P>

<H2>Section C. Virus Detection</H2>

<H3><A NAME="C01"></A>C1) What are the symptoms and indications of a virus
infection?</H3>

<P>Many people associate destruction--file corruption, reformatted disks
and the like--with viruses. Machines infected with viruses that do this
kind of damage often display such damages too. This is unfortunate, as
usually viruses can be detected or prevented from infecting long before
they can inflict any (serious) damage, though many viruses have no &quot;payload&quot;
at all. Note that viruses that simply reformat the hard disk shortly after
infecting a machine tend to wipe themselves out faster than they spread,
so don't get far. </P>

<P>Thus, the more successful viruses typically try to spread as much as
possible before delivering their payload, if any. As these tend to be the
viruses you are most likely to encounter, you should be aware that there
are usually symptoms of virus infection before any (or much!) damage is
done. </P>

<P>There are various kinds of symptoms that some virus authors have written
into their programs, such as messages, music and graphical displays. The
main indications, however, are changes in file sizes and contents, changing
of interrupt vectors, or the reassignment of other system resources. The
unaccounted use of RAM or a reduction in the amount reported to be in the
machine are important indicators. Examination of program code is valuable
to the trained eye, but even a novice can often spot the gross differences
between a valid boot sector and some viral ones. These symptoms, along
with longer disk activity and strange behavior from the hardware, may instead
be caused by genuine software, by harmless &quot;joke&quot; programs, or
by hardware faults. </P>

<P>The only foolproof way to determine that a virus is present is for an
expert to analyse the assembly code contained in all programs and system
areas, but this is usually impracticable. Virus scanners go some way towards
performing this analysis by looking in that code for known viruses; some
even use heuristic means to spot &quot;virus-like&quot; code, but this
is not always reliable. It is wise to arm yourself with the latest antivirus
software and to pay close attention to your system. In particular, look
for any unexpected change in the memory map or configuration as soon as
you start the computer. For users of DOS 5.0+, the MEM program with the
/C switch is very handy for this. If you have DR DOS, use MEM with the
/A switch; if you have an earlier DOS version, use CHKDSK or the commonly-available
MAPMEM utility. You don't have to know what all the numbers mean, only
that they have changed <B>unexpectedly</B>. Mac users have &quot;info&quot;
options, which give some indication of memory use, but may need ResEdit
to supply more detailed information. </P>

<P>If you run Windows on your PC and you suddenly start getting messages
at Windows startup that 32-bit Disk Access cannot be used, this often indicates
your PC has been infected by a boot-sector virus. </P>

<H3><A NAME="C02"></A>C2) What steps should be taken in diagnosing and
identifying viruses?</H3>

<P>Most of the time, a virus scanner program will take care of that for
you. To help identify problems early, run a virus scanner: </P>

<OL>
<LI>On new programs and diskettes (write-protect diskettes before scanning
them). </LI>

<LI>When an integrity checker reports a mismatch. </LI>

<LI>When a generic monitoring program sounds an alarm. </LI>

<LI>When you receive an updated version of a scanner (or you have a chance
to run a different scanner than the one you have been using). </LI>
</OL>

<P>Because of the time required, it is not generally advisable to set a
scanner to check your entire hard disk on every boot. </P>

<P>If you run into an alarm and your scanner doesn't identify anything
or doesn't properly clean up for you, first verify that the version you
are using is the most recent. Then get in touch with a reputable antivirus
researcher, who may ask you to send in a copy of the infected file. (Also
see <A HREF="#C09">C9</A> and <A HREF="#F04">F4</A> if you decide you need
to ask for help on Virus-L/comp.virus.) </P>

<H3><A NAME="C03"></A>C3) What is the best way to remove a virus?</H3>

<P>In order that downtime be short and losses low, do the minimum that
you must to restore the system to a normal state, starting with booting
the system from a clean diskette (see <A HREF="#G08">G8</A>). It is <B>never</B>
necessary to low-level format a hard disk to recover from a virus infection!
</P>

<P>If backups of infected or damaged files are available and, in making
them, appropriate care was taken to ensure that infected files have not
been included in the backups (see <A HREF="#D10">D10</A>), restoring from
backup is the safest solution, even though it can be a lot of work if many
files are involved. </P>

<P>More commonly, a disinfecting program is used, though disinfection is
somewhat controversial and problematic (see <A HREF="#E08">E8</A>). If
the virus is a boot-sector infector, you can continue using the computer
with relative safety (if the hard disk's partition table is left intact)
by booting from a clean system diskette. However, it is wise to go through
all your diskettes removing any infections as, sooner or later, you will
be careless and leave an infected diskette in the machine when it reboots,
or give an infected diskette to a someone who doesn't have appropriate
defenses to avoid infection. </P>

<P>Most PC boot-sector infections can be cured by the following simple
process--pay particular care to make the checks in Steps 2 and 3. </P>

<P>Note that removing an MBR virus in the following way may not be desirable,
and may even cause valuable information to be lost. For instance, the One_Half
virus gradually encrypts the infected hard drive &quot;inwards&quot; (starting
from the &quot;end&quot; and moving towards the beginning), encrypting
two more tracks at each boot. The information about the size of the encrypted
area is <B>only</B> stored in the MBR. If the virus is removed using the
method above, this information will be irrecoverably lost and part of the
disk with unknown size will remain encrypted. </P>

<OL>
<LI>Boot the PC from a clean system floppy--this must be MS-DOS 5.0 or
version 6.0 or higher of PC-DOS or DR DOS. This diskette should carry copies
of the DOS utilities MEM, FDISK, CHKDSK, UNFORMAT and SYS. (See <A HREF="#G08">G8</A>
for help on making an emergency boot diskette.) </LI>

<LI>Check that your memory configuration is &quot;normal&quot; with MEM
(see <A HREF="#C10">C10</A> for assistance here). Check that your hard
disk partitioning is normal--run FDISK and use the &quot;Display partition
information&quot; option to check this. MS-DOS 5.0 (or later) users can
use UNFORMAT /L /PARTN. </LI>

<LI>Try doing a DIR of your hard disk/s (C:, D:, etc). </LI>

<P>You should continue with Step 4 <B>only</B> if all the tests in Step
2 and this step pass. Do <B>NOT</B> continue if you were unable to correctly
access <B>all</B> your hard disks, as you will quite possibly damage critical
information making permanent data damage or loss more likely. </P>

<LI>Replace the program (code) part of the MBR by using the MS-, or PC-DOS
FDISK /MBR command. If you use DR DOS 6.0, or later, select the FDISK menu
option &quot;Re-write Master Boot Record&quot;. </LI>

<LI>Replace the DOS boot sector using the command SYS C: (or whatever is
correct for your first hard disk partition). For this step, the version
of DOS on your boot diskette must be <B>exactly</B> the same as is installed
on your hard disk (this may mean you have to first reboot with a clean
boot diskette other than that used in Step 1). If you are using a disk
compression system, such as DoubleSpace of DriveSpace, check the documentation
on how to locate the physical drive on which the compressed volume is installed,
and apply the SYS command to that instead. Usually this is drive H: or
I:. </LI>

<LI>Reboot from your hard disk and check that all is well--if not (which
is unlikely if you made the recommended checks), seek expert help. </LI>

<LI>As you will get re-infected by forgetting an infected diskette in your
A: drive at boot time, you have to clean all your floppies as well. This
is harder, as there is no simple way of doing this with standard DOS tools.
You can copy the files from each of your floppies, re-format them and copy
the files back, but this is a very tedious process (and prone to destructive
errors!). At this point you probably should consider obtaining some good
antivirus software. </LI>
</OL>

<P>FDISK /MBR will only overwrite the boot loader code in the MBR of the
<B>first</B> hard drive in a system. However, a few viruses will infect
both drives in a two drive system. Although the second hard drive is never
booted from in normal PC configurations, should the second drive from such
a machine ever be used as the first drive in a system, it will still be
infected and in need of disinfecting. </P>

<H3><A NAME="C04"></A>C4) What does the &lt;insert name here&gt; virus
do?</H3>

<P>If an antivirus program has detected a virus on your computer, don't
rush to post a question to this list asking what it does. First, it might
be a false positive alert (especially if the virus is found only in one
file--see <A HREF="#C05">C5</A>), and second, some viruses are extremely
common, so questions like &quot;What does the Jerusalem virus do?&quot;
or &quot;What does the Stoned virus do?&quot; are asked here repeatedly.
While this list is read by several antivirus experts, they get tired of
perpetually answering the same questions over and over again. In any case,
if you really need to know what a particular virus does (as opposed to
knowing enough to get rid of it), you will need a longer treatise than
could be given here. </P>

<P>For example, the Stoned virus replaces the disk's boot record with its
own, relocating the original to a sector on the disk that may (or may not)
occur in an unused portion of the root directory of a DOS diskette; when
active, it sits in an area a few kilobytes below the top of memory. All
this description could apply to a number of common viruses; but the important
points of where the original boot sector goes--and what effect that has
on networking software, non-DOS partitions, and so on--are all major questions
in themselves. </P>

<P>Therefore, it is better if you first try to answer your question yourself.
There are several sources of information about the known computer viruses,
so please consult one of them before requesting information publicly. Chances
are that your virus is rather well known and that it is already described
in detail in at least one of these sources (see <A HREF="#A06">A6</A> for
some help in finding these.) </P>

<H3><A NAME="C05"></A>C5) What are &quot;false positives&quot; and &quot;false
negatives&quot;?</H3>

<P>A <B>FALSE POSITIVE</B> (or Type-I) error is one in which antivirus
software claims that a given object is infected by a virus when, in reality,
the object is clean. This is a failure of <B>detection</B> (see <A HREF="#B15">B15</A>).
A <B>FALSE NEGATIVE</B> (or Type-II) error is one in which the software
fails to indicate that an infected object is infected. Clearly false negatives
are more serious than false positives, although both are undesirable. </P>

<P>Following from some of Fred Cohen's work, it has been proven that every
virus detector must have an infinite number of false positives, false negatives,
or both. This is expressed by saying that detection of viruses, either
by appearance or behavior, is UNDECIDABLE. The interpretation and practical
significance of this depends upon the interpretation of the terms used,
and as with Fred's definition of the term &quot;computer virus&quot;, there
is some debate over this. </P>

<P>In the case of virus scanners, false positives are rare, but they can
arise if the scan string chosen for a given virus is also present in some
benign objects because the string was not well chosen. In modern scanners,
most false positives probably occur because some virus encryption engines
produce very &quot;normal looking&quot; code and scanners that only try
to decide if a piece of code could have been generated by a known virus
encryption procedure will occasionally detect &quot;innocent&quot; code
as &quot;suspicious&quot;. False negatives are more common with virus scanners
because scanners will miss completely new or heavily modified viruses.
</P>

<P>One other serious problem could occur: A positive that is misdiagnosed.
As an example, imagine a scanner faced with the Empire virus in a boot
record that reports it as the Stoned virus. In this case, use of a Stoned-specific
&quot;cure&quot; to recover from an Empire infection could result in an
unreadable disk or loss of extended partitions. Similarly, sometimes &quot;generic&quot;
disinfection (see <A HREF="#D01">D1</A>) can result in unusable files,
unless a check is made (e.g. by comparing checksums) that the recovered
file is identical to the original file. The better generic disinfection
products all store information about the original files to allow verification
of recovery processes. </P>

<P>A particular type of false positive, where (part of) an <B>inactive</B>
virus is detected, is known as a <B>GHOST POSITIVE</B>. Ghost positives
usually occur in one of four situations (the first two of which are examples
of antivirus programs &quot;upsetting&quot; each other): </P>

<P>Ghost positives can be caused when the disinfection routine of an antivirus
program &quot;unhooks&quot; a virus from its target (be it a file or boot
sector) but it does so in such a way that part of the virus code is left
intact (though that code will never be executed). Another antivirus program
might see this code and report it is an infection. In this case the second
antivirus program is seeing a &quot;ghost&quot;--part of a virus that was
there. </P>

<P>A scanner may &quot;see&quot; the unencoded scan strings of another
scanner, left in memory after the first has run or held in memory by a
resident scanner, and report these &quot;ghosts&quot; as active viruses
(see <A HREF="#C06">C6</A> and <A HREF="#C08">C8</A>). </P>

<P>As explained elsewhere (see <A HREF="#E10">E10</A>) a copy of an infected
diskette boot sector, sitting in the disk buffers, may be detected and
reported as an active virus. </P>

<P>Disinfection procedures can result in virus &quot;remnants&quot; being
left in &quot;slack space&quot; (disk space allocated to files but not
actually occupied). As in the case of copies of infected diskette boot
sectors being held in disk buffers, these remnants can be detected and
incorrectly reported as being active. Ghost positives of this nature should
disappear after running disk defragmentation or &quot;optimization&quot;
programs with the option to &quot;clean&quot; slack space. Occasionally
running a defragmenter (like MS-DOS 6's DEFRAG) after a full data backup
(see <A HREF="#D10">D10</A>), is a good idea anyway--especially before
installing new software. Unfortunately, DOS's DEFRAG does not have a &quot;clean
slack space&quot; option, though some third-party defragmenters do. There
are also utilities that clean unallocated and slack space and these should
remove ghost positives caused by &quot;remnants&quot;. </P>

<H3><A NAME="C06"></A>C6) Could an antivirus program itself be infected?</H3>

<P>Yes, so it is important to obtain this software from good sources, and
to trust results only after running scanners from a &quot;clean&quot; system.
But there are situations where a scanner appears to be infected when it
isn't. </P>

<P>Most antivirus programs try very hard to identify viral infections only,
but sometimes they give false alarms (see <A HREF="#C05">C5</A>). If two
different antivirus programs are both of the &quot;scanner&quot; type,
they will contain &quot;scan strings&quot; from which they identify viral
infections. If the strings are not &quot;encoded&quot;, then they may be
identified as a virus by another scanner type program. Also, if the scanner
does not remove the strings from memory after it has run, then another
scanner may detect a virus string &quot;in memory&quot;. This often causes
the second scanner to report that your system is &quot;infected&quot;,
<B>but</B> only after you have run the first scanner (which may be a memory
resident one). The major contributors to this group are so tired of dealing
with non-virus reports of this sort that they <B>strongly</B> recommend
users to avoid antivirus software which doesn't keep its scan strings encoded
in memory. </P>

<P>Some &quot;change detection&quot; antivirus programs add a snippet of
code or data to a program in order to &quot;protect&quot; it. (This process
is sometimes called &quot;inoculation&quot;, but this term is also used
for other antivirus techniques.) These file changes will likely be detected
by other &quot;change detection&quot; programs, and may therefore raise
a warning of a suspicious file change (see <A HREF="#F08">F8</A> for a
discussion of the inadvisability of adding self-checking code to <B>existing</B>
programs). </P>

<P>It is good practice to use more than one antivirus program but, by their
nature, multiple antivirus programs may confuse each other! </P>

<H3><A NAME="C07"></A>C7) Where can I get a virus scanner for my Unix system?</H3>

<P>Basically, you shouldn't bother scanning for Unix viruses at this point
in time. Although it is possible to write Unix-based viruses we have yet
to see any instance of a non-experimental virus in that environment. Someone
with sufficient knowledge and access to write an effective virus would
be more likely to conduct other activities than virus-writing. Furthermore,
the typical form of software sharing in the Unix environment does not support
virus spread as easily as some others. </P>

<P>This answer is not meant to imply that Unix viruses are impossible,
or that there aren't security problems in a typical Unix environment--there
are, and Fred Cohen's first experimental virus was implemented and tested
on a Unix system. True viruses in the Unix environment are, however, unlikely
to spread well. For more information on Unix security, see the book <I>Practical
Unix Security</I> by Garfinkel and Spafford, O'Reilly &amp; Associates,
1991, price $29.95 (it can be ordered via e-mail from nuts@ora.com). </P>

<P>There <B>are</B> special cases in which scanning Unix systems for non-Unix
viruses does make sense. For example, a Unix system acting as a file server
(e.g., PC-NFS) for PC systems is quite capable of containing PC file infecting
viruses that are a danger to PC clients. Note that, in this example, the
Unix system would be scanned for PC viruses, not Unix viruses. Also, <B>any</B>
PC is vulnerable to PC MBR infectors, so special care should be taken to
prevent booting a PC hosted Unix OS from a floppy infected with an MBR
virus (see <A HREF="#C12">C12</A>). </P>

<P>In addition, a file integrity checker (to detect unauthorized changes
in executable files) on Unix systems is a very good idea. (One free program
that can do this test, as well as other tests, is Tripwire, available by
anonymous FTP from its &quot;home&quot; site of <A HREF="ftp://coast.cs.purdue.edu/pub/COAST/Tripwire">coast.cs.purdue.edu</A>
in /pub/COAST/Tripwire, and from several other antivirus sites.) Unauthorized
file changes on Unix systems are very common, although they are not usually
due to virus activity. </P>

<H3><A NAME="C08"></A>C8) Why does my scanner report an infection only
sometimes?</H3>

<P>There are circumstances where part of a virus exists in RAM without
being active. If your scanner occasionally reports a virus in memory, it
could be due to the operating system buffering diskette reads or harmlessly
keeping disk contents that include a virus in memory, or after running
another scanner, there may be scan strings left (again harmlessly) in memory.
These are known as GHOST POSITIVE alerts (see <A HREF="#C05">C5</A> for
more details). </P>

<H3><A NAME="C09"></A>C9) I think I have detected a new virus; what do
I do?</H3>

<P>Whenever there is doubt over a virus, you should obtain the latest versions
of several (not just one) major virus scanners. Some scanning programs
now use &quot;heuristic&quot; methods (F-PROT and TBSCAN are examples),
and &quot;activity monitoring&quot; programs can report a program as being
possibly infected when it is in fact perfectly safe (odd, perhaps, but
not infected). If no scanner finds a virus, but a heuristic program raises
some alarms (or there are other reasons to suspect a virus--e.g. change
in size of files, change in memory allocation) then it is possible that
you have found a new virus, although the chances are probably greater that
it is an &quot;odd but okay&quot; disk or file. Start by looking in recent
Virus-L/comp.virus postings for &quot;known&quot; false positives, then
contact the author of the antivirus software that reports the virus-like
features; the documentation for the software may have a section explaining
what to do if you think you have found a new virus. </P>

<H3><A NAME="C10"></A>C10) CHKDSK reports 639K (or less) total memory on
my DOS system; am I infected?</H3>

<P>If CHKDSK displays 639KB (654,336 bytes) for the total memory instead
of 640K (655,360 bytes)--so that you are missing only 1KB-- it is possibly
due to reasons other than a virus, but there are a few common viruses that
take only 1KB from total memory (Monkey and AntiEXE). Non-virus reasons
for a deficiency of 1KB include: </P>

<OL>
<LI>A PS/2 computer. IBM PS/2 computers reserve 1KB of conventional RAM
for an Extended BIOS Data Area, i.e. for additional data storage required
by its BIOS. </LI>

<LI>A computer with a BIOS, which is set to use the upper 1KB of memory
for its internal variables. (Most BIOSes with this option can be instructed
to use lower memory instead.) </LI>

<LI>Some SCSI controllers. </LI>

<LI>The DiskSecure antivirus program. </LI>

<LI>Mouse buffers for older Compaqs. </LI>
</OL>

<P>If you are missing 2KB or more from the 640KB, 512KB, or whatever the
conventional memory normally is for your PC, the chances are greater that
you have a boot-record virus (e.g. Stoned, Form or Michelangelo), although,
even in this case there may be legitimate reasons for the missing memory:
</P>

<OL>
<LI>Many access control programs for preventing booting from a floppy.
</LI>

<LI>H/P Vectra computers. </LI>

<LI>Some special BIOS'es which use memory for a built-in calendar and/or
calculator. </LI>
</OL>

<P>However, these are only rough guides. In order to be more certain whether
the missing memory is due to a virus, you should: </P>

<OL>
<LI>run several virus detectors; </LI>

<LI>look for a change in total memory every now and then; </LI>

<LI>compare the total memory size with that obtained when cold booting
from a &quot;clean&quot; system diskette. The latter should show the normal
amount of total memory for your configuration (although several BIOSes
now steal 1KB of conventional memory when booted from floppy but none when
booting from a hard drive). </LI>
</OL>

<P>Note: In all cases, CHKDSK should be run without software such as MS-Windows
or DesqView loaded, since these operating environments seem to be able
to open DOS boxes only on 1KB boundaries (some seem to be even coarser);
thus CHKDSK run from a DOS box may report unrepresentative values. </P>

<P>Note also that some machines have only 512KB or 256KB instead of 640KB
of conventional memory. </P>

<H3><A NAME="C11"></A>C11) I have an infinite loop of sub-directories on
my hard drive; am I infected?</H3>

<P>Probably not. This happens now and then, when something sets the &quot;cluster
number&quot; field of a subdirectory to the same cluster as an upper-level
(usually the root) directory. On PCs the /F parameter of CHKDSK should
be able to &quot;fix&quot; this (as should many other popular disk-repair
programs), usually by removing the offending directory. <B>Don't</B> erase
any of the &quot;replicated&quot; files in the &quot;odd&quot; directory,
since that will erase the &quot;copy&quot; in the root as well (these are
not really copies at all; just a second pointers to the same files). </P>

<H3><A NAME="C12"></A>C12) Can a PC not running DOS be infected with a
common DOS virus?</H3>

<P>Yes! There are three distinct possibilities here. </P>

<P>One is Novell's NetWare (and possibly other network operating systems),
which boots from a DOS disk and loads a &quot;standard&quot; DOS executable
that takes complete control of the system from DOS. This executable--SERVER.EXE--could
easily be infected by a DOS file infector. For example, a server's NetWare
boot diskette may have to be taken from the server to a DOS PC to edit
some of the configuration and startup files that have to be on that diskette.
If the PC where the editing is done is infected with a file infecting virus,
SERVER.EXE may well be infected when the new startup files are saved to
the diskette. Such infections are virtually guaranteed to render SERVER.EXE
inoperative and the server would fail at its next restart. No viruses are
known to target the NetWare kernel specifically. </P>

<P>Another possibility is the case of a 386 (or better) system running
NetWare or a self-loading OS, such as Unix, NeXTStep486, Windows NT or
OS/2, since this system is still vulnerable to infection by MBR infectors
(such as Stoned or Michelangelo), as these are operating system independent.
Note that an infection on such a system may result in the disabling of
non-DOS disk partitions (possibly beyond easy recovery) because the tricks
and system conventions these viruses employ may not apply to operating
systems other than DOS. The issue here is that MBR infectors are not really
&quot;DOS viruses&quot; so much as &quot;PC-BIOS viruses&quot;--they can
infect any machine with a PC-compatible BIOS. </P>

<P>Third, <B>any</B> OS that offers a &quot;DOS box&quot; or &quot;DOS
emulator&quot; to run DOS programs can, potentially, run a virus-infected
DOS program. Such activation of a virus should allow the virus to spread
to any &quot;targets&quot; available to it under that DOS emulator. For
example, a DOS program infected with a multipartite virus, when run under
OS/2 would probably be able to infect other DOS executables, but not the
MBR/DBS, as OS/2 only allows programs to read these critical areas of the
hard drive (see <A HREF="#E12">E12</A> for more details on DOS viruses
running under OS/2). With the increasing sophistication and power of computing
environments, DOS emulators running on non-PC computers are increasingly
available and able to run DOS viruses. </P>

<H3><A NAME="C13"></A>C13) My hard-disk's file system has been garbled:
Do I have a virus?</H3>

<P>Many things apart from viruses cause corruption of file systems. </P>

<P>With DOS machines possibly the most common is Microsoft's SmartDrive
disk cache program that came with Microsoft Windows 3.1 and subsequent
versions of MS-DOS. Most versions of this software not only cache disk-reads
but, by default, also cache disk-writes. This means that recently &quot;written&quot;
files (say from saving a document in your word processor) may not have
all the information about the associated file system updates written to
disk by the time you exit the application, close Windows and turn off your
PC. Users who simply save work then turn their PC off are even more likely
to suffer from disk caching induced problems like this. </P>

<P>Regardless of what caused your file-system corruption, you should probably
seek expert help <B>before</B> trying to fix anything yourself. While there
are many powerful and interesting-sounding utilities of the &quot;disk
fix&quot; kind available, <B>all</B> of these have the stunning ability
to render your file system all but unfixable (or at least, fixable to a
much lesser degree) when presented with unusual situations their authors
hadn't considered when designing the programs. Unfortunately, as these
programs (by definition) do not recognize these situations, they confidently
pronounce that you have such-and-such a problem then ask your permission
to fix it. Even when these utilities have &quot;undo&quot; options, they
often cannot restore your file system to its originally &quot;broken&quot;
state to give human experts their best shot at fixing it. Thus, detecting
whether it is safe to let one of these programs loose on your disks is
something you should normally seek expert help in deciding. </P>

<P>
<HR></P>

<H2>Section D. Protection plans</H2>

<H3><A NAME="D01"></A>D1) What is the best antivirus program?</H3>

<P>None! Different products are more or less appropriate in different situations,
but in general you should build a cost-effective <B>strategy</B> based
on multiple layers of defense. There are three main kinds of antivirus
software, plus several other means of protection, such as hardware write-protect
methods (see <A HREF="#D04">D4</A>). When planning your antivirus strategy
you should also look closely at your backup policies and procedures (see
<A HREF="#D10">D10</A>). </P>

<OL>
<LI><B>ACTIVITY MONITORING</B> programs. These try to prevent infection
before it happens by looking for virus-like activity, such as attempts
to write to another executable, reformat the disk, etc. An alternative
term is <B>BEHAVIOR BLOCKER</B>. </LI>

<P><I>Examples:</I> SECURE and FluShot+ (PC), and GateKeeper (Macintosh).
</P>

<P>These programs are considered the weakest line of defense against viruses
on a system that does not have memory protection, because in such an environment
it is possible for a tunnelling virus (see <A HREF="#B12">B12</A>) to bypass
or disable them. </P>

<LI><B>SCANNERS</B>. Most look for known viruses by searching your disks
and files for &quot;scan strings&quot; or patterns, but a few use heuristic
techniques to recognize viral code. Most now also include some form of
&quot;algorithmic scanning&quot; in order to detect known polymorphic viruses.
A scanner may be designed to examine specified disks or files on demand,
or it may be resident, examining each program which is about to be executed.
Most scanners also include virus removers. </LI>

<P><I>Examples:</I> FindViru in Dr Solomon's AntiVirus ToolKit, Frisk Software's
F-PROT, McAfee's VirusScan (all PC), Disinfectant (Macintosh). </P>

<P><I>Resident scanners:</I> McAfee's V-Shield, and F-PROT's VIRSTOP. </P>

<P><I>Heuristic scanners:</I> the Analyse option in F-PROT, TBAV's TbScan
and ChkBoot (from Padgett Peterson's FixUtils). </P>

<P>Scanners are the most convenient and the most widely used kind of antivirus
programs. They are a relatively weak line of defense because even the simplest
virus can bypass them if it is new and unknown to the scanner. Therefore,
your virus protection system should not rely on a scanner alone. </P>

<LI><B>INTEGRITY CHECKERS</B> or <B>MODIFICATION DETECTORS</B>. These compute
a small &quot;checksum&quot; or &quot;hash value&quot; (usually CRC or
cryptographic) for files when they are presumably uninfected, and later
compare newly calculated values with the original ones to see if the files
have been modified. This catches unknown viruses as well as known ones
and thus provides <B>generic</B> detection. On the other hand, modifications
can also be due to reasons other than viruses. Usually, it is up to the
user to decide which modifications are intentional and which might be due
to viruses, although a few products give the user help in making this decision.
As in the case of scanners, integrity checkers may be called to checksum
entire disks or specified files on demand, or they may be resident, checking
each program which is about to be executed (the latter is sometimes called
an <B>INTEGRITY</B> SHELL). A third implementation is as a <B>SELF-TEST</B>,
where the checksumming code is attached to each executable file so they
check themselves just before execution. It is generally considered a bad
idea to add such code to existing executables (see <A HREF="#F08">F8</A>).
</LI>

<P><I>Examples:</I> ASP Integrity Toolkit (commercial), and Integrity Master
and VDS (shareware), all for the PC. </P>

<P>Integrity checkers are considered to be the strongest line of defense
against computer viruses, because they are not virus-specific and can detect
new viruses without being constantly updated. However, they should not
be considered as an absolute protection--they have several drawbacks, cannot
identify the particular virus that has attacked the system, and there are
successful methods of attack against them too. </P>

<LI>Some modification detectors provide <B>HEURISTIC DISINFECTION</B>.
Sufficient information is saved for each file so that it can be restored
to its original state in the case of the great majority of viral infections,
even if the virus is unknown. </LI>

<P><I>Examples:</I> V-Analyst 3 (BRM Technologies, Israel), the VGUARD
module of V-Care and ThunderByte's TbClean. </P>

<P>Note that behavior blockers and scanners are virus <B>prevention</B>
tools, while integrity checkers are virus <B>detection</B> tools. </P>
</OL>

<P>Of course, only a few examples of each type have been given. All of
these types of antivirus program have a place in protecting against computer
viruses, but you should appreciate the limitations of each method, along
with system-supplied security measures that may or may not be helpful in
defeating viruses. Ideally, you should arrange a combination of methods
that cover each others' weaknesses. </P>

<P>A typical PC installation might include a protection system on the hard
disk's MBR to protect against viruses at load time (ideally this would
be hardware or in BIOS, but software methods such as DiskSecure and Henrik
Stroem's HS are pretty good). This would be followed by resident virus
detectors loaded as part of the machine's startup (CONFIG.SYS or AUTOEXEC.BAT),
such as FluShot+ and/or VirStop and/or ChkBoot. A scanner such as F-PROT
or McAfee's VirusScan and an integrity checker, such as Integrity Master,
could be put into AUTOEXEC.BAT, but this may be a problem if you have a
large disk to check, or don't reboot often enough. Most importantly, new
files and diskettes should be scanned as they arrive <B>regardless</B>
of their source. If your system has DR DOS installed, you should use the
PASSWORD command to write-protect all system executables and utilities.
If you have Stacker or SuperStor, you can get some improved security from
these compressed drives, but also a risk that those viruses stupid enough
to directly write to the disk could do much more damage than normal. In
this case a software write-protect system (such as provided with Disk Manager
or The Norton Utilities) may help. Possibly the best solution is to put
all executables on a disk of their own, with a hardware write-protect system
that sounds an alarm if a write is attempted. </P>

<P>If you do use a resident BSI detector or a scan-while-you-copy detector,
it is important to trace back any infected diskette to its source. The
reason viruses survive so well is that usually you cannot do this, because
the infection is found long after the infecting diskette has been forgotten
due to most people's lax scanning policies. </P>

<P>Organizations should devise and implement a careful policy that may
include a system of vetting new software brought into the building and
free virus detectors for home machines of employees/students/etc who take
work home with them. </P>

<P>Other antivirus techniques include: </P>

<OL>
<LI>Creation of a special MBR to make the hard disk inaccessible when booting
from a diskette (the latter is useful since booting from a diskette will
normally bypass any protection measures loaded in the CONFIG.SYS and/or
AUTOEXEC.BAT files on the hard disk). </LI>

<P>Some of these systems won't prevent attack by some MBR virus infections
if booting from an infected floppy. This approach is less important now,
as most newer PCs allow you to change the boot order so the first hard
drive is tried <B>before</B> any of the floppy drives. </P>

<LI>Use of Artificial Intelligence to learn about new viruses and extract
scan patterns for them. </LI>

<P><I>Examples:</I> V-Care (CSA Interprint, Israel; distributed in the
US by Sela Consultants Corp.), Victor Charlie (Bangkok Security Associates,
Thailand; distributed in the US by Computer Security Associates). </P>

<LI>Encryption of files (with decryption before execution). </LI>

<LI>Diskette &quot;fences&quot;. There are three different approaches to
this. One prevents executables from being accessed from floppy drives while
another prohibits the use of unscanned (possibly &quot;unclean&quot;) files
or diskettes. A third method uses a non-standard diskette format so diskettes
can only be used on (and therefore shared among) machines using the appropriate
antivirus software (usually all those within a site or company). This last
method is probably the most common diskette fence and provides better protection
against boot sector viruses than the other &quot;fence&quot; types. </LI>

<P>The workings of the first and third are probably fairly clear from these
brief descriptions. The second approach works by writing special information
to normally unused areas of the diskette as part of the scanning process
and employing a driver in the users' machines prevents access to files
that aren't marked as scanned (or to any part of a diskette that contains
unscanned files). Alternatives include encrypting scanned files and drivers
that only allow access to encrypted files, and so on. One advantage of
this second type of system is that you only need scanners for &quot;perimeter
checking&quot; machines, reducing the overhead and cost of keeping your
scanners up to date. </P>

<P><I>Examples:</I> D-Fence, Virus Fence, TbFence, DiskNet. </P>
</OL>

<H3><A NAME="D02"></A>D2) Is it possible to protect a computer system with
only software?</H3>

<P>Not perfectly; although software defenses can significantly reduce your
risk of being affected by viruses <B>when applied appropriately</B>. All
virus defense systems are tools--each with its own capabilities and shortcomings.
Learn how your system works and be sure to work within its limitations.
</P>

<P>Using a layered approach, a very high level of protection/detection
can be achieved with software only. </P>

<OL>
<LI>ROM BIOS--password (access control) and selecting to boot from the
hard drive rather than from diskette. (Some may consider this hardware.)
</LI>

<LI>Boot sectors--integrity management and change detection. </LI>

<LI>OS programs--integrity management of existing programs, scanning of
unknown programs. Requirement of authentication values for any new or transmitted
software. </LI>

<LI>Locks that prevent writing to a fixed or floppy disk. </LI>
</OL>

<P>As each layer is added, undetected invasion becomes more difficult.
Nevertheless, complete protection against any possible attack cannot be
provided without dedicating the computer to pre-existing or unique tasks.
International standardization on the IBM PC architecture is both its greatest
asset and its greatest vulnerability. </P>

<H3><A NAME="D03"></A>D3) Is it possible to write-protect the hard disk
with software only?</H3>

<P>The answer is no. There are several programs that claim to do this,
but <B>all</B> of them can be bypassed with techniques already used by
some viruses. Therefore you should never rely on such programs <B>alone</B>,
although they can be useful in combination with other antivirus measures.
</P>

<H3><A NAME="D04"></A>D4) What can be done with hardware protection?</H3>

<P>Hardware protection can accomplish various things, including: write
protection for hard disk drives, memory protection, monitoring and trapping
unauthorized system calls, etc. Again, no single tool will be foolproof
and the &quot;stronger&quot; hardware-based protection is, the more likely
it will interfere with the &quot;normal&quot; operation of your computer.
</P>

<P>The popular idea of write-protection (see <A HREF="#D03">D3</A>) may
stop viruses <B>spreading</B> to the disk that is protected, but doesn't,
in itself, prevent a virus from <B>running</B>. </P>

<P>Also, some existing hardware protection schemes can be easily bypassed,
fooled, or disconnected, if the virus writer knows them well and designs
a virus that is aware of the particular defense. </P>

<P>The big problem with hardware protection is that there are few (if any)
operations that a general-purpose computer can perform that are used by
viruses <B>only</B>. Therefore, making a hardware protection system for
such a computer typically involves deciding on some (small) set of operations
that are &quot;valid but not normally performed except by viruses&quot;,
and designing the system to prevent these operations. Unfortunately, this
means either designing limitations into the level of protection the hardware
system provides or adding limitations to the computer's functionality by
installing the hardware protection system. Much can be achieved, however,
by making the hardware &quot;smarter&quot;. This is double-edged: while
it provides more security, it usually means adding a program in an EPROM
to control it. This allows a virus to locate the program and to call it
directly after the point that allows access. It is still possible to implement
this correctly though--if this program is not in the address space of the
main CPU, has its own CPU and is connected directly to the hard disk and
the keyboard. As an example, there is a PC-based product called ExVira
which does this and seems fairly secure, but it is a whole computer on
an add-on board and is quite expensive. </P>

<H3><A NAME="D05"></A>D5) Does setting a file's attributes to READ ONLY
protect it from viruses?</H3>

<P>Generally, no. While the Read Only attribute will protect your files
from a few viruses, most simply override it, and infect normally. So, while
setting executable files to Read Only a good idea (it protects against
accidental deletion), it is certainly not a thorough protection against
viruses! </P>

<P>In some environments the Read Only attribute does provide some additional
protection. For instance, under Novell Netware a user can be denied the
right to modify file attributes in directories on the server. This means
that a virus that infects such a user's machine will be unable to infect
files in those server directories if the files have their Read Only attribute
set. </P>

<H3><A NAME="D06"></A>D6) Do password/access control systems protect my
files from viruses?</H3>

<P>All password and other access control systems are designed to protect
the user's data from other users and/or their programs. Remember, however,
that when you execute an infected program the virus in it will gain your
current rights/privileges. Therefore, if the access control system provides
<B>you</B> the right to modify some files, it will provide it to the virus
too. Note that this does not depend on the operating system used--DOS,
Unix, or whatever. Therefore, an access control system will protect your
files from viruses no better than it protects them from you. </P>

<P>Under DOS, there is no memory protection, so a virus could disable the
access control system in memory, or even patch the operating system itself.
On more advanced operating systems (Unix, OS/2, Windows NT) this is much
harder or impossible, so there is much less risk that such protection measures
could be disabled by a virus. Even so, viruses will still be able to spread,
for the reasons noted above. In general, access control systems (if implemented
correctly) are only able to slow down virus spread, not to eliminate viruses
entirely. </P>

<P>Of course, it's better to have access control than not to have it at
all. Just be sure to not develop a false sense of security or come to rely
<B>entirely</B> on your access control system to protect you. </P>

<H3><A NAME="D07"></A>D7) Do the protection systems in DR DOS work against
viruses?</H3>

<P>Partially. Neither the password file/directory protection available
from DR DOS version 5 onwards, nor the secure disk partitions from DR DOS
6 were intended to combat viruses, but they do so to some extent. If you
have DR DOS, it is very wise to password-protect your files (to stop accidental
damage too), but don't depend on it as your only means of defense. </P>

<P>The use of the password command (e.g. PASSWORD/W:MINE *.EXE *.COM) will
stop more viruses than the plain DOS attribute facility (see <A HREF="#D05">D5</A>),
but that isn't saying much! The combination of the password system plus
a disk compression system may be more secure, because to bypass the password
system a virus must access the disk directly, but under SuperStor or Stacker
the physical disk will be meaningless to a virus. There may be some viruses
that, rather than invisibly infecting files on compressed disks, very visibly
corrupt such disks. </P>

<P>The main use of the &quot;secure disk partitions&quot; system, introduced
in DR DOS 6, is to stop people from fiddling with your hard disk while
you are away from the PC. The way this is implemented, however, may also
help against a few viruses that look for DOS partitions on a disk. </P>

<P>Furthermore, DR DOS is not fully compatible with MS/PC-DOS, especially
when you get down to the low-level tricks that some viruses use. For instance,
some internal memory structures are &quot;read-only&quot; in the sense
that they are constantly updated (for MS/PC-DOS compatibility) but not
really used by DR DOS, so even if a sophisticated virus modifies them,
it will not have any effect, or at least not that intended by the virus's
author. </P>

<P>In general, using a less compatible system diminishes the number of
existing viruses that can infect it. For instance, the introduction of
hard disks made the Brain virus almost disappear; the introduction of the
80286 and DOS 4.0+ made the Yale and Ping Pong viruses next to extinct,
and so on. </P>

<H3><A NAME="D08"></A>D8) Does a write-protect tab on a floppy disk stop
viruses?</H3>

<P>In general, yes. The write-protection on IBM PC (and compatible) and
Macintosh floppy disk drives is implemented in hardware, not software,
so viruses cannot infect a diskette when the write-protection mechanism
is functioning properly (though many &quot;friend of a friend&quot; stories
abound contesting this). </P>

<P>But remember: </P>

<OL>
<LI>A computer may have a faulty write-protect system (this happens!)--you
can test it by trying to copy a file to a diskette that is apparently write-protected.
</LI>

<LI>Someone may have removed the tab for a while, allowing a virus on.
</LI>

<LI>The files may have been infected before the disk was protected. Even
some diskettes &quot;straight from the factory&quot; have been known to
be infected during the production process. </LI>
</OL>

<P>Thus, you should scan even new, write-protected disks for viruses. You
should also scan new, pre-formatted diskettes, as there have been cases
of infected, shrink-wrapped new diskettes. </P>

<H3><A NAME="D09"></A>D9) Do local area networks (LANs) help to stop viruses
or do they facilitate their spread?</H3>

<P>Both. A set of computers connected in a well managed LAN, with carefully
established security settings, with minimal privileges for each user, and
without a transitive path of information flow between the users (i.e.,
the objects writable by any of the users are not readable by any of the
others) is more virus-resistant than the same set of computers if they
are not interconnected. The reason is that when all computers have (read-only)
access to a common pool of executable programs, there is usually less need
for diskette swapping and software exchange between them, and therefore
less chances for a virus to spread. </P>

<P>However, if the LAN has lax security and is not well managed, it could
help a virus to spread like wildfire. It might even be impossible to remove
the infection without shutting down the entire LAN. Stories of LAN login
programs, shared copies of which are run on every workstation, becoming
infected are, unfortunately, not uncommon. </P>

<P>A network that supports login scripting is inherently more resistant
to viruses than one that does not <B>if</B> this is used to validate the
client before allowing access to the network. </P>

<H3><A NAME="D10"></A>D10) What is the proper way to make backups?</H3>

<P>A good backup regime is at the heart of any comprehensive virus defense
scheme. No matter what combination of software and hardware defenses you
install, nor what &quot;policy&quot; you implement, there is always the
possibility that some new virus will be devised that can beat your defenses
<B>or</B> that someone will fail to follow &quot;proper protocol&quot;
with &quot;foreign&quot; media or file sources. In corporate settings,
the possibility of the latter as a form of directed attack by disgruntled
employees cannot be overlooked. </P>

<P>Planning to minimize the impact of a virus infection on your computing
is much like planning to minimize the effect of an earthquake or fire.
You cannot be sure where, when or even <B>if</B> you will ever be &quot;hit&quot;;
the potential impact could fall anywhere in a very wide range of possible
damage; being &quot;completely safe&quot; can involve enormous expense;
and you cannot adequately test your preparations without exposing yourself
to serious risk of damage. Therefore, finalizing on the defense scheme
that suits you involves deciding on the level of loss you can afford to
stand and probably settling on a system that, while not &quot;perfectly
watertight,&quot; is &quot;good enough&quot;. </P>

<P>Despite the importance of a good backup scheme, it is really beyond
the scope of this FAQ sheet to provide a definitive guide to planning your
backup procedure--that could easily take another document the size of this!
All this said however, we provide the following advice as, we hope, a good
starting point. </P>

<P>Planning an effective backup scheme really starts with answering some
important questions. Consider: </P>

<OL>
<LI>Who is dependent on the files on this system? Is it a home computer
mostly used by the kids for games, a standalone workstation running a small
business, a networked workstation in a medium-sized company or the same
in a large corporate environment, or a server with many (hundreds) of users?
</LI>

<LI>How long can the most important user be without access to these files?
One hour, 2, 4, 8, a day, a week? Remember to assume that your problems
will arise at the worst possible moment (like 24 hours before a tax audit
is due to start!). </LI>

<LI>What proportion (and volume!) of files are &quot;fixed&quot; (in the
sense that they seldom change) versus those that change? Do all changes
have to be backed-up, or is a &quot;once-some-given-time-period&quot; backup
acceptable? </LI>

<LI>What type of information is in the regularly changing files? </LI>
</OL>

<P>The answers to these (and other) questions help shape backup and recovery
plans and are fairly well understood issues amongst computer systems professionals.
Highly critical systems containing crucial data will be designed from the
outset to have high redundancy (disk mirroring, disk arrays, UPSes, maybe
even redundant servers), though such system options <B>alone</B> provide
no real protection from virus attacks. You may opt for a backup system
that records every change to any files on your system (server-only or clients
and servers) or regular (often nightly) backup of changed data files, and
so on. </P>

<P>When it comes to planning backup regimes with an eye to the possibility
of recovering from a virus attack, you also have to consider that regularly
backing-up executables (loosely, &quot;programs&quot;) can cause problems.
If you do and are infected by a virus, unless you can be <B>absolutely
sure</B> of the date of first infection (despite sounding simple, this
is not something that can commonly be done!), you may have quite a few
problems finding the best backup set to restore from, as you will probably
have several sets including infected executables. </P>

<P>For home or small business use, it may be best to maintain two kinds
of backups. One would contain only your data files and one your operating
system and program files (issues to consider are covered in the next two
paragraphs). This may be facilitated by maintaining a strict separation
of the two kinds of files, perhaps by putting the operating system and
programs on one drive or partition and your data files on another. While
this is probably not practical for many existing machines, enforcing adherence
to the &quot;rule&quot; that data files should only be placed in appropriate
sub-directories (folders) within a prescribed data directory may not be
a bad thing. </P>

<P>The best way to manage backup of data files depends on the answers to
too many of the questions listed above for us to give definitive advice
here. While planning your backup regime, bear in mind that some viruses
damage some kinds of data files, while others make small, occasional, random
modifications as files are written to disk. While viruses with either of
these &quot;features&quot; are quite rare, both of these possibilities
mean that vital data files should probably be backed-up to long-cycle media
sets as well as to shorter cycle sets and other steps taken to ensure you
can recreate the sequence of changes. (For example, retain all transaction
records so they can be re-entered.) </P>

<P>You should probably backup executables once after installing them and
only <B>after</B> you are sure they are virus-free according to your current
antivirus screening procedures. <B>Never</B> make a backup containing executables
over media that hold <B>any</B> of your current backups. The more cautious
of us maintain several cycles of executable backups. These precautions
should ensure you don't face the problem outlined several paragraphs ago,
and mean that should a newly installed program be infected with a virus
your current defenses don't detect, you can easily restore your system
and installed software to how it was before the infected software was installed,
when you do become aware of its presence. You will probably have to manually
reinstall any programs you installed subsequent to installing the infected
program. </P>

<P>Having referred to this second kind of backup as &quot;executables only&quot;,
we should point out that a complete system backup is also acceptable for
this type of backup. However, note that a sequence of full system backups
with interim &quot;incremental&quot; backups (when only those files that
have changed since the last complete backup are saved) is <B>not</B> what
we are advocating. Such systems tend to be too &quot;broad brush&quot;
to be truly useful for recovering from an unknown, future virus attack.
Unfortunately, this tends to be the preferred/recommended backup scheme
for small-to-medium sized systems (including most personal computers),
and is typically what most popular backup software for such systems is
designed to do. This doesn't mean that popular backup systems and software
aren't useful, just that you have to exercise some care in using them (like
excluding executable files from your incremental backups). </P>

<P>Having said all this, there are still a few other problems to consider,
especially: Which files should you count as &quot;data&quot; files? This
can be problematic as most people immediately think of their word-processor
and spreadsheet files, and the like, as data, and that's about it. What
about the files in which your programs store their configuration information?
In a sense, these are as much &quot;your data&quot; as they are program
files, because they reflect your preferred screen colors and layouts, default
fonts, personalized button bars and so on. When you look at the time people
spend finding the (often obscure) options settings in their programs and
making them work &quot;just right&quot;, and how upset they can be if they
lose these settings, it makes sense to treat such configuration files as
you treat other &quot;personal data files&quot; in your backup regimes.
Similarly, people tend to treat system configuration files (in DOS/Windows
PCs CONFIG.SYS, AUTOEXEC.BAT, WIN.INI, SYSTEM.INI at a minimum!) as part
of the system, often ignoring the (sometimes considerable) fine-tuning
these configuration files go through <B>between</B> system and executable
backups. </P>

<P>One last point--it cannot be stressed enough that you <B>MUST</B> have
a full, working copy of the software you need to restore your backups in
a safe place. You must be able to guarantee that this software is not virus
infected should you ever have to use it, <B>AND</B> that it is fully usable
should you be facing a machine that has had its entire hard drive &quot;wiped
clean&quot;. </P>

<P>
<HR></P>

<H2>Section E. Facts and Fibs About Computer Viruses</H2>

<H3><A NAME="E01"></A>E1) Can boot sector viruses infect non-bootable DOS
floppy disks?</H3>

<P>Any DOS diskette that has been properly formatted contains some executable
code in its boot sector. (There is some debate as to whether this code
should be called a program or not. The important thing here is that this
code is <B>executed</B> at system startup if the diskette is in the system's
boot drive.) If a diskette is not &quot;bootable&quot;, all that boot sector
(normally) does is print a message (on a PC, typically something like &quot;Non-system
disk or disk error; replace and strike any key when ready&quot;). However,
the boot sector is still executable and therefore vulnerable to infection.
Should you accidentally boot your machine with a &quot;non-bootable&quot;
diskette in the boot drive, and see that message, it means that any boot
virus that may have been on that diskette <B>has</B> run, and had the chance
to infect your hard drive, or whatever. So, when talking about viruses,
the words &quot;bootable&quot; and &quot;non-bootable&quot; are misleading.
All formatted diskettes are capable of carrying boot sector viruses. </P>

<P>Most current computers will try to boot from their (first) floppy drive
before trying to load an operating system off their hard disks. Because
of this and the fact that every floppy disk is possibly infected with a
boot sector virus, it is a <B>very</B> good idea to set your computer to
try to boot from its hard disk. Many newer PCs offer the option to select
boot order in their system CMOS setup routines. If your computer has such
an option, set it to try to boot from your hard disk first. </P>

<H3><A NAME="E02"></A>E2) Can a virus hide in a PC's CMOS memory?</H3>

<P>No. The CMOS RAM in which PC system information is stored and backed
up by batteries is accessible through the I/O ports and not directly addressable.
That is, in order to read its contents you have to use I/O instructions
rather than standard memory addressing techniques. Therefore, anything
stored in CMOS is not directly &quot;in memory&quot;. Nothing in a normal
machine loads the data from CMOS and executes it, so a virus that &quot;hid&quot;
in CMOS RAM would still have to infect an executable object of some kind
in order to load and execute whatever had been written to CMOS. A malicious
virus can of course <B>alter</B> values in the CMOS as part of its payload,
but it can't spread through, or hide itself in, the CMOS. </P>

<P>Further, most PCs have only 64 bytes of CMOS RAM and the use of the
first 48 bytes of this is predetermined by the IBM AT specification. Several
BIOS'es also use many of the &quot;extra&quot; bytes of CMOS to hold their
own, machine-specific settings. This means that anything that a virus stores
in CMOS can't be very large. A virus could use some of the &quot;surplus&quot;
CMOS RAM to hide a small part of its body (e.g. its payload, counters,
etc). Any executable code stored there, however, must first be extracted
to ordinary memory in order to be executed. </P>

<P>This issue should not be confused with whether a virus can <B>modify</B>
the contents of a PC's CMOS RAM. Of course viruses can, as this memory
is not specially protected (on normal PCs), so any program that knows how
to change CMOS contents can do so. Some viruses do fiddle with the contents
of CMOS RAM (mostly with ill-intent) and these have often been incorrectly
reported as &quot;infecting CMOS&quot; or &quot;hiding in CMOS&quot;. An
example is the PC boot sector virus EXE_Bug, which changes CMOS settings
to indicate that no floppy drives are present (see <A HREF="#G08">G8</A>
for more details). </P>

<H3><A NAME="E03"></A>E3) Can a PC virus hide in Extended or in Expanded
RAM in a PC?</H3>

<P>Yes. If one does though, it has to have a small part resident in conventional
RAM; it cannot reside <B>entirely</B> in Extended or in Expanded RAM. Currently
there are no known XMS viruses and only a few EMS viruses (Emma is an example).
</P>

<H3><A NAME="E04"></A>E4) Can a virus hide in a PC's Upper Memory or in
High Memory Area?</H3>

<P>Yes, it is possible to construct a virus which will locate itself in
Upper Memory Blocks (UMBs--640K to 1024K) or in the High Memory Area (HMA--1024K
to 1088K). Some viruses (e.g. EDV) do hide in UMBs and at least one, Goldbug,
will use the HMA if it is available. </P>

<P>It might be thought that there is no point in scanning in these areas
for any viruses other than those that are specifically known to inhabit
them. However, there are cases when even ordinary viruses can be found
in Upper Memory. Suppose that a conventional memory-resident virus infects
a TSR program and this program is loaded high by the user (for instance,
from AUTOEXEC.BAT). Then the virus code will also reside in Upper Memory.
Therefore, an effective scanner must be able to scan this part of memory
for viruses too. </P>

<H3><A NAME="E05"></A>E5) Can a virus infect data files?</H3>

<P>Some viruses (e.g., Frodo, Cinderella) modify non-executable files.
However, in order to spread, the virus code must be executed. Therefore
&quot;infected&quot; non-executable files cannot be sources of further
infection. Such &quot;infections&quot; are usually mistakes, due to bugs
in the virus. </P>

<P>Even so, note that it is not always possible to make a sharp distinction
between executable and non-executable files. One person's data can be another's
code and vice versa. Some files that are not directly executable contain
code or data which can, under some conditions, be executed or interpreted.
</P>

<P>Some examples from the PC world are OBJ files, libraries, device drivers,
source files for any compiler or interpreter (including DOS BAT files and
OS/2 CMD files), macro files for some packages like Microsoft Word and
Lotus 1-2-3, and many others. Currently there are viruses that infect boot
sectors, master boot records, COM files, EXE files, BAT files, OBJ files,
device drivers, Microsoft Word document and template files, and C source
code files, although any of the objects mentioned above theoretically can
be used as an infection carrier. PostScript files can also be used to carry
a virus, although no currently known virus does this. </P>

<P>Aside from the above, however, there is an increasing possibility of
viruses spreading through the sharing of data files. More and more we see
the ease with which software producers give their programs the ability
to embed &quot;objects&quot; of many kinds into document files, and into
fields in databases and spreadsheets. Perhaps the best-known of these systems
are Object Linking and Embedding (OLE) in MS Windows and the OpenDoc format.
As these embedded objects often have the ability to &quot;display&quot;
themselves we see that many files traditionally thought of as data-only,
will increasingly be containers carrying data and executable code. We are
not aware of any virus that specifically targets such executable &quot;objects&quot;,
but it is now a trivial task to embed executable files into some kinds
of document files so they will be run when the icon representing them is
clicked in the finished document. There is nothing to prevent infected
executables being embedded in this way, and thus for viruses to be spread
through the distribution of &quot;data files&quot;. </P>

<H3><A NAME="E06"></A>E6) Can viruses spread from one type of computer
to another?</H3>

<P>The simple answer is that no currently known viruses can do this. Although
some disk formats may be the same (e.g. Atari ST and DOS), the different
machines interpret the code differently. For example, the Stoned virus
cannot infect an Atari ST as the ST cannot execute the virus code in the
boot sector. The Stoned virus contains instructions for the 80x86 family
of CPUs that the 680x0 CPU family (used in the Atari ST) can't understand
or execute. </P>

<P>The more general answer is that such viruses are possible, but unlikely.
Such a virus would be quite a bit larger than current viruses and might
well be easier to find. Additionally, the low incidence of cross-platform
sharing of software means that any such virus would be unlikely to spread--it
would be a poor environment for virus growth. </P>

<P>A related, but different, issue is that of viruses running under operating
system emulators on machines other than those for which the operating system
was originally designed. This is covered in some detail elsewhere in the
FAQ sheet (see <A HREF="#C12">C12</A>). </P>

<H3><A NAME="E07"></A>E7) Are mainframe computers susceptible to computer
viruses?</H3>

<P>Yes. Numerous experiments have shown that computer viruses spread very
quickly and effectively on mainframe systems. To our knowledge, however,
no non-research computer virus has been seen on mainframe systems. (Despite
often being described as such, the widely reported Internet Worm of November
1988 was not a computer virus by most definitions, although it had some
virus-like characteristics.) </P>

<P>Many people think that computer viruses are impossible on mainframe
computers, because their operating systems provide means of protection
(e.g., memory protection, access control, etc.) that cannot by bypassed
by a program, unlike the operating systems of most personal computers.
Unfortunately, this belief is false. As demonstrated by Fred Cohen in 1984,
access controls are unable to prevent computer viruses--they can only slow
down the speed with which viruses spread. If there is a transitive path
of information flow from one account to another on a mainframe computer,
then a virus can spread from one account to the other, without having to
bypass any protections. </P>

<P>Consider the following example. The attacker (A) has an account on a
machine and wants to attack it with a virus. In order to do this, A writes
a virus and releases it. Due to the protection provided by the operating
system, the virus can only infect the files writable by A. On a typical
system, those would be only the files owned by A. </P>

<P>However, A is not alone on the system. A works with B on some joint
projects. At some time, B might want to check how far A has progressed
in her/his part of the project. This might involve running one of the programs
that A has written--programs that are now all infected with A's virus.
</P>

<P>On a sytem with protection based on discretionary access controls (e.g.,
Unix, VMS, and most other popular OSes), the program that is being executed
usually runs with the privileges of the user who is executing it--not with
those of the program's owner. (In the few instances where this is not the
case, it presents a different kind of security threat, unrelated to viruses.)
That is, when B runs A's infected program, the virus in it will run with
B's privileges and will be able to infect all programs writable by B. </P>

<P>At some later time, A and B's boss, C, might want to check whether they
have completed that joint project. Even if the boss has reasons to suspect
A (e.g., as a disgruntled employee), s/he is likely to trust B and execute
one of her/his programs. This results in the virus running with C's privileges
(which are likely to be significantly greater than those of A and B) and
infecting all programs writable by C. Quite possibly, these programs will
include many owned by other employees, thus creating many more distribution
chains that nobody suspects. </P>

<P>The virus may interfere somehow with C's normal work, which causes C
(who is probably not very knowledgeable about such things as computer security
and viruses) to ask the system administrator, D, for help. If D executes
one of C's infected programs (and s/he is much more likely to trust a respectable
person like C--who is quite probably D's boss as well--than any of C's
employees), this will cause the virus that A wrote a long time ago to run
with system administrator privileges and do whatever it wants with the
system--infect other users' files, attack other systems, etc. </P>

<P>A trivial improvement of the above scenario (in terms of speeding up
the virus' spread) would be for the attacker to place the virus in some
kind of Trojan Horse--for example, in an attractive game or utility--placed
in a publicly accessible area. </P>

<P>Why, then, are there so many fewer viruses for mainframe computers than
for personal ones? The answer to this question is complex. First, writing
a well-made mainframe virus--one that does not cause problems and is likely
to remain unnoticed--is not a trivial task. It requires a lot of knowledge
about the operating system. This knowledge is not commonly available and
the typical youngster who is likely to hack a quick-and-dirty PC virus
is unlikely to possess it or be in a position to learn it. People who possess
this knowledge are likely to use it in more constructive, satisfying, and
profitable ways. Second, the culture of software exchange in the mainframe
world differs considerably from that of the PC world--we don't see many
VMS users running around with a bootable tape of the latest game... Third,
very often it is easier to attack a mainframe computer by using some security
hole or a Trojan Horse, instead of by using a virus. </P>

<P>So, computer viruses for mainframe computers are definitely possible
and several already exist (see question <A HREF="#F01">F1</A>). Also, some
IBM PC viruses can infect any IBM PC compatible machine, even if it runs
a &quot;real&quot; OS like Unix. For more information, refer to questions
<A HREF="#D06">D6</A> and <A HREF="#E07">E7</A>. </P>

<P>Forms of malware other than computer viruses--notably Trojan Horses--are
far quicker, more effective, and harder to detect than computer viruses.
Nevertheless, on personal computers many more viruses are written than
Trojan Horses. There are two reasons for this: </P>

<OL>
<LI>Since a virus is self-propogating, the number of users to which it
can spread (and cause damage) can be much greater than in the case of a
Trojan; </LI>

<LI>It's almost impossible to trace the source of a virus since (generally)
viruses are not attached to any particular program. </LI>
</OL>

<P>For further information on malicious programs on multi-user systems,
see Matt Bishop's paper, &quot;An Overview of Malicious Logic in a Research
Environment&quot;, available by anonymous FTP on <A HREF="ftp://Dartmouth.edu/pub/security/mallogic.ps">Dartmouth.edu</A>
(IP = 129.170.16.4) as pub/security/mallogic.ps. </P>

<H3><A NAME="E08"></A>E8) Some people say that disinfecting is a bad idea.
Is that true?</H3>

<P>Disinfection is completely &quot;safe&quot; only if the disinfecting
process completely restores the non-infected state of the object. That
is, not only must the virus be removed from the object, but the original
length must be restored exactly, as well as any system attributes (such
as time and date of last modification, fields in the header, etc). Sometimes
it is necessary to be sure that the object is placed on the same sectors
of the disk that it occupied prior to infection (this is particularly important
for some system areas and some files from programs which use certain kinds
of self-checking or copy protection). </P>

<P>None of the currently available disinfecting programs do all this. For
instance, because of the bugs that exist in many viruses and because some
infection processes involve overwriting (part of) the objects of infection,
some of the information about the original object may be irrevocably destroyed.
Sometimes it is not even possible to detect that this information has been
destroyed and to warn the user. Furthermore, some viruses corrupt information
very slightly and in a random way (Nomenklatura, Ripper), so that it is
not even possible to tell which objects have been corrupted. </P>

<P>Therefore, it is usually better to replace infected objects with clean
backups, provided you are certain that your backups are uninfected (see
<A HREF="#D10">D10</A>), or from the original media. You should try to
disinfect files only if they contain some valuable data that cannot be
restored from backups or recompiled from their original source. </P>

<H3><A NAME="E09"></A>E9) Can I avoid viruses by avoiding shareware, free
software or games?</H3>

<P>No. There are many documented instances in which even commercial &quot;shrink
wrapped&quot; software was inadvertently distributed containing viruses.
Avoiding shareware, freeware, games, etc, only isolates you from a vast
collection of software (some of it very good, some of it very bad, most
of it somewhere in between...). </P>

<P>The important thing is not to avoid a certain type of software, but
to be cautious of <B>any and all</B> newly acquired software and diskettes.
Merely scanning all new software media for known viruses would be rather
effective at preventing virus infections, especially when combined with
some other prevention/detection strategy such as integrity management of
programs. </P>

<H3><A NAME="E10"></A>E10) Can I contract a virus on my PC by performing
a &quot;DIR&quot; of an infected floppy disk?</H3>

<P>Assuming the PC you are using is virus free before you perform the DIR
command, then the answer is &quot;No&quot;. </P>

<P>When you perform a DIR, the contents of the boot sector of the diskette
are loaded into a buffer for use in determining disk layout etc, and certain
antivirus products will scan these buffers. If a boot sector virus has
infected your diskette, the virus code will be contained in the buffer,
which may cause some antivirus packages to produce a message like &quot;xyz
virus found in memory...&quot;. In fact, the virus is not a threat at this
point since control of the CPU is never passed to the virus code residing
in the buffer. Even though the virus is really not a threat at this point,
this message should not be ignored. If you get a message like this, and
then reboot from a clean DOS diskette (see <A HREF="#G08">G8</A>) and scan
your hard-drive and find no virus, then you know that the false positive
was caused by an infected boot-sector loaded into a buffer, and the diskette
should be disinfected before use. The use of DIR will not infect a clean
system, even if the diskette it is being performed on does contain a virus
(see <A HREF="#C08">C8</A> also). Please note, however, that running DIR
on a diskette can result in the infection of a clean diskette if the PC
is already infected. </P>

<P>Despite our categorical &quot;No&quot; answer above, there is a small
risk that a virus infection could be transferred from a floppy through
a DIR listing. If you use an ANSI console driver that allows key remapping,
it is possible that a specially prepared diskette could reprogram your
keyboard so that pressing a particular key caused an infected program on
the diskette to run the next time the reprogrammed key was pressed. The
risk of such an attack is very low and can easily be negated following
the general advice for preventing ANSI bombs (see <A HREF="#B14">B14</A>).
</P>

<P>Mac users with system software prior to version 7.0 should be aware
of a greater threat in their environment. Various system resources (which
can contain executable code) are loaded from the automatic access to a
diskette that is part of the system building its desktop view of the diskette's
contents. When such a resource is required, the most recently loaded one
will be used. Thus, if a diskette with a virus-infected resource in the
Desktop file is in your Mac's drive, and an uninfected copy of that resource
has not subsequently loaded from elsewhere, the next time that resource
is required the infected copy will be executed, along with the virus. This
kind of attack was removed with the introduction of version 7.0 (and later)
of the system software, which handles such things quite differently. A
common Mac virus, WDEF, uses this infection path, as do a few others. </P>

<P>Early versions of AmigaDOS are susceptible to a threat similar to the
Mac WDEF virus--on inserting a diskette into the drive, the operating system
runs the Disk Validator from the diskette. At least one Amiga virus, Saddam,
attaches itself to Disk Validator to help it spread. Version 2.0 of AmigaDOS
eliminated the threat of this type of attack by removing the need for the
Disk Validator. </P>

<H3><A NAME="E11"></A>E11) Is there any risk in copying data files from
an infected floppy disk to a clean PC's hard disk?</H3>

<P>Assuming that you did not boot or run any executable programs from the
infected disk, the answer generally is no. There are two caveats: </P>

<OL>
<LI>You should be somewhat concerned about checking the integrity of these
data files as they may have been destroyed or altered by the virus. </LI>

<LI>If any of the &quot;data&quot; files are interpretable as executable
by some other program (such as a Lotus macro) then these files should be
treated as potentially malicious until the symptoms of the infection are
known. </LI>
</OL>

<P>The copying process itself is safe (given the above scenario) although
you should be concerned with what type of files are being copied to avoid
introducing other problems. </P>

<H3><A NAME="E12"></A>E12) Can a DOS virus survive and spread on an OS/2
system using the HPFS file system?</H3>

<P>Yes, both file-infecting and boot sector viruses can infect HPFS partitions.
File-infecting viruses function normally and can activate and do their
dirty deeds, and boot sector viruses can prevent OS/2 from booting if the
primary bootable partition is infected. Viruses that try to address disk
sectors directly cannot function under OS/2 because the operating system
prevents this activity. </P>

<H3><A NAME="E13"></A>E13) Under OS/2 2.0+, could a virus infected DOS
session infect another DOS session?</H3>

<P>Each DOS program is run in a separate Virtual DOS Machine (their memory
spaces are kept separate by OS/2). However, any DOS program has almost
complete access to the files and disks, so infection can occur if the virus
infects files; any other DOS session that executes a program infected by
a virus that makes itself memory resident would itself become infected.
</P>

<P>Also, bear in mind that generally all DOS sessions share the same copy
of the command interpreter. Hence if <B>it</B> becomes infected, the virus
will be active in <B>all</B> DOS sessions. </P>

<H3><A NAME="E14"></A>E14) Can normal DOS viruses work under MS Windows?</H3>

<P>Most of them cannot. A system that runs exclusively MS Windows is, in
general, more virus-resistant than a plain DOS system. The reason is that
most resident viruses are not compatible with the memory management in
Windows. Furthermore, most existing viruses will damage Windows applications
if they try to infect them as normal (i.e. DOS) EXE files. The damaged
applications will stop working and this will alert the user that something
is wrong. </P>

<P>Virus-resistant however, is by no means virus-proof. For instance, most
of the well-behaved resident viruses that infect only COM files (Cascade
is an excellent example), will work perfectly in a &quot;DOS box&quot;.
All non-resident COM infectors will be able to run and infect too. Aside
from DOS viruses, MS Windows users can also contract several currently
known Windows-specific viruses, which are able to infect Windows applications
properly (i.e., they are compatible with the NewEXE file format). </P>

<P>Any low level trapping of Interrupt 13, as by resident boot sector and
MBR viruses, can also affect Windows operation, particularly if protected
disk access (32BitDiskAccess=ON in SYSTEM.INI) is used. </P>

<H3><A NAME="E15"></A>E15) Can I get a virus from reading e-mail, BBS message
forums or USENET News?</H3>

<P>In general terms, the answer is no. E-mail messages and postings on
BBSes and News are text data and will not be executed as programs. Computer
viruses are programs, and must be executed to do anything, so the simple
act of reading online messages doesn't pose a threat of catching a computer
virus. </P>

<P>There are a few provisos to be made. If your computer uses ANSI screen
and keyboard controls, you may be susceptible to an ANSI bomb (see <A HREF="#B14">B14</A>).
An ANSI bomb may, merely by being placed in text read on the screen, temporarily
redefine keys on the keyboard to perform various functions. It is, however,
very unlikely that you will ever see an ANSI bomb in e-mail, or that it
could do significant damage while you are reading mail. </P>

<P>Another possibility is that mail can be used to send programs. To do
this program files have to be encoded into a special form so the binary
(8-bit) program files are not corrupted by transfer over the text-only
(7-bit) e-mail transport medium. Probably the commonest of these encoding
schemes is uuencoding, though there are several others. If you receive
an encoded program, you normally have to use a decoding program or special
option in your e-mail program to extract it and decode it before it can
be run. Once you have extracted the program though, you should then treat
it as you would any other program whose source you do not know, and test
it before you run it. </P>

<P>A third possibility is with the newer, highly-automated online systems.
Some of these attempt to make online access much easier for the user by
automating such features as file transfer and program updates. At least
one commercial online service is known to have the capability of sending
new programs to the user and to invoke those programs while the user is
still online. While there is no reason to assume that any service that
does this <B>will</B> infect you, any time things are going on that you
are not being told about, you are at greater risk. </P>

<H3><A NAME="E16"></A>E16) Can a virus &quot;hide&quot; in a GIF or JPEG
file?</H3>

<P>The simple answer is &quot;no&quot;. The complete answer is more complex.
</P>

<P>GIF and JPEG (.JPG) files contain compressed graphical information.
Every now and then, rumors arise that is possible to infect those files
with a virus in such a way, that it will spread when you display one of
these images. This is technically impossible--no part of the GIF or JPEG
format contains code that is executed by the viewer program. </P>

<P>It <B>is</B> possible to use the least significant bit of the color
information for each pixel in GIF files to store additional information,
without visibly altering the quality of the picture contained in the file.
This is called &quot;steganography&quot; and is sometimes used to transmit
secretly encrypted messages. Since a virus is nothing more than information,
it is possible to &quot;encode&quot; it into a GIF file and transmit it
this way. However, the recipients must be aware that the GIF file contains
such hidden information and take some deliberate steps to extract it--it
cannot happen against their will. </P>

<P>
<HR></P>

<H2>Section F. Miscellaneous Questions</H2>

<H3><A NAME="F01"></A>F1) How many viruses are there?</H3>

<P>It is not possible to give an exact number because new viruses are literally
being created every day. Furthermore, different antivirus researchers use
different criteria to decide whether two viruses are different or one and
the same. Some count viruses as different if they differ by at least one
bit in their non-variable code. Others group viruses in families and do
not count the closely related variants within a family as different viruses.
</P>

<P>Further, some antivirus researchers have samples in their collections
that they count as viruses, but that several other experts strongly deny
are viruses. Sometimes these are &quot;partial viruses&quot;, where a virus
has not properly infected a host and are therefore non-infective, other
times they are well-known non-viruses. As some of these non-viruses are
known to be in some of the common test sets, some antivirus software vendors
count them amongst the viruses they detect. </P>

<P>As of January 1995 there were about 5,600 PC viruses, about 150 Amiga
viruses, about 100 Acorn Archimedes viruses, about 45 Macintosh viruses,
several Atari ST viruses, a few Apple II viruses, four Unix viruses, three
MS Windows viruses, at least two OS/2 viruses and two VMS DCL-based viruses.
</P>

<P>Fortunately, few of the existing viruses are widespread. For instance,
only about three dozen of the known PC viruses cause most of the reported
infections and fewer than 200 PC viruses have been found in the wild at
all. </P>

<H3><A NAME="F02"></A>F2) How do viruses spread so quickly?</H3>

<P>This is a very complex issue, and some viruses don't spread quickly
at all (though talk of them often does!). </P>

<P>Those that do spread widely are able to do so for a variety of reasons.
A large target population--millions of compatible computers--helps. A large
virus population helps. Vendors whose quality assurance relies on, for
example, outdated scanners, help. Users who gratuitously install new software
on their systems without making any attempt to test for viruses help. All
of these things are factors. </P>

<H3><A NAME="F03"></A>F3) What is the correct plural of &quot;virus&quot;?
&quot;Viruses&quot; or &quot;viri&quot; or &quot;virii&quot; or &quot;vira&quot;
or...</H3>

<P>The correct English plural of &quot;virus&quot; is &quot;viruses&quot;.
The Latin word is a mass noun (like &quot;air&quot;) and, therefore, there
is no correct Latin plural. Please use &quot;viruses&quot;, and if people
use other forms, please do <B>not</B> use Virus-L/comp.virus to correct
them. </P>

<H3><A NAME="F04"></A>F4) When reporting a virus infection (and looking
for assistance), what information should be included?</H3>

<P>People frequently post messages to Virus-L/comp.virus requesting assistance
with a suspected virus problem. Quite often the information supplied is
insufficient for the various experts on the list to be able to help at
all. Also, please note that any such assistance from members of the list
is provided on a voluntary basis; be grateful for any help received. Try
to provide the following information in your requests for assistance: </P>

<OL>
<LI>The date and location (town and country) of suspected infection. </LI>

<LI>The name of the virus (if known) </LI>

<LI>The program (or programs) and version that called the virus by that
name. </LI>

<LI>Any other antivirus software that you are running and whether it has
been able to detect the virus or not, and if yes, what name it called the
virus. </LI>

<LI>Your software and hardware configuration (computer type, kinds of disk(ette)
drives, amount of memory and configuration (extended/expanded/conventional),
the exact version of your OS, TSR programs and device drivers used, control
panels and INITs, etc.). </LI>

<LI>Any &quot;unusual&quot; behavior that has occurred recently and any
new software (including upgrades) you have recently installed. </LI>
</OL>

<P>It is helpful if you can use more than one scanning program to identify
a virus, and to say which scanner gave which identification. However, some
scanning programs leave &quot;scan strings&quot; in memory which will confuse
others, so it is best to do a &quot;cold reboot&quot; between runs of successive
scanners, particularly if you are getting conflicting results (see C6).
</P>

<H3><A NAME="F05"></A>F5) How often should we upgrade our antivirus tools
to minimize software and labor costs and maximize our protection?</H3>

<P>This is a difficult question to answer. Antivirus software is a kind
of insurance, and these type of calculations are difficult. </P>

<P>There are two things to watch out for here: the general &quot;style&quot;
of the software, and the scan strings that scanners use to identify viruses.
Scanners should be updated more frequently than other software, and it
is probably a good idea to update a scanner's set of scan strings at least
once every two months. In the six or so months prior to January 1995, most
of the popular PC-based virus scanners typically added detection of about
500-600 new viruses or variants--this averages out to between two and three
new viruses per day! </P>

<P>Some antivirus software looks for changes to programs or specific types
of viral &quot;activity&quot;, and these programs generally claim to be
good for &quot;all current and future viral programs&quot;. However, even
these programs cannot guarantee to protect against all future viruses,
as new &quot;attack&quot; and anti-antivirus methods are continually being
developed by virus writers. Thus, even this type of antivirus software
needs to be upgraded occasionally. </P>

<P>Of course, not every antivirus product is effective against all viruses,
even if upgraded regularly. Thus, do <B>not</B> depend on the fact that
you have upgraded your product recently as a guarantee that your system
is free of viruses! </P>

<H3><A NAME="F06"></A>F6) What are &quot;virus simulators&quot; and what
use are they?</H3>

<P>There are three different kinds of programs that are often called &quot;virus
simulators&quot;. None of the three generate actual viruses. The first
kind demonstrate the audio- and video-effects of some real computer viruses.
The second kind are programs that simulate a virtual environment--a virtual
computer, with virtual disks, virtual files, and virtual viruses on them.
The user of such programs can manipulate the simulated objects, letting
the simulated viruses infect the simulated files on the simulated disks,
watching every step of the process, without a danger of &quot;real infection&quot;.
The third kind are programs that generate files containing scan strings
used by some scanners to detect real viruses. The idea is that those scanners
will detect the generated files too, thus letting the user get the feeling
of what discovering a virus is like, but without the danger of risking
a real infection. </P>

<P>There are three ways in which virus simulators are usually used: </P>

<P>1) For educational purposes. The second kind of virus simulators are
very useful and valuable for this purpose, provided the simulated environment
is realistic enough. The first kind are also somewhat useful--mainly teaching
the users what the video- or audio-effects of particular viruses are like.
There is the danger, however, that users will get the incorrect impression
that <B>every</B> computer virus demonstrates itself in some visible or
audible way. The third kind of virus simulators are not useful for this
purpose--they do not show how computer viruses work, do not show what computer
viruses do, and because their virus fragments are not reliably detected
as viruses by many good scanners, may give the wrong impression of a scanner's
value. </P>

<P>2) As an installation check that antivirus defenses are installed and
working. The first and second kinds of virus simulators are unsuitable
for this, because they do not trigger any antivirus defenses. Even the
third kind of virus simulators have a rather limited value in this regard,
as the files generated by them often fail to trigger virus defenses, which
are designed to protect against <B>real</B> viruses. Unlike the producers
of such simulators, many believe it is the job of the producer of an antivirus
product to provide the means of checking whether their product is installed
and working. This position is based on the authors knowing their products
better than anyone else and that updated check methods will normally be
provided as the antivirus defenses employed in any given product change.
</P>

<P>3) As a test of the quality of the antivirus defense--usually a scanner.
Again, the first two kinds of simulators are unsuitable for this purpose
because they do not trigger antivirus defenses. The third kind of virus
simulators often do, from which many users get the impression that they
are suitable for these testing purposes. This is a serious misconception.
The files that such programs generate are not real viruses; antivirus programs,
particularly virus-specific ones like scanners, are designed to detect
real viruses. Therefore, one must not draw a conclusion from the ability
or the inability of a product to detect &quot;simulated viruses&quot; of
the third kind--the fact that they are detected does not necessarily mean
that a real virus will be detected, and the fact that they are not detected
does not mean that the real virus it is supposed to represent will not
be detected! </P>

<P>One exception to the above are simulators that do not generate files
containing scan strings, but which simulate the different kinds of attacks
that real viruses use, but without being able to replicate. Examples of
such attacks include different methods of tunnelling, stealth, attacks
against integrity checkers, and so on. Such simulators are useful for testing
antivirus products that are not virus-specific, especially if the simulator
exercises a wide range of known attacks. </P>

<H3><A NAME="F07"></A>F7) I've heard talk of &quot;good viruses&quot;.
Is it possible to use a computer virus for something useful?</H3>

<P>A very hotly debated topic that has flared-up dramatically several times
in Virus-L/comp.virus. The answer to this is not simple and largely hinges
on your definition or interpretation of the term computer virus. </P>

<P>By definition (see B1), viruses do not have to do something &quot;bad&quot;
(although many people argue that the uninvited &quot;resource wasting&quot;
that is almost inherent in viral activity is necessarily bad). From this
point (and based on his somewhat esoteric definition of the term computer
virus) Fred Cohen has argued that &quot;good&quot; or &quot;useful&quot;
computer viruses are a serious possibility. In fact, Dr. Cohen offered
a reward of $1000 for the first clearly &quot;useful&quot; virus--despite
several potential claimants, however, he hasn't paid up. </P>

<P>Although there has never been a position that was widely agreed upon
as a result of any of these discussions, many contributors to this forum
believe that there are serious problems with the idea of implementing useful
computing functionality through self-replicating programs. Vesselin Bontchev's
paper originally delivered at the 1994 EICAR conference, titled &quot;Are
`Good' Computer Viruses Still a Bad Idea?&quot;, is available by anonymous
FTP from <A HREF="ftp://ftp.informatik.uni-hamburg.de/pub/virus/texts/viruses/goodvir.zip">ftp.informatik.uni-hamburg.de</A>
(IP = 134.100.4.42), as pub/virus/texts/viruses/goodvir.zip. <B>Anyone</B>
wishing to raise this discussion in Virus-L/comp.virus again should read
and carefully consider this paper before posting. It contains many strong
arguments against the idea of &quot;good computer viruses&quot;, and some
prescriptions of how good viruses would have to be implemented and distributed
to deserve the label &quot;good&quot;. To date no strong arguments countering
the points in this paper or otherwise arguing in favor of the concept of
good viruses have been posted to the group. </P>

<H3><A NAME="F08"></A>F8) Wouldn't adding self-checking code to your programs
be a good idea?</H3>

<P>Every few months somebody suggests the idea of adding a small piece
of code to existing programs. This code would check for virus infections
when the program is executed by comparing a previously computed CRC or
cryptographic checksum (hash value) of the file in its known clean state
with its current value. The idea is that this will detect any virus infection
immediately, and is thus effective against unknown viruses. </P>

<P>A simple and intuitively attractive idea--in fact, some antivirus programs
have included options to do just this. There are, however, some serious
flaws with this approach. </P>

<P>This method cannot prevent the program from getting infected in the
first place. Further, if a program that has been protected this way becomes
infected later, whenever it is run the virus code will be activated first.
The virus may then be able to detect or even remove the self-checking code,
or it might make it totally ineffective by using stealth techniques, so
the self-checking code only &quot;sees&quot; the original, non-infected
program. </P>

<P>Some programs contain an internal self-check--much antivirus software,
for example. Such internal code might also be unable to detect stealth
viruses, but unless the external self-check code uses stealth techniques
too, the result will be a conflict, where the internal check will notice
the newly added code and decide that it has been &quot;infected&quot;.
</P>

<P>Moreover, this method is ineffective against &quot;companion&quot; viruses
that don't modify the applications they infect. </P>

<P>It may not be possible to protect all programs this way. For example,
under DOS it is relatively easy to add code of this type to most COM files
(unless the original program was slightly less than 64K, and the resulting
file would break that limit). However, EXE files are more of a problem--especially
those containing internal overlays, where one cannot append the code to
the file, as the resulting file might become too big to load. Windows applications
are also a problem, as they have two different entry points, and special
care has to be taken to handle that correctly. </P>

<P>On the other hand, adding internal self-checking to programs as part
of their development is a good idea. Although it has the same limitations
regarding stealth viruses, it does not cause the conflicts described above,
and can be put in any program at compile-time. It is also much more difficult
for viruses to bypass. </P>

<P>
<HR></P>

<H2>Section G. Specific Virus and Antivirus Software Questions...</H2>

<H3><A NAME="G01"></A>G1) I was infected by the Jerusalem virus and disinfected
the infected files with my favorite antivirus program. However, WordPerfect
and some other programs still refuse to work. Why?</H3>

<P>The Jerusalem virus and WordPerfect 4.2 program combination is an example
of a virus and program that cannot be completely disinfected by an antivirus
tool. In some cases such as this, the virus will destroy code by overwriting
it instead of appending itself to the file. The only solution is to re-install
the programs from clean (non-infected) backups or distribution media (see
<A HREF="#D10">D10</A> and <A HREF="#E08">E8</A>). </P>

<H3><A NAME="G02"></A>G2) Is my disk infected with the Stoned virus?</H3>

<P>Of course the answer to this, and many similar questions, is to obtain
a good virus detector. There are many to choose from, including ones that
will scan diskettes automatically as you use them. As Stoned is a boot
sector infector, remember to check all diskettes, even non-system or &quot;data&quot;
diskettes (see <A HREF="#E01">E1</A>). </P>

<P>It is possible, if you have an urgent need to check a system when you
don't have any antivirus tools, to run CHKDSK or MEM and note down the
values reported (see <A HREF="#C01">C1</A>) and then to boot from a known
clean system diskette and compare the results returned by CHKDSK or MEM.
If the total amount of conventional memory reported is different between
the two boots then you may have a viral problem but this information alone
cannot tell us if it is Stoned. If you cannot see the PC's hard disk (usually
the C: drive) then it is even more likely you have a virus problem, though
definitely not Stoned. If you have a &quot;disk editor&quot; type program,
looking at the boot sector of a suspect floppy, or the MBR of the suspect
hard drive may be helpful. If you have Stoned, the first byte will indicate
the characteristic far jump of the virus (hex: EA) instead of the more
common short jump (hex: EB) of the boot loader. Even if that is the first
byte, you could be looking at a perfectly good disk that has been &quot;inoculated&quot;
against the virus <B>or</B> is infected with some other virus which makes
similar changes, or at a diskette that seems safe but contains a totally
different type of virus. </P>

<H3><A NAME="G03"></A>G3) I was told that the Stoned virus displays the
text &quot;Your PC is now Stoned&quot; at boot time. I have been infected
by this virus several times, but have never seen the message. Why?</H3>

<P>The &quot;original&quot; Stoned message was &quot;.Your PC is now Stoned!&quot;,
where the &quot;.&quot; represents the &quot;bell&quot; character (ASCII
7 or &quot;PC speaker beep&quot;). The message is displayed with a probability
of 1 in 8 <B>only</B> when a PC is booted from an infected <B>diskette</B>.
When booting from an infected hard disk, Stoned never displays this message.
</P>

<P>Further, versions of Stoned with no message whatsoever or only the leading
bell character have become very common. These versions of Stoned are likely
to go unnoticed by all but the most observant, even when regularly booting
from infected diskettes. </P>

<P>Contrary to some reports, the Stoned virus does <B>not</B> display the
message &quot;LEGALISE MARIJUANA&quot;, although such a string is quite
clearly visible in the boot sectors of diskettes and MBR's of hard disks
infected with the &quot;original&quot; version of Stoned. </P>

<H3><A NAME="G04"></A>G4) I was infected by both Stoned and Michelangelo.
Why has my computer become unbootable? And why, each time I run my favorite
scanner, does it find one of the viruses and say that it is removed, but
when I run it again, it says that the virus is still there?</H3>

<P>These two viruses store the original Master Boot Record at one and the
same place on the hard disk. They do not recognize each other, and therefore
a computer can become infected with both of them at the same time. </P>

<P>The first of these viruses that infects the computer will overwrite
the Master Boot Record with its body and store the original MBR at a certain
place on the disk. So far, this is normal for a boot-record virus. But
if now the other virus infects the computer too, it will replace the MBR
(which now contains the virus that has come first) with its own body, and
store what it believes is the original MBR (but in fact is the body of
the first virus) <B>at the same place</B> on the hard disk, thus <B>overwriting</B>
the original MBR. When this happens, the contents of the original MBR are
lost. Therefore the disk becomes non-bootable. </P>

<P>When a virus removal program inspects such a hard disk, it will see
the <B>second</B> virus in the MBR and will try to remove it by overwriting
it with the contents of the sector where this virus normally stores the
original MBR. However, now this sector contains the body of the <B>first</B>
virus. Therefore, the virus removal program will install the first virus
in trying to remove the second. In all probability it will not wipe out
the sector where the (infected) MBR has been stored. </P>

<P>When the program is run again, it will find the <B>first</B> virus in
the MBR. By trying to remove it, the program will get the contents of the
sector where this virus normally stores the original MBR, and will move
it over the current (infected) MBR. Unfortunately, this sector still contains
the body of the <B>first</B> virus. Therefore, the body of this virus will
be re-installed over the MBR ad infinitum. </P>

<P>There is no easy solution to this problem, since the contents of the
original MBR are lost. The only solution for the antivirus program is to
detect that there is a problem, and to overwrite the contents of the MBR
with a valid MBR program, which the antivirus program has to provide itself.
If your favorite antivirus program is not that smart, consider replacing
it with a better one, or try using the boot sector disinfection procedure
described elsewhere (see <A HREF="#C03">C3</A>). </P>

<P>In general, infection of the same file or area by multiple viruses is
possible and vital areas of the original may be lost. This can make it
difficult or impossible for virus disinfection tools to be effective, and
replacement of the lost file/area will be necessary. </P>

<H3><A NAME="G05"></A>G5) My scanner finds the Filler and/or Israeli Boot
virus in memory, but after I boot from a clean floppy it reports no viruses.
Am I infected?</H3>

<P>This is almost certainly a &quot;false positive&quot; (see <A HREF="#C05">C5</A>).
One particular, popular antivirus product (usually its TSR scanner/monitor
VSAFE) leaves its scan strings in memory in an unencoded form, and is well-known
for causing false positives on Filler and Israeli Boot. Your other scanner
sees the first's scan strings (at least those for Filler and/or Israeli
Boot) and reports a virus in memory. When you boot from a floppy you (probably)
are not loading the resident scanner, so it doesn't have a chance to &quot;booby-trap&quot;
your other scanner. To fix this problem, try adding &quot;REM &quot; to
the beginning of the line in your AUTOEXEC.BAT or CONFIG.SYS file that
loads the suspect TSR, and see if the problem disappears. </P>

<H3><A NAME="G06"></A>G6) I was infected with Flip and now a large part
of my hard disk seems to have disappeared. What has happened?</H3>

<P>Flip has a logic error, probably based on its author only knowing about
hard disk partitioning schemes under DOS 3.x (where partitions could not
exceed 32MB in size). </P>

<P>Part of Flip's infection routine decrements by six the &quot;total number
of sectors&quot; field in the BIOS Parameter Block (BPB--a table of critical
disk geometry data) in the DOS boot sector of the boot partition. For partitions
of 32MB and under this field is meaningful, but in larger partitions, this
field is set to zero and a field in the &quot;extended BPB&quot; contains
the &quot;big number of sectors&quot; for that partition instead. Not knowing
about larger partitions, Flip renders the large partitions it meets a shade
under 32MB. The fix for this is to use a disk sector editor to set the
word at offset 13h of the affected DOS boot sector to &quot;00 00&quot;
(they should be set to &quot;FA FF&quot; if the situation above applies).
If you don't understand these instructions, do <B>not</B> attempt to follow
them and seek the help of a more technically knowledgeable person. </P>

<H3><A NAME="G07"></A>G7) What does the GenB and/or the GenP virus do?</H3>

<P>There is no such thing as <B>the</B> GenB or GenP virus. It is a heuristic
used by a very popular scanner to detect boot sector viruses and means
&quot;There is something very suspicious in the boot sector (GenB) or in
the MBR (GenP), and I am pretty sure that it is a virus, however, I have
no idea which particular virus it might be&quot;. You should run a scanner
which has better recognition and identification capabilities (see <A HREF="#B15">B15</A>),
if you want to know which particular virus you have. One advantage of the
GenB/GenP report is that you can often use the disinfection utility from
the same producer to remove the virus, even if no other scanner can remove
it. When told to remove the GenB/GenP &quot;virus&quot;, the utility scans
the disk for something that looks like a saved copy of the original boot
sector or MBR and will put it back in place, thus removing the virus, or
it writes a good generic MBR if there is an apparently valid partition
table in the virus MBR. </P>

<H3><A NAME="G08"></A>G8) How do I &quot;boot from a clean floppy&quot;?</H3>

<P>&quot;Put it in the A: drive and turn the power on.&quot; </P>

<P>The facetious answer aside, the real question here is usually more one
of &quot;How do I ensure I have a clean boot floppy?&quot; </P>

<P>As with so many issues concerning viruses, the important thing is to
be prepared <B>in advance</B>. As with backups, a current, clean boot disk
should be a standard part of every personal computer system, as there are
other occasions than when facing a real or suspected virus infection where
being able to boot your computer to a &quot;known good&quot; state are
useful or desirable (e.g. you accidentally delete your disk-compression
driver from your hard disk). As with backups, a current, clean boot disk
is one of the standard parts of a personal computer system most commonly
missing. </P>

<P>The important thing in preparing a clean boot diskette, especially where
it has to be used with a (suspected) virus infection, is that it must <B>not</B>
run a single byte of code from your hard disk. This means your boot floppy
must contain all the basic operating system files, device drivers and configuration
commands necessary to make your system minimally usable. This diskette
must be prepared on a system that is, itself, guaranteed &quot;clean&quot;
and it should be write-protected immediately after it is completed. Aside
from a basic, minimal operating system, your emergency boot diskette should
contain the utilities necessary to install your OS to a hard disk <B>and</B>
basic diagnostic or &quot;fix it&quot; programs and your favorite antivirus
tools. Depending upon disk space considerations, you may need additional
diskettes to hold all these utilities. For example, if you use DOS it is
a good idea to copy the following utility programs to your emergency boot
disk (if your version of DOS includes them): FDISK, CHKDSK and/or SCANDISK,
FORMAT, SYS, MEM, UNFORMAT, UNDELETE, MSD. </P>

<P>When it comes to rebooting your computer from a clean system disk, it
is most important that you perform a &quot;cold start&quot;. On a PC, this
means pressing the reset button or turning the power off on again, <B>not</B>
by pressing Ctrl-Alt-Del. Regardless of the machine type, if you are unsure,
use the power off then power on method just described. It is even more
important that your machine is correctly configured to try booting from
the floppy first. Most contemporary BIOSes have an option to select the
boot order (A: then C: or C: then A:)--this must be set to A: then C: for
this procedure, though normally we strongly recommend that you set this
option to C: then A:. </P>

<P>As systems change from time to time, you may occasionally need to update
this most critical of diskettes so it will still boot your system to a
usable state. As you may have recently contracted a new virus that bypasses
your current antivirus precautions, this update process can put you at
risk of infecting your &quot;clean&quot; emergency boot diskette. Because
of this, it is prudent to have two such diskettes. With system changes
you would update these in a &quot;leap frog&quot; manner. This means your
previous emergency boot diskette might still bring your machine up to a
minimally useful state (such that you may still be able to make repairs)
should your updated emergency boot diskette be infected by a previously
unknown virus. </P>

<P>Unfortunately, this isn't the whole story either! A PC virus known as
EXE_Bug can fake out the boot process by setting the PC's CMOS to look
as if there are no floppy drives in the machine. Most BIOS'es don't even
try to boot from a floppy in this case, and go straight to the hard disk,
loading the virus from the MBR. When EXE_Bug first loads into memory, it
checks to see if there is a diskette in the first floppy drive, and if
there is, it loads the boot sector from the diskette and lets the floppy
boot as normal. Most people don't notice the subtly different boot time
and drive access order involved in this, so they think they have booted
clean, when in fact the virus is active in memory! To circumvent this possibility,
you have to check the PC's CMOS settings before letting the floppy boot
proceed, make sure that your PC &quot;knows&quot; it has a floppy drive,
<B>and</B>, with some PCs, make sure that the boot order option is set
to &quot;A: then C:&quot;. This presents a chicken-and-egg situation on
some machines, as you may have to boot DOS on the machine to be able to
run the utility program that lets you change its CMOS settings. </P>

<P>Remember, if you changed your BIOS's boot order option, set it back
to C: then A: after disinfecting your PC. </P>

<H3><A NAME="G09"></A>G9) My PC diagnostic utility lists &quot;Cascade&quot;
amongst the hardware interrupts (IRQs). Does this mean I have the Cascade
virus?</H3>

<P>No! This is quite normal on AT-style (286 and better) PCs (and on a
few 8086 (XT) class machines). The original IBM PC design had one Programmable
Interrupt Controller (PIC) to handle hardware interrupts generated when
devices like disk controllers, serial and parallel ports, LAN adaptors,
etc have to be serviced. While developing the AT, IBM decided that the
eight Interrupt ReQuest (IRQ) lines the original PIC supported were probably
insufficient for likely future expansion needs, so they added a second
PIC. The two PIC's had to cooperate, so both didn't interrupt the CPU concurrently.
This was achieved by having the second PIC use an IRQ to signal the first
PIC when it has an IRQ to service. IRQs 2 and 9 were used for this and
are commonly called the &quot;cascade&quot; IRQ, as they allow the second
PIC to cascade an IRQ down to the first PIC. </P>

<H3><A NAME="G10"></A>G10) Occasionally the text &quot;welcome datacomp&quot;
appears in my Mac documents without me typing it. Is this a virus?</H3>

<P>Most likely not. This phenomenon has been reported for a particular
make/model of third-party Macintosh-compatible keyboard. It appears to
be a practical joke, coded into the keyboard's ROM, that causes the keyboard
to output that text (as if it was typed) after a period of keyboard inactivity.
The only practical fix is to replace the keyboard. This is, in effect,
a hardware (technically &quot;firmware&quot;) Trojan Horse--the keyboard
has features or functions that are not advertised and that will be performed
without the owner's or user's wish or permission. </P>

<H3><A NAME="G11"></A>G11) How good are the antivirus tools included with
MS-DOS 6?</H3>

<P>While this FAQ sheet avoids answering specific questions about particular
antivirus software (partly because the ground tends to move very quickly!),
the antivirus tools included with MS-DOS 6 are very widely distributed
and accessible. We will not give a wide-ranging answer here, but will point
out that Microsoft Corporation does not use MSAV but a competitor's product.
We suggest that anyone considering using the antivirus tools supplied with
MS-DOS 6 as a significant part of their virus defense should read the review
available by anonymous FTP from (amongst others) <A HREF="ftp://ftp.informatik.uni-hamburg.de/pub/virus/texts/viruses/msaveval.zip">ftp.informatik.uni-hamburg.de</A>
(IP = 134.100.4.42) as /pub/virus/texts/viruses/msaveval.zip. </P>

<H3><A NAME="G12"></A>G12) When I do a &quot;DIR | MORE&quot;, I see two
files with random names that are not there when I just use &quot;DIR&quot;.
On my friends's system they cannot be seen. Do I have a virus?</H3>

<P>No. DOS's default commandline interpreter (COMMAND.COM) creates two
temporary files with unique names for every pipe character (&quot;|&quot;)
used on the command line. Starting with DOS version 5.0, these files are
created in the directory pointed to by the TEMP environment variable, not
in the current directory as they were in earlier DOS versions. If your
TEMP setting is invalid or you have an earlier version of DOS you will
see these files in the current directory when you pipe the output of a
DIR command through MORE (or any other filter). If you don't see these
files in the current directory's listing, performing the command &quot;DIR
| MORE&quot; on the directory specified by the TEMP variable will reveal
them. </P>

<P>Generally, you would be better to use &quot;DIR /P&quot; instead of
&quot;DIR | MORE&quot;, as this avoids the creation of the temporary files.
If you use an alternative commandline interpreter, none of the above may
apply. </P>

<H3><A NAME="G13"></A>G13) What is the ChipAway virus? (Or ChipAwayVirus?)</H3>

<P>The ChipAway virus is not a virus at all. In fact, it is a poorly chosen
name for a good idea. Many PCs have an advanced BIOS feature that, when
activated, prevents any writes to the MBR through BIOS disk routines. If
active, this feature can cause problems if you install non-DOS operating
systems (like OS/2, Windows 95 or Windows NT), as their installation routines
typically need to write to the MBR, but for general purpose computers,
it is a good idea to turn on these options, if they exist. </P>

<P>Unfortunately, one of the earliest and most widely available implementations
of this idea prints a message on screen at each system startup to the effect
&quot;ChipAwayVirus installed&quot;. This is supposed to calm the owner's
nerves, making them confident that their BIOS antivirus system is working
for them. For fairly obvious reasons, it tends to have the opposite effect!
</P>

<P>[End of Virus-L/comp.virus FAQ sheet] </P>

</BODY>
</HTML>
